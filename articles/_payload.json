[{"data":1,"prerenderedAt":4499},["ShallowReactive",2],{"articles":3},[4,1140,1501,2427,3160,3424],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"cover":11,"author":12,"date":15,"layout":16,"body":17,"_type":1134,"_id":1135,"_source":1136,"_file":1137,"_stem":1138,"_extension":1139},"/articles/algo-vertretung-14-04-25","articles",false,"","Traveling Salesman Problem (TSP)","Brute-Force, Nearest Neighbor, and christofilf algorithm | Traveling Salesman Problem (TSP)",null,{"name":13,"avatarUrl":14},"Marc Nauendorf","https://pbs.twimg.com/profile_images/1042510623962275840/1Iw_Mvud_400x400.jpg","2025-04-23T00:00:00.000Z","page",{"type":18,"children":19,"toc":1127},"root",[20,28,34,38,95,101,107,114,433,472,476,480,486,800,841,844,847,853,1082,1121],{"type":21,"tag":22,"props":23,"children":25},"element","h1",{"id":24},"traveling-salesman-problem-tsp",[26],{"type":27,"value":9},"text",{"type":21,"tag":29,"props":30,"children":33},"iframe",{"src":31,"style":32},"https://docs.google.com/viewer?url=https://github.com/Nr44suessauer/nr44suessauer.github.io/raw/main/nuxt-app/assets/Presentation_with_marp/Algo_14.04.2025.pdf&embedded=true","width:100%; height:500px; border:none;",[],{"type":21,"tag":35,"props":36,"children":37},"hr",{},[],{"type":21,"tag":39,"props":40,"children":44},"div",{"className":41,"style":43},[42],"notebook-container","margin-top: 20px; margin-bottom: 20px;",[45,47],{"type":27,"value":46},"\n    ",{"type":21,"tag":48,"props":49,"children":50},"details",{},[51,53,60,61,94],{"type":27,"value":52},"\n        ",{"type":21,"tag":54,"props":55,"children":57},"summary",{"style":56},"cursor: pointer; font-weight: bold; padding: 10px; background-color: #f0f0f0; border: 1px solid #ccc; border-radius: 5px;",[58],{"type":27,"value":59},"\n            Jupyter Notebook: SalesMan Problem Neuste & Complete Version (Click to Show/Hide)\n        ",{"type":27,"value":52},{"type":21,"tag":39,"props":62,"children":64},{"style":63},"border: 1px solid #ddd; padding: 15px; margin-top: 10px; background-color: #f9f9f9;",[65,67,76,77,93],{"type":27,"value":66},"\n            ",{"type":21,"tag":29,"props":68,"children":74},{"src":69,"width":70,"height":71,"style":72,"allowFullScreen":73},"https://nbviewer.org/github/Nr44suessauer/SalesMan/blob/main/SalesMan_Problem.ipynb","100%",800,"border: none;",true,[75],{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":78,"props":79,"children":81},"p",{"style":80},"text-align: center; margin-top: 10px;",[82,84,92],{"type":27,"value":83},"\n                ",{"type":21,"tag":85,"props":86,"children":89},"a",{"href":87,"target":88},"https://github.com/Nr44suessauer/SalesMan/blob/main/SalesMan_Problem.ipynb","_blank",[90],{"type":27,"value":91},"\n                    Open Notebook on GitHub\n                ",{"type":27,"value":66},{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":96,"props":97,"children":98},"title",{},[99],{"type":27,"value":100},"Algorithm Animations",{"type":21,"tag":102,"props":103,"children":104},"style",{},[105],{"type":27,"value":106},"\n        /* Common styles */\n        canvas {\n            border: 1px solid black;\n            display: block;\n        }   \n        /* Christofides styles */\n        .container {\n            display: flex;\n        }\n        .animation-container {\n            flex: 1;\n        }\n        #infoPanel {\n            flex: 0 0 500px;\n            margin-left: 20px;\n            background: #f2f2f2;\n            padding: 10px;\n            font-family: sans-serif;\n            font-size: 14px;\n            overflow-y: auto;\n            max-height: 900px;\n        }\n        .controls > div {\n            margin: 10px 0;\n        }\n        .controls > div > * {\n            margin-right: 10px;\n        }\n        #speedSlider,\n        #numPoints {\n            transform: scale(1);\n            transform-origin: left center;\n        }     \n        /* Nearest Neighbor styles */\n        .nn-container {\n            display: flex;\n        }\n        .nn-animation-container {\n            flex: 1;\n        }\n        #nnInfoPanel {\n            flex: 0 0 500px;\n            margin-left: 20px;\n            background: #f2f2f2;\n            padding: 10px;\n            font-family: sans-serif;\n            font-size: 14px;\n            overflow-y: auto;\n            max-height: 900px;\n        }\n        #nnCanvas {\n            border: 1px solid black;\n            display: block;\n        }\n        .nn-controls > div {\n            margin: 10px 0;\n        }\n        .nn-controls > div > * {\n            margin-right: 10px;\n        }\n        .selection-table {\n            width: 100%;\n            border-collapse: collapse;\n            margin: 10px 0;\n        }\n        .selection-table th, .selection-table td {\n            border: 1px solid #ddd;\n            padding: 4px;\n            text-align: center;\n        }\n        .selection-table .selected {\n            background-color: #d4ffd4;\n            font-weight: bold;\n        }\n        /* Dark Mode anpassungen für Tabellen */\n        @media (prefers-color-scheme: dark) {\n            .selection-table th, .selection-table td {\n                border-color: #555;\n            }\n            .selection-table .selected {\n                background-color: #2a472a;\n                font-weight: bold;\n            }\n            /* Verbesserte Sichtbarkeit für den Haken im Dark Mode */\n            .selection-table td:last-child {\n                color: #fff;\n            }\n            /* Hervorgehobene Markierung für den kürzesten Pfad */\n            .selection-table .selected td:last-child {\n                color: #4CAF50;\n                font-size: 1.2em;\n                font-weight: bold;\n            }\n            /* Verbesserte Sichtbarkeit für die Jupyter Notebook Buttons im Dark Mode */\n            .notebook-container details summary, \n            details.notebook-details summary, \n            body.dark-mode .notebook-container details summary,\n            body.dark-theme .notebook-container details summary {\n                background-color: #444 !important;\n                color: #fff !important;\n                border-color: #666 !important;\n            }\n        }\n        /* Brute Force styles */\n        .bf-container {\n            display: flex;\n        }\n        .bf-animation-container {\n            flex: 1;\n        }\n        #bfInfoPanel {\n            flex: 0 0 500px;\n            margin-left: 20px;\n            background: #f2f2f2;\n            padding: 10px;\n            font-family: sans-serif;\n            font-size: 14px;\n            overflow-y: auto;\n            max-height: 900px;\n        }\n        #bfCanvas {\n            border: 1px solid black;\n            display: block;\n        }\n        .bf-controls > div {\n            margin: 10px 0;\n        }\n        .bf-controls > div > * {\n            margin-right: 10px;\n        }\n    ",{"type":21,"tag":108,"props":109,"children":111},"h3",{"id":110},"brute-force-algorithm",[112],{"type":27,"value":113},"Brute Force Algorithm",{"type":21,"tag":39,"props":115,"children":118},{"className":116},[117],"bf-container",[119,120,400,401,432],{"type":27,"value":52},{"type":21,"tag":39,"props":121,"children":124},{"className":122},[123],"bf-animation-container",[125,126,392,393,399],{"type":27,"value":66},{"type":21,"tag":39,"props":127,"children":130},{"className":128},[129],"bf-controls",[131,132,176,177,391],{"type":27,"value":83},{"type":21,"tag":39,"props":133,"children":134},{},[135,137,143,144,150,151,156,157,165,166,175],{"type":27,"value":136},"\n                    ",{"type":21,"tag":138,"props":139,"children":140},"button",{},[141],{"type":27,"value":142},"Next Step",{"type":27,"value":136},{"type":21,"tag":138,"props":145,"children":147},{"style":146},"background-color: #ff5555; color: white;",[148],{"type":27,"value":149},"Reset",{"type":27,"value":136},{"type":21,"tag":138,"props":152,"children":153},{},[154],{"type":27,"value":155},"Start/Stop Animation",{"type":27,"value":136},{"type":21,"tag":158,"props":159,"children":162},"label",{"htmlFor":160},[161],"bfSpeedSlider",[163],{"type":27,"value":164},"Speed:",{"type":27,"value":136},{"type":21,"tag":167,"props":168,"children":174},"input",{"type":169,"id":161,"min":170,"max":171,"step":172,"value":173},"range","50","4000","1","300",[],{"type":27,"value":83},{"type":27,"value":83},{"type":21,"tag":39,"props":178,"children":179},{},[180,181,188,189,197,198,203,204,209,210,215,216,223,224,229,230,235,236,384,385,390],{"type":27,"value":136},{"type":21,"tag":158,"props":182,"children":185},{"htmlFor":183},[184],"bfNumPoints",[186],{"type":27,"value":187},"Number of points:",{"type":27,"value":136},{"type":21,"tag":167,"props":190,"children":196},{"type":191,"id":184,"min":192,"max":193,"value":194,"style":195},"number","3","25","4","width:50px; height:30px;",[],{"type":27,"value":136},{"type":21,"tag":138,"props":199,"children":200},{},[201],{"type":27,"value":202},"Random Points",{"type":27,"value":136},{"type":21,"tag":138,"props":205,"children":206},{},[207],{"type":27,"value":208},"Import Christofides Points",{"type":27,"value":136},{"type":21,"tag":138,"props":211,"children":212},{},[213],{"type":27,"value":214},"Import NN-Points",{"type":27,"value":136},{"type":21,"tag":158,"props":217,"children":220},{"htmlFor":218},[219],"bfStartPoint",[221],{"type":27,"value":222},"Start point:",{"type":27,"value":136},{"type":21,"tag":167,"props":225,"children":228},{"type":191,"id":219,"min":226,"max":227,"value":226,"style":195},"0","24",[],{"type":27,"value":136},{"type":21,"tag":138,"props":231,"children":232},{},[233],{"type":27,"value":234},"Set Start Point",{"type":27,"value":136},{"type":21,"tag":237,"props":238,"children":241},"select",{"id":239,"style":240},"bfConstellationSelect","height:30px;",[242,244,250,251,257,258,264,265,271,272,278,279,285,286,292,293,299,300,306,307,313,314,320,321,327,328,334,335,341,342,348,349,355,356,362,363,369,370,376,377,383],{"type":27,"value":243},"\n                        ",{"type":21,"tag":245,"props":246,"children":247},"option",{"value":8},[248],{"type":27,"value":249},"Choose constellation...",{"type":27,"value":243},{"type":21,"tag":245,"props":252,"children":254},{"value":253},"libra",[255],{"type":27,"value":256},"Libra - 10 points",{"type":27,"value":243},{"type":21,"tag":245,"props":259,"children":261},{"value":260},"orion",[262],{"type":27,"value":263},"Orion - 10 points",{"type":27,"value":243},{"type":21,"tag":245,"props":266,"children":268},{"value":267},"ursa_minor",[269],{"type":27,"value":270},"Ursa Minor - 7 points",{"type":27,"value":243},{"type":21,"tag":245,"props":273,"children":275},{"value":274},"cassiopeia",[276],{"type":27,"value":277},"Cassiopeia - 5 points",{"type":27,"value":243},{"type":21,"tag":245,"props":280,"children":282},{"value":281},"cygnus",[283],{"type":27,"value":284},"Cygnus - 9 points",{"type":27,"value":243},{"type":21,"tag":245,"props":287,"children":289},{"value":288},"ursa_major",[290],{"type":27,"value":291},"Ursa Major - 7 points",{"type":27,"value":243},{"type":21,"tag":245,"props":294,"children":296},{"value":295},"leo",[297],{"type":27,"value":298},"Leo - 9 points",{"type":27,"value":243},{"type":21,"tag":245,"props":301,"children":303},{"value":302},"draco",[304],{"type":27,"value":305},"Draco - 11 points",{"type":27,"value":243},{"type":21,"tag":245,"props":308,"children":310},{"value":309},"gemini",[311],{"type":27,"value":312},"Gemini - 9 points",{"type":27,"value":243},{"type":21,"tag":245,"props":315,"children":317},{"value":316},"southern_cross",[318],{"type":27,"value":319},"Southern Cross - 4 points",{"type":27,"value":243},{"type":21,"tag":245,"props":322,"children":324},{"value":323},"pegasus",[325],{"type":27,"value":326},"Pegasus - 5 points",{"type":27,"value":243},{"type":21,"tag":245,"props":329,"children":331},{"value":330},"andromeda",[332],{"type":27,"value":333},"Andromeda - 7 points",{"type":27,"value":243},{"type":21,"tag":245,"props":336,"children":338},{"value":337},"sagittarius",[339],{"type":27,"value":340},"Sagittarius - 8 points",{"type":27,"value":243},{"type":21,"tag":245,"props":343,"children":345},{"value":344},"scorpius",[346],{"type":27,"value":347},"Scorpius - 10 points",{"type":27,"value":243},{"type":21,"tag":245,"props":350,"children":352},{"value":351},"cancer",[353],{"type":27,"value":354},"Cancer - 6 points",{"type":27,"value":243},{"type":21,"tag":245,"props":357,"children":359},{"value":358},"pisces",[360],{"type":27,"value":361},"Pisces - 11 points",{"type":27,"value":243},{"type":21,"tag":245,"props":364,"children":366},{"value":365},"aquila",[367],{"type":27,"value":368},"Aquila - 7 points",{"type":27,"value":243},{"type":21,"tag":245,"props":371,"children":373},{"value":372},"hercules",[374],{"type":27,"value":375},"Hercules - 8 points",{"type":27,"value":243},{"type":21,"tag":245,"props":378,"children":380},{"value":379},"myrtana",[381],{"type":27,"value":382},"Myrtana - 5 Punkte",{"type":27,"value":136},{"type":27,"value":136},{"type":21,"tag":138,"props":386,"children":387},{},[388],{"type":27,"value":389},"Download Graph",{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":394,"props":395,"children":398},"canvas",{"id":396,"width":71,"height":397},"bfCanvas",600,[],{"type":27,"value":52},{"type":27,"value":52},{"type":21,"tag":39,"props":402,"children":404},{"id":403},"bfInfoPanel",[405,406,412,413,419,420,425,426,431],{"type":27,"value":66},{"type":21,"tag":108,"props":407,"children":409},{"id":408},"brute-force-data",[410],{"type":27,"value":411},"Brute Force Data",{"type":27,"value":66},{"type":21,"tag":39,"props":414,"children":416},{"id":415},"bfDataOutput",[417],{"type":27,"value":418},"Waiting for the first step...",{"type":27,"value":66},{"type":21,"tag":138,"props":421,"children":422},{},[423],{"type":27,"value":424},"Show/Hide Table",{"type":27,"value":66},{"type":21,"tag":39,"props":427,"children":430},{"id":428,"style":429},"bfFullTable","display: none; margin-top: 20px;",[],{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":434,"children":436},{"className":435,"style":43},[42],[437,438,471],{"type":27,"value":52},{"type":21,"tag":48,"props":439,"children":440},{},[441,442,447,448,470],{"type":27,"value":66},{"type":21,"tag":54,"props":443,"children":444},{"style":56},[445],{"type":27,"value":446},"\n                Jupyter Notebook: Brute Force TSP Implementation (Click to Show/Hide)\n            ",{"type":27,"value":66},{"type":21,"tag":39,"props":449,"children":450},{"style":63},[451,452,457,458,469],{"type":27,"value":83},{"type":21,"tag":29,"props":453,"children":455},{"src":454,"width":70,"height":71,"style":72,"allowFullScreen":73},"https://nbviewer.org/github/Nr44suessauer/SalesMan/blob/main/BruteForce_TSP.ipynb",[456],{"type":27,"value":83},{"type":27,"value":83},{"type":21,"tag":78,"props":459,"children":460},{"style":80},[461,462,468],{"type":27,"value":136},{"type":21,"tag":85,"props":463,"children":465},{"href":464,"target":88},"https://github.com/Nr44suessauer/SalesMan/blob/main/BruteForce_TSP.ipynb",[466],{"type":27,"value":467},"\n                        Open Notebook on GitHub\n                    ",{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":473,"children":475},{"style":474},"display: flex; align-items: center; margin-top: 30px;",[],{"type":21,"tag":39,"props":477,"children":479},{"style":478},"display: flex; align-items: center; margin-top: 10px;",[],{"type":21,"tag":108,"props":481,"children":483},{"id":482},"nearest-neighbor-algorithm",[484],{"type":27,"value":485},"Nearest Neighbor Algorithm",{"type":21,"tag":39,"props":487,"children":490},{"className":488},[489],"nn-container",[491,492,736,737,799],{"type":27,"value":52},{"type":21,"tag":39,"props":493,"children":496},{"className":494},[495],"nn-animation-container",[497,498,730,731,735],{"type":27,"value":66},{"type":21,"tag":39,"props":499,"children":502},{"className":500},[501],"nn-controls",[503,504,537,538,729],{"type":27,"value":83},{"type":21,"tag":39,"props":505,"children":506},{},[507,508,513,514,518,519,524,525,532,533,536],{"type":27,"value":136},{"type":21,"tag":138,"props":509,"children":510},{},[511],{"type":27,"value":512},"Nächster Schritt",{"type":27,"value":136},{"type":21,"tag":138,"props":515,"children":516},{"style":146},[517],{"type":27,"value":149},{"type":27,"value":136},{"type":21,"tag":138,"props":520,"children":521},{},[522],{"type":27,"value":523},"Animation Start/Stop",{"type":27,"value":136},{"type":21,"tag":158,"props":526,"children":529},{"htmlFor":527},[528],"nnSpeedSlider",[530],{"type":27,"value":531},"Geschwindigkeit:",{"type":27,"value":136},{"type":21,"tag":167,"props":534,"children":535},{"type":169,"id":528,"min":170,"max":171,"step":172,"value":173},[],{"type":27,"value":83},{"type":27,"value":83},{"type":21,"tag":39,"props":539,"children":540},{},[541,542,549,550,553,554,559,560,565,566,571,572,579,580,583,584,589,590,596,597,598,722,723,728],{"type":27,"value":136},{"type":21,"tag":158,"props":543,"children":546},{"htmlFor":544},[545],"nnNumPoints",[547],{"type":27,"value":548},"Anzahl der Punkte:",{"type":27,"value":136},{"type":21,"tag":167,"props":551,"children":552},{"type":191,"id":545,"min":192,"max":193,"value":194,"style":195},[],{"type":27,"value":136},{"type":21,"tag":138,"props":555,"children":556},{},[557],{"type":27,"value":558},"Zufällige Punkte",{"type":27,"value":136},{"type":21,"tag":138,"props":561,"children":562},{},[563],{"type":27,"value":564},"Christofides Punkte importieren",{"type":27,"value":136},{"type":21,"tag":138,"props":567,"children":568},{},[569],{"type":27,"value":570},"BF-Punkte importieren",{"type":27,"value":136},{"type":21,"tag":158,"props":573,"children":576},{"htmlFor":574},[575],"nnStartPoint",[577],{"type":27,"value":578},"Startpunkt:",{"type":27,"value":136},{"type":21,"tag":167,"props":581,"children":582},{"type":191,"id":575,"min":226,"max":227,"value":226,"style":195},[],{"type":27,"value":136},{"type":21,"tag":138,"props":585,"children":586},{},[587],{"type":27,"value":588},"Startpunkt setzen",{"type":27,"value":136},{"type":21,"tag":138,"props":591,"children":593},{"style":592},"background-color: #4CAF50; color: white;",[594],{"type":27,"value":595},"Besten Startpunkt finden",{"type":27,"value":136},{"type":27,"value":136},{"type":21,"tag":237,"props":599,"children":601},{"id":600,"style":240},"nnConstellationSelect",[602,603,608,609,614,615,620,621,626,627,632,633,638,639,644,645,650,651,656,657,662,663,668,669,674,675,680,681,686,687,692,693,698,699,704,705,710,711,716,717,721],{"type":27,"value":243},{"type":21,"tag":245,"props":604,"children":605},{"value":8},[606],{"type":27,"value":607},"Sternenbild wählen...",{"type":27,"value":243},{"type":21,"tag":245,"props":610,"children":611},{"value":253},[612],{"type":27,"value":613},"Waage (Libra) - 10 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":616,"children":617},{"value":260},[618],{"type":27,"value":619},"Orion - 10 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":622,"children":623},{"value":267},[624],{"type":27,"value":625},"Kleiner Bär - 7 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":628,"children":629},{"value":274},[630],{"type":27,"value":631},"Kassiopeia - 5 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":634,"children":635},{"value":281},[636],{"type":27,"value":637},"Schwan - 9 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":640,"children":641},{"value":288},[642],{"type":27,"value":643},"Großer Bär - 7 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":646,"children":647},{"value":295},[648],{"type":27,"value":649},"Löwe - 9 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":652,"children":653},{"value":302},[654],{"type":27,"value":655},"Drache - 11 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":658,"children":659},{"value":309},[660],{"type":27,"value":661},"Zwillinge - 9 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":664,"children":665},{"value":316},[666],{"type":27,"value":667},"Kreuz des Südens - 4 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":670,"children":671},{"value":323},[672],{"type":27,"value":673},"Pegasus - 5 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":676,"children":677},{"value":330},[678],{"type":27,"value":679},"Andromeda - 7 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":682,"children":683},{"value":337},[684],{"type":27,"value":685},"Schütze - 8 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":688,"children":689},{"value":344},[690],{"type":27,"value":691},"Skorpion - 10 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":694,"children":695},{"value":351},[696],{"type":27,"value":697},"Krebs - 6 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":700,"children":701},{"value":358},[702],{"type":27,"value":703},"Fische - 11 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":706,"children":707},{"value":365},[708],{"type":27,"value":709},"Adler - 7 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":712,"children":713},{"value":372},[714],{"type":27,"value":715},"Herkules - 8 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":718,"children":719},{"value":379},[720],{"type":27,"value":382},{"type":27,"value":136},{"type":27,"value":136},{"type":21,"tag":138,"props":724,"children":725},{},[726],{"type":27,"value":727},"Graph herunterladen",{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":394,"props":732,"children":734},{"id":733,"width":71,"height":397},"nnCanvas",[],{"type":27,"value":52},{"type":27,"value":52},{"type":21,"tag":39,"props":738,"children":740},{"id":739},"nnInfoPanel",[741,742,748,749,755,756,759,760,771,772,782,783,788,789,793,794,798],{"type":27,"value":66},{"type":21,"tag":108,"props":743,"children":745},{"id":744},"nearest-neighbor-daten",[746],{"type":27,"value":747},"Nearest Neighbor Daten",{"type":27,"value":66},{"type":21,"tag":39,"props":750,"children":752},{"id":751},"nnDataOutput",[753],{"type":27,"value":754},"Warte auf den ersten Schritt...",{"type":27,"value":66},{"type":21,"tag":35,"props":757,"children":758},{},[],{"type":27,"value":66},{"type":21,"tag":158,"props":761,"children":764},{"htmlFor":762},[763],"nnStepDropdown",[765],{"type":21,"tag":766,"props":767,"children":768},"strong",{},[769],{"type":27,"value":770},"Schritte:",{"type":27,"value":66},{"type":21,"tag":237,"props":773,"children":774},{"id":763},[775,776,781],{"type":27,"value":83},{"type":21,"tag":245,"props":777,"children":778},{"value":8},[779],{"type":27,"value":780},"Schritt auswählen...",{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":138,"props":784,"children":785},{},[786],{"type":27,"value":787},"Tabelle ein-/ausblenden",{"type":27,"value":66},{"type":21,"tag":39,"props":790,"children":792},{"id":791},"nnStepDetails",[],{"type":27,"value":66},{"type":21,"tag":39,"props":795,"children":797},{"id":796,"style":429},"nnFullTable",[],{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":801,"children":803},{"className":802,"style":43},[42],[804,805,840],{"type":27,"value":52},{"type":21,"tag":48,"props":806,"children":807},{},[808,809,814,815,826,828,839],{"type":27,"value":66},{"type":21,"tag":54,"props":810,"children":811},{"style":56},[812],{"type":27,"value":813},"\n                Jupyter Notebook: Nearest Neighbor TSP Implementation (Klicken zum Anzeigen/Ausblenden)\n            ",{"type":27,"value":66},{"type":21,"tag":39,"props":816,"children":818},{"style":817},"border: 1px solid #ddd; padding: 15px; margin-top: 10px; background-color: #f9f9f9; width: 100%;",[819,820,825],{"type":27,"value":83},{"type":21,"tag":29,"props":821,"children":823},{"src":822,"width":70,"height":71,"style":72,"allowFullScreen":73},"https://nbviewer.org/github/Nr44suessauer/SalesMan/blob/main/NearestNeighbor_TSP.ipynb",[824],{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":827},"     ",{"type":21,"tag":78,"props":829,"children":830},{"style":80},[831,832,838],{"type":27,"value":136},{"type":21,"tag":85,"props":833,"children":835},{"href":834,"target":88},"https://github.com/Nr44suessauer/SalesMan/blob/main/NearestNeighbor_TSP.ipynb",[836],{"type":27,"value":837},"\n                        Notebook auf GitHub öffnen\n                    ",{"type":27,"value":83},{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":842,"children":843},{"style":474},[],{"type":21,"tag":39,"props":845,"children":846},{"style":478},[],{"type":21,"tag":108,"props":848,"children":850},{"id":849},"christofides-algorithm",[851],{"type":27,"value":852},"Christofides Algorithm",{"type":21,"tag":39,"props":854,"children":857},{"className":855},[856],"container",[858,859,1062,1063,1081],{"type":27,"value":52},{"type":21,"tag":39,"props":860,"children":863},{"className":861},[862],"animation-container",[864,865,1057,1058,1061],{"type":27,"value":66},{"type":21,"tag":39,"props":866,"children":869},{"className":867},[868],"controls",[870,871,901,902,1056],{"type":27,"value":83},{"type":21,"tag":39,"props":872,"children":873},{},[874,875,879,880,884,885,889,890,896,897,900],{"type":27,"value":136},{"type":21,"tag":138,"props":876,"children":877},{},[878],{"type":27,"value":512},{"type":27,"value":136},{"type":21,"tag":138,"props":881,"children":882},{"style":146},[883],{"type":27,"value":149},{"type":27,"value":136},{"type":21,"tag":138,"props":886,"children":887},{},[888],{"type":27,"value":523},{"type":27,"value":136},{"type":21,"tag":158,"props":891,"children":894},{"htmlFor":892},[893],"speedSlider",[895],{"type":27,"value":531},{"type":27,"value":136},{"type":21,"tag":167,"props":898,"children":899},{"type":169,"id":893,"min":170,"max":171,"step":172,"value":173},[],{"type":27,"value":83},{"type":27,"value":83},{"type":21,"tag":39,"props":903,"children":904},{},[905,906,912,913,916,917,921,922,927,928,932,933,939,940,943,944,948,949,950,1050,1051,1055],{"type":27,"value":136},{"type":21,"tag":158,"props":907,"children":910},{"htmlFor":908},[909],"numPoints",[911],{"type":27,"value":548},{"type":27,"value":136},{"type":21,"tag":167,"props":914,"children":915},{"type":191,"id":909,"min":192,"max":193,"value":194,"style":195},[],{"type":27,"value":136},{"type":21,"tag":138,"props":918,"children":919},{},[920],{"type":27,"value":558},{"type":27,"value":136},{"type":21,"tag":138,"props":923,"children":924},{},[925],{"type":27,"value":926},"NN-Punkte importieren",{"type":27,"value":136},{"type":21,"tag":138,"props":929,"children":930},{},[931],{"type":27,"value":570},{"type":27,"value":136},{"type":21,"tag":158,"props":934,"children":937},{"htmlFor":935},[936],"startPointChristofides",[938],{"type":27,"value":578},{"type":27,"value":136},{"type":21,"tag":167,"props":941,"children":942},{"type":191,"id":936,"min":226,"max":227,"value":226,"style":195},[],{"type":27,"value":136},{"type":21,"tag":138,"props":945,"children":946},{},[947],{"type":27,"value":588},{"type":27,"value":136},{"type":27,"value":136},{"type":21,"tag":237,"props":951,"children":953},{"id":952,"style":240},"constellationSelect",[954,955,959,960,964,965,969,970,974,975,979,980,984,985,989,990,994,995,999,1000,1004,1005,1009,1010,1014,1015,1019,1020,1024,1025,1029,1030,1034,1035,1039,1040,1044,1045,1049],{"type":27,"value":243},{"type":21,"tag":245,"props":956,"children":957},{"value":8},[958],{"type":27,"value":607},{"type":27,"value":243},{"type":21,"tag":245,"props":961,"children":962},{"value":253},[963],{"type":27,"value":613},{"type":27,"value":243},{"type":21,"tag":245,"props":966,"children":967},{"value":260},[968],{"type":27,"value":619},{"type":27,"value":243},{"type":21,"tag":245,"props":971,"children":972},{"value":274},[973],{"type":27,"value":631},{"type":27,"value":243},{"type":21,"tag":245,"props":976,"children":977},{"value":281},[978],{"type":27,"value":637},{"type":27,"value":243},{"type":21,"tag":245,"props":981,"children":982},{"value":288},[983],{"type":27,"value":643},{"type":27,"value":243},{"type":21,"tag":245,"props":986,"children":987},{"value":295},[988],{"type":27,"value":649},{"type":27,"value":243},{"type":21,"tag":245,"props":991,"children":992},{"value":302},[993],{"type":27,"value":655},{"type":27,"value":243},{"type":21,"tag":245,"props":996,"children":997},{"value":309},[998],{"type":27,"value":661},{"type":27,"value":243},{"type":21,"tag":245,"props":1001,"children":1002},{"value":316},[1003],{"type":27,"value":667},{"type":27,"value":243},{"type":21,"tag":245,"props":1006,"children":1007},{"value":323},[1008],{"type":27,"value":673},{"type":27,"value":243},{"type":21,"tag":245,"props":1011,"children":1012},{"value":330},[1013],{"type":27,"value":679},{"type":27,"value":243},{"type":21,"tag":245,"props":1016,"children":1017},{"value":337},[1018],{"type":27,"value":685},{"type":27,"value":243},{"type":21,"tag":245,"props":1021,"children":1022},{"value":344},[1023],{"type":27,"value":691},{"type":27,"value":243},{"type":21,"tag":245,"props":1026,"children":1027},{"value":351},[1028],{"type":27,"value":697},{"type":27,"value":243},{"type":21,"tag":245,"props":1031,"children":1032},{"value":358},[1033],{"type":27,"value":703},{"type":27,"value":243},{"type":21,"tag":245,"props":1036,"children":1037},{"value":365},[1038],{"type":27,"value":709},{"type":27,"value":243},{"type":21,"tag":245,"props":1041,"children":1042},{"value":372},[1043],{"type":27,"value":715},{"type":27,"value":243},{"type":21,"tag":245,"props":1046,"children":1047},{"value":379},[1048],{"type":27,"value":382},{"type":27,"value":136},{"type":27,"value":136},{"type":21,"tag":138,"props":1052,"children":1053},{},[1054],{"type":27,"value":727},{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":394,"props":1059,"children":1060},{"id":394,"width":71,"height":397},[],{"type":27,"value":52},{"type":27,"value":52},{"type":21,"tag":39,"props":1064,"children":1066},{"id":1065},"infoPanel",[1067,1068,1074,1075,1080],{"type":27,"value":66},{"type":21,"tag":108,"props":1069,"children":1071},{"id":1070},"christofides-algorithm-daten",[1072],{"type":27,"value":1073},"Christofides Algorithm Daten",{"type":27,"value":66},{"type":21,"tag":39,"props":1076,"children":1078},{"id":1077},"dataOutput",[1079],{"type":27,"value":754},{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":1083,"children":1085},{"className":1084,"style":43},[42],[1086,1087,1120],{"type":27,"value":52},{"type":21,"tag":48,"props":1088,"children":1089},{},[1090,1091,1096,1097,1107,1108,1119],{"type":27,"value":66},{"type":21,"tag":54,"props":1092,"children":1093},{"style":56},[1094],{"type":27,"value":1095},"\n                Jupyter Notebook: Christofides TSP Implementation (Klicken zum Anzeigen/Ausblenden)\n            ",{"type":27,"value":66},{"type":21,"tag":39,"props":1098,"children":1099},{"style":817},[1100,1101,1106],{"type":27,"value":83},{"type":21,"tag":29,"props":1102,"children":1104},{"src":1103,"width":70,"height":71,"style":72,"allowFullScreen":73},"https://nbviewer.org/github/Nr44suessauer/SalesMan/blob/main/Christofides_TSP.ipynb",[1105],{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":78,"props":1109,"children":1110},{"style":80},[1111,1112,1118],{"type":27,"value":83},{"type":21,"tag":85,"props":1113,"children":1115},{"href":1114,"target":88},"https://github.com/Nr44suessauer/SalesMan/blob/main/Christofides_TSP.ipynb",[1116],{"type":27,"value":1117},"\n                    Notebook auf GitHub öffnen\n                ",{"type":27,"value":66},{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":1122,"props":1123,"children":1124},"script",{},[1125],{"type":27,"value":1126},"\n    // Funktion zur Erkennung des Dark Mode\n    function isDarkMode() {\n        return document.documentElement.getAttribute('data-theme-setting') === \"dark\" ||\n            (document.documentElement.getAttribute('data-theme-setting') === null && \n             window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\n    }\n// Funktion zur Bestimmung der Koordinatensystemfarbe basierend auf dem Theme\n\n// Funktion zur Bestimmung der Koordinatensystemfarbe basierend auf dem Theme\nfunction getGridColor() {\n    // Im Light Mode die Standardfarbe verwenden\n    return isDarkMode() ? \"#999\" : \"#ccc\";\n}\n\n// Funktion zur Bestimmung der Textfarbe basierend auf dem Theme\nfunction getTextColor() {\n    // Im Light Mode die Standardfarbe \"black\" verwenden\n    return isDarkMode() ? \"#fff\" : \"black\";\n}\n\n// Funktion zur Bestimmung der Punktfarbe basierend auf dem Theme\nfunction getPointColor() {\n    // Explizit schwarz im Light Mode, weiß im Dark Mode\n    return isDarkMode() ? \"#ffffff\" : \"#000000\";\n}\n\n// Funktion zur Anpassung der Info-Panels basierend auf dem Theme\nfunction updateInfoPanelsStyle() {\n    const isDark = isDarkMode();\n    const panels = [\n        document.getElementById('infoPanel'),\n        document.getElementById('nnInfoPanel'),\n        document.getElementById('bfInfoPanel')\n    ];\n    \n    panels.forEach(panel => {\n        if (panel) {\n            if (isDark) {\n                // Im Dark Mode dunklerer Hintergrund und heller Text\n                panel.style.backgroundColor = \"#222\";\n                panel.style.color = \"#fff\";\n                // Tabellenfarben im Dark Mode anpassen\n                const tables = panel.querySelectorAll('table');\n                tables.forEach(table => {\n                    table.style.borderColor = \"#555\";\n                    const cells = table.querySelectorAll('td, th');\n                    cells.forEach(cell => {\n                        cell.style.borderColor = \"#555\";\n                    });\n                });\n            } else {\n                // Im Light Mode heller Hintergrund und dunkler Text\n                panel.style.backgroundColor = \"#f2f2f2\";\n                panel.style.color = \"#000\"; \n                // Standardstile für Tabellen wiederherstellen\n                const tables = panel.querySelectorAll('table');\n                tables.forEach(table => {\n                    table.style.borderColor = \"#ddd\";\n                    const cells = table.querySelectorAll('td, th');\n                    cells.forEach(cell => {\n                        cell.style.borderColor = \"#ddd\";\n                    });\n                });\n            }\n            \n            // Sicherstellen, dass die Änderungen übernommen werden\n            panel.style.transition = \"background-color 0.3s, color 0.3s\";\n        }\n    });\n}\n\n// Direkte Ausführung nach dem Laden - außerhalb des DOMContentLoaded-Events\n(function immediateStyleUpdate() {\n    // Sofortige Ausführung der Stilanpassungen\n    setTimeout(function() {\n        updateInfoPanelsStyle();\n        \n        // Stellen Sie sicher, dass die Canvas-Elemente korrekt gezeichnet werden\n        if (animation) {\n            animation.ctx.clearRect(0, 0, 100, 50);\n            animation.drawNodes(true);\n        }\n        if (nnAnimation) {\n            nnAnimation.ctx.clearRect(0, 0, 100, 50);\n            nnAnimation.drawNodes(true);\n        }\n        if (bfAnimation) {\n            bfAnimation.ctx.clearRect(0, 0, 50, 50);\n            bfAnimation.drawNodes(true);\n        }\n    }, 100);\n})();\n\n// Theme-Anpassungen beim Laden der Seite und bei Änderungen durchführen\ndocument.addEventListener('DOMContentLoaded', function() {\n    updateInfoPanelsStyle();\n    \n    // Beobachte Theme-Änderungen\n    if (window.matchMedia) {\n        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function() {\n            updateInfoPanelsStyle();\n            \n            // Nach Änderung des Themes neu zeichnen\n            if (animation) {\n                animation.ctx.clearRect(0, 0, 100, 50);\n                animation.drawNodes(true);\n            }\n            if (nnAnimation) {\n                nnAnimation.ctx.clearRect(0, 0, 100, 50);\n                nnAnimation.drawNodes(true);\n            }\n            if (bfAnimation) {\n                bfAnimation.ctx.clearRect(0, 0, 50, 50);\n                bfAnimation.drawNodes(true);\n            }\n        });\n    }\n});\n\n// Gemeinsame Konstante für die Sternbildkoordinaten\nconst CONSTELLATIONS = {\n    // Waage (Libra)\n    libra: [\n        { x: 21, y: 5 },\n        { x: 13, y: 13 },\n        { x: 5, y: 21 },\n        { x: 13, y: 29 },\n        { x: 21, y: 29 },\n        { x: 29, y: 29 },\n        { x: 37, y: 21 },\n        { x: 29, y: 13 },\n        { x: 21, y: 21 },\n        { x: 29, y: 37 }\n    ],\n    // Orion (Der Jäger)\n    orion: [\n        { x: 21, y: 5 },\n        { x: 13, y: 13 },\n        { x: 5, y: 21 },\n        { x: 13, y: 29 },\n        { x: 21, y: 29 },\n        { x: 29, y: 29 },\n        { x: 37, y: 21 },\n        { x: 29, y: 13 },\n        { x: 21, y: 37 },\n        { x: 21, y: 45 }\n    ],\n    // Kleiner Wagen (Ursa Minor)\n    ursa_minor: [\n        { x: 15, y: 15 },\n        { x: 13, y: 25 },\n        { x: 21, y: 29 },\n        { x: 25, y: 35 },\n        { x: 35, y: 39 },\n        { x: 45, y: 45 },\n        { x: 39, y: 25 }\n    ],\n    // Kassiopeia (W-Form)\n    cassiopeia: [\n        { x: 7, y: 10 },\n        { x: 13, y: 25 },\n        { x: 21, y: 10 },\n        { x: 33, y: 25 },\n        { x: 43, y: 10 }\n    ],\n    // Schwan (Cygnus/Nördliches Kreuz)\n    cygnus: [\n        { x: 25, y: 5 },\n        { x: 25, y: 13 },\n        { x: 25, y: 21 },\n        { x: 25, y: 29 },\n        { x: 25, y: 45 },\n        { x: 5, y: 21 },\n        { x: 13, y: 21 },\n        { x: 37, y: 21 },\n        { x: 45, y: 21 }\n    ],\n    // Großer Wagen (Ursa Major)\n    ursa_major: [\n        { x: 5, y: 5 },\n        { x: 13, y: 15 },\n        { x: 21, y: 20 },\n        { x: 30, y: 25 },\n        { x: 35, y: 35 },\n        { x: 40, y: 45 }\n    ],\n    // Löwe (Leo)\n    leo: [\n        { x: 10, y: 10 },\n        { x: 15, y: 15 },\n        { x: 25, y: 20 },\n        { x: 35, y: 25 },\n        { x: 45, y: 30 },\n        { x: 35, y: 35 },\n        { x: 25, y: 30 },\n        { x: 15, y: 25 },\n        { x: 10, y: 10 }\n    ],\n    // Drache (Draco)\n    draco: [\n        { x: 5, y: 45 },\n        { x: 10, y: 35 },\n        { x: 15, y: 30 },\n        { x: 20, y: 25 },\n        { x: 25, y: 20 },\n        { x: 30, y: 15 },\n        { x: 35, y: 10 },\n        { x: 30, y: 5 },\n        { x: 20, y: 5 },\n        { x: 10, y: 10 },\n        { x: 5, y: 15 }\n    ],\n    // Zwillinge (Gemini)\n    gemini: [\n        { x: 10, y: 10 },\n        { x: 15, y: 15 },\n        { x: 20, y: 20 },\n        { x: 25, y: 25 },\n        { x: 30, y: 30 },\n        { x: 35, y: 25 },\n        { x: 40, y: 20 },\n        { x: 35, y: 15 },\n        { x: 30, y: 10 }\n    ],\n    // Kreuz des Südens (Southern Cross)\n    southern_cross: [\n        { x: 25, y: 5 },\n        { x: 25, y: 25 },\n        { x: 15, y: 15 },\n        { x: 35, y: 15 }\n    ],\n    // Pegasus (Quadrat)\n    pegasus: [\n        { x: 10, y: 10 },\n        { x: 10, y: 40 },\n        { x: 40, y: 40 },\n        { x: 40, y: 10 },\n        { x: 10, y: 10 }\n    ],\n    // Andromeda\n    andromeda: [\n        { x: 5, y: 10 },\n        { x: 15, y: 15 },\n        { x: 25, y: 17 },\n        { x: 35, y: 15 },\n        { x: 40, y: 5 },\n        { x: 42, y: 12 },\n        { x: 45, y: 20 }\n    ],\n    // Schütze (Sagittarius)\n    sagittarius: [\n        { x: 10, y: 40 },\n        { x: 20, y: 30 },\n        { x: 30, y: 25 },\n        { x: 40, y: 27 },\n        { x: 45, y: 35 },\n        { x: 35, y: 20 },\n        { x: 25, y: 15 },\n        { x: 15, y: 15 }\n    ],\n    // Skorpion (Scorpius)\n    scorpius: [\n        { x: 10, y: 35 },\n        { x: 15, y: 30 },\n        { x: 20, y: 25 },\n        { x: 25, y: 20 },\n        { x: 30, y: 15 },\n        { x: 35, y: 10 },\n        { x: 35, y: 15 },\n        { x: 40, y: 15 },\n        { x: 45, y: 10 },\n        { x: 45, y: 5 }\n    ],\n    // Krebs (Cancer)\n        cancer: [\n            { x: 25, y: 5 },\n            { x: 20, y: 15 },\n            { x: 30, y: 15 },\n            { x: 15, y: 25 },\n            { x: 35, y: 25 },\n            { x: 25, y: 35 }\n        ],     // Fische (Pisces)\n    pisces: [\n        { x: 5, y: 15 },\n        { x: 10, y: 10 },\n        { x: 15, y: 15 },\n        { x: 20, y: 20 },\n        { x: 25, y: 25 },\n        { x: 30, y: 30 },\n        { x: 35, y: 35 },\n        { x: 40, y: 30 },\n        { x: 45, y: 25 },\n        { x: 40, y: 20 },\n        { x: 35, y: 15 }\n    ],\n    // Adler (Aquila)\n    aquila: [\n        { x: 25, y: 5 },\n        { x: 20, y: 15 },\n        { x: 15, y: 25 },\n        { x: 25, y: 20 },\n        { x: 35, y: 25 },\n        { x: 30, y: 15 },\n        { x: 25, y: 5 }\n    ],\n    // Herkules\n    hercules: [\n        { x: 10, y: 10 },\n        { x: 15, y: 25 },\n        { x: 25, y: 30 },\n        { x: 35, y: 25 },\n        { x: 40, y: 10 },\n        { x: 30, y: 15 },\n        { x: 20, y: 15 },\n        { x: 10, y: 10 }\n    ],\n    myrtana: [\n        { x: 40, y: 20 },\n        { x: 36, y: 32 },\n        { x: 25, y: 20 },\n        { x: 10, y: 35 },\n        { x: 18, y: 10 },\n    ]\n};\n// Funktion zur Erstellung von Sternbild-Knoten für beide Algorithmen\nfunction createConstellationNodes(selectedType, count) {\n    const baseNodes = CONSTELLATIONS[selectedType];\n    if (!baseNodes) return [];     \n    let nodes = [];     \n    if (count === baseNodes.length || count \u003C= 0) {\n        // Wenn die Anzahl gleich ist oder keine Anzahl angegeben wurde, \n        // verwenden wir alle Punkte des Sternbilds\n        nodes = baseNodes.map((pt, i) => ({ ...pt, id: i }));\n    } else {\n        // Interpolation für andere Anzahlen\n        const totalSegments = baseNodes.length - 1;\n        for (let i = 0; i \u003C count; i++) {\n            const t = i / (count - 1);\n            const segment = Math.min(Math.floor(t * totalSegments), totalSegments - 1);\n            const localT = (t * totalSegments) - segment;\n            const p0 = baseNodes[segment];\n            const p1 = baseNodes[segment + 1];\n            const x = p0.x + (p1.x - p0.x) * localT;\n            const y = p0.y + (p1.y - p0.y) * localT;\n            nodes.push({ x: Math.round(x), y: Math.round(y), id: i });\n        }\n    }       \n    return nodes;\n}\n// ================ CHRISTOFIDES ALGORITHMUS ================  \n// Christofides Animation Klasse\nclass ChristofidesAnimation {\n    constructor(canvas, numNodes = 4, startNode = 0) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.ctx.scale(canvas.width / 50, canvas.height / 50);\n        this.numNodes = numNodes;\n        this.startNode = startNode;\n        this.nodes = [];\n        this.mstEdges = [];\n        this.oddNodes = [];\n        this.matchingEdges = [];\n        this.eulerianCircuit = [];\n        this.tspPath = [];\n        this.phase = 'mst';\n        this.lastPhase = null;  \n        this.currentMSTIndex = 0;\n        this.currentMatchingIndex = 0;\n        this.currentEulerIndex = 1; \n        this.currentTSPIndex = 1;\n        this.drawnEdges = new Map();\n        this.init();\n        this.drawNodes(true);\n    }\n    // Zeichnet ein Koordinatensystem als Raster\n    drawCoordinateSystem() {\n        this.ctx.strokeStyle = getGridColor();\n        this.ctx.lineWidth = 0.1;\n        for (let x = 0; x \u003C= 50; x += 5) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(x, 0);\n            this.ctx.lineTo(x, 50);\n            this.ctx.stroke();\n        }\n        for (let y = 0; y \u003C= 50; y += 5) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(0, y);\n            this.ctx.lineTo(50, y);\n            this.ctx.stroke();\n        }\n    }       \n    init() {\n        this.generateNodes();\n        this.computeMST();\n        this.findOddNodes();\n        this.computeMatching();\n        this.computeEulerianCircuit();\n        this.computeTSPPath();\n    }     \n    generateNodes() {\n        for (let i = 0; i \u003C this.numNodes; i++) {\n            this.nodes.push({\n                x: Math.floor(Math.random() * (40 - 5 + 1)) + 5,\n                y: Math.floor(Math.random() * (40 - 5 + 1)) + 5,\n                id: i\n            });\n        }\n    }    \n    distance(a, b) {\n        return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n    }      \n      computeMST() {\n        const inTree = new Set([this.startNode]);\n        this.mstEdges = [];\n        while (inTree.size \u003C this.numNodes) {\n            let minEdge = null;\n            for (const node of inTree) {\n                for (let i = 0; i \u003C this.numNodes; i++) {\n                    if (!inTree.has(i)) {\n                        const distance = this.distance(this.nodes[node], this.nodes[i]);\n                        if (!minEdge || distance \u003C minEdge.distance) {\n                            minEdge = { from: node, to: i, distance };\n                        }\n                    }\n                }\n            }\n            if (minEdge) {\n                this.mstEdges.push(minEdge);\n                inTree.add(minEdge.to);\n            }\n        }\n    }   \n    findOddNodes() {\n        const degrees = new Array(this.numNodes).fill(0);\n        for (const edge of this.mstEdges) {\n            degrees[edge.from]++;\n            degrees[edge.to]++;\n        }\n        this.oddNodes = degrees.reduce((acc, d, i) => (d % 2 ? [...acc, i] : acc), []);\n    }  \n    computeMatching() {\n        const matchings = this.generateAllMatchings([...this.oddNodes]);\n        let minMatching = null;\n        let minDistance = Infinity;\n        for (const matching of matchings) {\n            const total = matching.reduce((sum, [a, b]) =>\n                sum + this.distance(this.nodes[a], this.nodes[b]), 0);\n            if (total \u003C minDistance) {\n                minDistance = total;\n                minMatching = matching;\n            }\n        }\n        this.matchingEdges = minMatching.map(([a, b]) => ({\n            from: a,\n            to: b,\n            distance: this.distance(this.nodes[a], this.nodes[b])\n        }));\n    }    \n    generateAllMatchings(nodes) {\n        if (nodes.length === 0) return [[]];\n        const [first, ...rest] = nodes;\n        return rest.flatMap((node, i) => {\n            const newRest = rest.filter((_, j) => j !== i);\n            return this.generateAllMatchings(newRest).map(match => [[first, node], ...match]);\n        });\n    }   \n    computeEulerianCircuit() {\n        const adj = new Map();\n        const addEdge = (from, to) => {\n            if (!adj.has(from)) adj.set(from, []);\n            adj.get(from).push(to);\n        };\n        [...this.mstEdges, ...this.matchingEdges].forEach(edge => {\n            addEdge(edge.from, edge.to);\n            addEdge(edge.to, edge.from);\n        });\n        const stack = [this.startNode];\n        const circuit = [];\n        while (stack.length) {\n            let current = stack[stack.length - 1];\n            if (adj.get(current)?.length) {\n                const next = adj.get(current).pop();\n                stack.push(next);\n            } else {\n                circuit.push(stack.pop());\n            }\n        }\n        this.eulerianCircuit = circuit.reverse();\n    }  \n    computeTSPPath() {\n        const visited = new Set();\n        this.tspPath = [];\n        for (const node of this.eulerianCircuit) {\n            if (!visited.has(node)) {\n                visited.add(node);\n                this.tspPath.push(node);\n            }\n        }\n        this.tspPath.push(this.tspPath[0]);\n    } \n    drawNodes(showCoordinateSystem = false) {\n        if (showCoordinateSystem) {\n            this.drawCoordinateSystem();\n        }\n        this.nodes.forEach(node => {\n            this.ctx.beginPath();\n            this.ctx.arc(node.x, node.y, 0.5, 0, Math.PI * 2);\n            this.ctx.fillStyle = getPointColor();\n            this.ctx.fill();\n            this.ctx.font = \"1.5px sans-serif\";\n            this.ctx.fillStyle = getTextColor();\n            this.ctx.textAlign = \"center\";\n            const label = `P${node.id}`;\n            this.ctx.fillText(label, node.x, node.y - 1.2);\n        });\n    }\n    drawEdges(edges, color) {\n        edges.forEach(edge => {\n            const key = [Math.min(edge.from, edge.to), Math.max(edge.from, edge.to)].join('-');\n            let useColor = color;\n            if (this.drawnEdges.has(key) && this.drawnEdges.get(key) === color) {\n                useColor = this.getComplementaryColor(color);\n            }\n            this.ctx.strokeStyle = useColor;\n            this.ctx.lineWidth = 0.3;\n            const from = this.nodes[edge.from];\n            const to = this.nodes[edge.to];\n            this.ctx.beginPath();\n            this.ctx.moveTo(from.x, from.y);\n            this.ctx.lineTo(to.x, to.y);\n            this.ctx.stroke();\n            this.drawnEdges.set(key, useColor);\n        });\n    }   \n    getComplementaryColor(color) {\n        const comp = {\n            \"blue\": \"orange\",\n            \"green\": \"magenta\",\n            \"purple\": \"yellow\",\n            \"orange\": \"blue\"\n        };\n        return comp[color] || \"black\";\n    } \n    highlightOddNodes() {\n        this.oddNodes.forEach(id => {\n            const node = this.nodes[id];\n            this.ctx.beginPath();\n            this.ctx.arc(node.x, node.y, 0.8, 0, Math.PI * 2);\n            this.ctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n            this.ctx.fill();\n        });\n    }  \n    drawEulerEdge(index) {\n        if (index \u003C= 0 || index >= this.eulerianCircuit.length) return;\n        const from = this.nodes[this.eulerianCircuit[index - 1]];\n        const to = this.nodes[this.eulerianCircuit[index]];\n        this.drawEdges([{ from: this.eulerianCircuit[index - 1], to: this.eulerianCircuit[index] }], 'purple');\n    }   \n    drawTSPPath(index) {\n        if (index \u003C= 0 || index >= this.tspPath.length) return;\n        this.ctx.strokeStyle = 'orange';\n        this.ctx.lineWidth = 0.5;\n        this.ctx.beginPath();\n        const startNode = this.nodes[this.tspPath[0]];\n        this.ctx.moveTo(startNode.x, startNode.y);\n        for (let i = 1; i \u003C= index; i++) {\n            const node = this.nodes[this.tspPath[i]];\n            this.ctx.lineTo(node.x, node.y);\n        }\n        this.ctx.stroke();\n    }   \n    nextStep() {\n        if (this.phase === 'mst') {\n            const edge = this.mstEdges[this.currentMSTIndex];\n            if (edge) {\n                this.drawEdges([edge], 'blue');\n                this.currentMSTIndex++;\n            }\n            if (this.currentMSTIndex >= this.mstEdges.length) {\n                this.phase = 'odd';\n            }\n        }\n        else if (this.phase === 'odd') {\n            this.highlightOddNodes();\n            this.ctx.clearRect(0, 0, 100, 50);\n            this.drawnEdges.clear();\n            this.drawNodes(false);\n            this.highlightOddNodes();\n            this.phase = 'matching';\n        }\n        else if (this.phase === 'matching') {\n            const edge = this.matchingEdges[this.currentMatchingIndex];\n            if (edge) {\n                this.drawEdges([edge], 'green');\n                this.currentMatchingIndex++;\n            }\n            if (this.currentMatchingIndex >= this.matchingEdges.length) {\n                this.phase = 'euler';\n                this.currentEulerIndex = 1;\n            }\n        }\n        else if (this.phase === 'euler') {\n            this.drawEulerEdge(this.currentEulerIndex);\n            this.currentEulerIndex++;\n            if (this.currentEulerIndex >= this.eulerianCircuit.length) {\n                this.phase = 'eulerComplete';\n            }\n        }\n        else if (this.phase === 'eulerComplete') {\n            this.ctx.clearRect(0, 0, 100, 50);\n            this.drawnEdges.clear();\n            this.drawNodes(false);\n            this.highlightOddNodes();\n            this.phase = 'tsp';\n            this.currentTSPIndex = 1;\n        }\n        else if (this.phase === 'tsp') {\n            this.drawTSPPath(this.currentTSPIndex);\n            this.currentTSPIndex++;\n            if (this.currentTSPIndex >= this.tspPath.length) {\n                // Das Koordinatensystem neu zeichnen, wenn die Animation fertig ist\n                this.ctx.clearRect(0, 0, 100, 50);\n                this.drawNodes(true); // true als Parameter, um das Koordinatensystem zu zeichnen\n                this.drawTSPPath(this.tspPath.length - 1); // Finalen Pfad zeichnen\n                stopAutoAnimation();\n            }\n        }\n        updateInfoPanel();\n    }\n} \n// Globale Variablen für Christofides\nlet animation = new ChristofidesAnimation(document.getElementById('canvas'), 4, 0);\nlet autoIntervalId = null; \n// Christofides Funktionen\nfunction updateInfoPanel() {\n    const dataOutput = document.getElementById('dataOutput'); \n    // Aktuelle Phase\n    let html = \"\u003Cstrong>Aktuelle Phase:\u003C/strong> \";\n    const phases = {\n        'mst': 'Minimum Spanning Tree (MST)',\n        'odd': 'Identifikation ungerader Knoten',\n        'matching': 'Minimales perfektes Matching',\n        'euler': 'Euler-Kreis im Multigraphen',\n        'eulerComplete': 'Euler-Kreis komplett',\n        'tsp': 'Hamilton-Kreis durch Shortcutting'\n    };\n    html += phases[animation.phase] || animation.phase.toUpperCase();\n    html += \"\u003Chr>\";     \n    // Punkte\n    html += \"\u003Cstrong>Generierte Punkte:\u003C/strong>\u003Cbr>\";\n    html += animation.nodes.map(node => \"P\" + node.id + \": (\" + node.x + \", \" + node.y + \")\").join(\"\u003Cbr>\") + \"\u003Chr>\"; \n    // MST Kanten\n    html += \"\u003Cstrong>MST Kanten:\u003C/strong>\u003Cbr>\";\n    if (animation.currentMSTIndex === 0) {\n        html += \"Noch keine MST-Kanten gezeichnet\";\n    } else {\n        html += animation.mstEdges.slice(0, animation.currentMSTIndex)\n            .map(e => \"Von \" + e.from + \" nach \" + e.to + \" (Distanz: \" + e.distance.toFixed(2) + \")\")\n            .join(\"\u003Cbr>\");\n    }\n    html += \"\u003Chr>\";   \n    // Ungerade Knoten\n    html += \"\u003Cstrong>Ungerade Knoten:\u003C/strong>\u003Cbr>\";\n    if (animation.phase === 'mst' && animation.currentMSTIndex \u003C animation.mstEdges.length) {\n        html += \"Wird nach Fertigstellung des MST berechnet\";\n    } else {\n        html += animation.oddNodes.join(\", \");\n    }\n    html += \"\u003Chr>\"; \n    // Matching Kanten\n    html += \"\u003Cstrong>Matching Kanten:\u003C/strong>\u003Cbr>\";\n    if (animation.phase === 'mst' || animation.phase === 'odd') {\n        html += \"Wird nach Identifikation ungerader Knoten berechnet\";\n    } else if (animation.currentMatchingIndex === 0) {\n        html += \"Noch keine Matching-Kanten gezeichnet\";\n    } else {\n        html += animation.matchingEdges.slice(0, animation.currentMatchingIndex)\n            .map(e => \"Von \" + e.from + \" nach \" + e.to + \" (Distanz: \" + e.distance.toFixed(2) + \")\")\n            .join(\"\u003Cbr>\");\n    }\n    html += \"\u003Chr>\";  \n    // Eulerischer Pfad\n    html += \"\u003Cstrong>Eulerischer Pfad:\u003C/strong>\u003Cbr>\";\n    if (animation.phase === 'mst' || animation.phase === 'odd' || animation.phase === 'matching') {\n        html += \"Wird nach Abschluss des Matchings berechnet\";\n    } else if (animation.currentEulerIndex \u003C= 1 && animation.phase === 'euler') {\n        html += animation.eulerianCircuit[0];\n    } else {\n        html += animation.eulerianCircuit.slice(0, \n            animation.phase === 'eulerComplete' || animation.phase === 'tsp' ? \n            animation.eulerianCircuit.length : animation.currentEulerIndex).join(\" → \");\n    }\n    html += \"\u003Chr>\"; \n    // TSP Pfad\n    html += \"\u003Cstrong>TSP Pfad:\u003C/strong>\u003Cbr>\";\n    if (animation.phase !== 'tsp') {\n        html += \"Wird im letzten Schritt berechnet\";\n    } else if (animation.currentTSPIndex \u003C= 1) {\n        html += animation.tspPath[0];\n    } else {\n        let path = animation.tspPath.slice(0, animation.currentTSPIndex).join(\" → \");\n        if (animation.currentTSPIndex >= animation.tspPath.length) {\n            let totalLength = 0;\n            for (let i = 1; i \u003C animation.tspPath.length; i++) {\n                totalLength += animation.distance(animation.nodes[animation.tspPath[i-1]], animation.nodes[animation.tspPath[i]]);\n            }\n            path += \"\u003Cbr>\u003Cbr>\u003Cspan style='font-size: 1.2em;'>\u003Cstrong>Gesamtlänge: \" + totalLength.toFixed(2) + \"\u003C/strong>\u003C/span>\";\n        }\n        html += path;\n    }\n    dataOutput.innerHTML = html;\n}\nfunction nextStep() {\n    if (!animation) return;\n    animation.nextStep();\n}\nfunction startAutoAnimation() {\n    if (autoIntervalId) return;\n    const slider = document.getElementById('speedSlider');\n    const percent = parseInt(slider.value);\n    const speed = 1000 * (100 / percent);\n    autoIntervalId = setInterval(() => {\n        animation.nextStep();\n    }, speed);\n}\nfunction toggleAutoAnimation() {\n    if (autoIntervalId) {\n        stopAutoAnimation();\n    } else {\n        startAutoAnimation();\n    }\n}\nfunction stopAutoAnimation() {\n    if (autoIntervalId) {\n        clearInterval(autoIntervalId);\n        autoIntervalId = null;\n    }\n}\nfunction resetAnimation() {\n    stopAutoAnimation();\n    if (animation) {\n        animation.ctx.clearRect(0, 0, 100, 50);\n        animation.phase = 'mst';\n        animation.lastPhase = null;\n        animation.currentMSTIndex = 0;\n        animation.currentMatchingIndex = 0;\n        animation.currentEulerIndex = 1;\n        animation.currentTSPIndex = 1;\n        animation.drawnEdges.clear();\n        animation.drawNodes(true);\n        updateInfoPanel();\n    }\n}\nfunction updateNumPoints() {\n    stopAutoAnimation();\n    const numPoints = parseInt(document.getElementById('numPoints').value);\n    const startPoint = parseInt(document.getElementById('startPointChristofides').value);\n    animation = new ChristofidesAnimation(document.getElementById('canvas'), numPoints, startPoint);\n    animation.ctx.clearRect(0, 0, 100, 50);\n    animation.drawNodes(true);\n    updateInfoPanel();\n}\nfunction updateStartPoint() {\n    stopAutoAnimation();\n    const startPoint = parseInt(document.getElementById('startPointChristofides').value);       \n    // Prüfen ob der Startpunkt gültig ist\n    if (isNaN(startPoint) || startPoint \u003C 0 || startPoint >= animation.nodes.length) {\n        alert(`Bitte geben Sie einen gültigen Startpunkt zwischen 0 und ${animation.nodes.length - 1} ein.`);\n        return;\n    }      \n    // Speichern der aktuellen Knoten\n    const currentNodes = JSON.parse(JSON.stringify(animation.nodes));     \n    // Erstellen einer neuen Animation mit dem neuen Startpunkt aber den bestehenden Knoten\n    animation = new ChristofidesAnimation(document.getElementById('canvas'), animation.numNodes, startPoint);\n    animation.nodes = currentNodes; // Bestehende Knoten übernehmen     \n    // Berechnen der neuen Pfade mit dem aktuellen Startpunkt\n    animation.mstEdges = [];\n    animation.oddNodes = [];\n    animation.matchingEdges = [];\n    animation.eulerianCircuit = [];\n    animation.tspPath = [];\n    animation.drawnEdges.clear();      \n    // Neuberechnung basierend auf den vorhandenen Knoten\n    animation.computeMST();\n    animation.findOddNodes();\n    animation.computeMatching();\n    animation.computeEulerianCircuit();\n    animation.computeTSPPath();       \n    animation.ctx.clearRect(0, 0, 100, 50);\n    animation.drawNodes(true);\n    updateInfoPanel();\n}\nfunction toggleConstellation(selectedType) {\n    stopAutoAnimation();      \n    if (!selectedType) return; // Wenn keine Auswahl getroffen wurde        \n    animation = new ChristofidesAnimation(document.getElementById('canvas'), 0); // 0, wird überschrieben       \n    // Nutze die gemeinsame Funktion, um die Sternbildknoten zu erstellen\n    // Mit 0 als count werden alle Originalpunkte des Sternbildes verwendet\n    animation.nodes = createConstellationNodes(selectedType, 0);\n    animation.numNodes = animation.nodes.length;        \n    animation.mstEdges = [];\n    animation.oddNodes = [];\n    animation.matchingEdges = [];\n    animation.eulerianCircuit = [];\n    animation.tspPath = [];\n    animation.drawnEdges.clear();       \n    // Neuberechnung\n    animation.computeMST();\n    animation.findOddNodes();\n    animation.computeMatching();\n    animation.computeEulerianCircuit();\n    animation.computeTSPPath();       \n    animation.ctx.clearRect(0, 0, 100, 50);\n    animation.drawNodes(true);\n    updateInfoPanel();       \n    // Aktualisiere das Zahlenfeld mit der tatsächlichen Punktanzahl\n    document.getElementById('numPoints').value = animation.nodes.length;\n}\nfunction downloadGraph() {\n    const canvas = document.getElementById('canvas');\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = canvas.width;\n    tmpCanvas.height = canvas.height;\n    const tmpCtx = tmpCanvas.getContext('2d');\n    tmpCtx.fillStyle = 'white';\n    tmpCtx.fillRect(0, 0, tmpCanvas.width, tmpCanvas.height);\n    tmpCtx.drawImage(canvas, 0, 0);\n    const link = document.createElement('a');\n    link.download = 'graph.png';\n    link.href = tmpCanvas.toDataURL('image/png');\n    link.click();\n}\nfunction drawGraphData() {\n    const dataCanvas = document.getElementById('dataCanvas');\n    if (dataCanvas) {\n        const ctx = dataCanvas.getContext('2d');\n        ctx.clearRect(0, 0, dataCanvas.width, dataCanvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, dataCanvas.width, dataCanvas.height);\n        ctx.fillStyle = \"black\";\n        ctx.font = \"14px sans-serif\";\n        const lineHeight = 18;\n        let y = lineHeight;\n        ctx.fillText(\"Graph Daten:\", 10, y);\n        y += lineHeight * 1.5;\n        ctx.fillText(\"Knoten:\", 10, y);\n        y += lineHeight;\n        animation.nodes.forEach(node => {\n            ctx.fillText(`P${node.id}: (${node.x}, ${node.y})`, 10, y);\n            y += lineHeight;\n        });\n    } else {  \n        const canvas = document.getElementById('canvas');\n        const ctx = canvas.getContext('2d');\n        ctx.save();\n        const textBoxX = canvas.width - 250;\n        const textBoxY = 0;\n        const textBoxWidth = 250;\n        const textBoxHeight = canvas.height;\n        ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n        ctx.fillRect(textBoxX, textBoxY, textBoxWidth, textBoxHeight);\n        ctx.fillStyle = \"black\";\n        ctx.font = \"14px sans-serif\";\n        const lineHeight = 18;\n        let y = textBoxY + lineHeight;\n        ctx.fillText(\"Graph Daten:\", textBoxX + 10, y);\n        y += lineHeight * 1.5;\n        ctx.fillText(\"Knoten:\", textBoxX + 10, y);\n        y += lineHeight;\n        animation.nodes.forEach(node => {\n            ctx.fillText(`P${node.id}: (${node.x}, ${node.y})`, textBoxX + 10, y);\n            y += lineHeight;\n        });\n        ctx.restore();\n    }\n}\nfunction importNNPoints() {\n    if (typeof nnAnimation !== 'undefined' && nnAnimation && nnAnimation.nodes) {\n        stopAutoAnimation();\n        const numPoints = nnAnimation.nodes.length;\n        const startPoint = parseInt(document.getElementById('startPointChristofides').value);\n        animation = new ChristofidesAnimation(document.getElementById('canvas'), numPoints, startPoint);\n        animation.nodes = JSON.parse(JSON.stringify(nnAnimation.nodes));\n        animation.mstEdges = [];\n        animation.oddNodes = [];\n        animation.matchingEdges = [];\n        animation.eulerianCircuit = [];\n        animation.tspPath = [];\n        animation.phase = 'mst';\n        animation.lastPhase = null;\n        animation.currentMSTIndex = 0;\n        animation.currentMatchingIndex = 0;\n        animation.currentEulerIndex = 1;\n        animation.currentTSPIndex = 1;\n        animation.drawnEdges.clear();\n        animation.computeMST();\n        animation.findOddNodes();\n        animation.computeMatching();\n        animation.computeEulerianCircuit();\n        animation.computeTSPPath();\n        animation.ctx.clearRect(0, 0, 100, 50);\n        animation.drawNodes(true);\n        updateInfoPanel();\n    } else {\n        console.log(\"NN-Animation nicht gefunden oder keine Punkte verfügbar\");\n    }\n}\nfunction importBFPoints() {\n    if (typeof bfAnimation !== 'undefined' && bfAnimation && bfAnimation.nodes) {\n        stopAutoAnimation();\n        const numPoints = bfAnimation.nodes.length;\n        const startPoint = parseInt(document.getElementById('startPointChristofides').value);\n        animation = new ChristofidesAnimation(document.getElementById('canvas'), numPoints, startPoint);\n        animation.nodes = JSON.parse(JSON.stringify(bfAnimation.nodes));\n        animation.mstEdges = [];\n        animation.oddNodes = [];\n        animation.matchingEdges = [];\n        animation.eulerianCircuit = [];\n        animation.tspPath = [];\n        animation.phase = 'mst';\n        animation.lastPhase = null;\n        animation.currentMSTIndex = 0;\n        animation.currentMatchingIndex = 0;\n        animation.currentEulerIndex = 1;\n        animation.currentTSPIndex = 1;\n        animation.drawnEdges.clear();\n        animation.computeMST();\n        animation.findOddNodes();\n        animation.computeMatching();\n        animation.computeEulerianCircuit();\n        animation.computeTSPPath();\n        animation.ctx.clearRect(0, 0, 100, 50);\n        animation.drawNodes(true);\n        updateInfoPanel();\n    } else {\n        console.log(\"BF-Animation nicht gefunden oder keine Punkte verfügbar\");\n    }\n}\n// Event-Listener\ndocument.getElementById('speedSlider').addEventListener('input', function() {\n    if (autoIntervalId) {\n        clearInterval(autoIntervalId);\n        const percent = parseInt(this.value);\n        const speed = 1000 * (100 / percent);\n        autoIntervalId = setInterval(() => {\n            animation.nextStep();\n        }, speed);\n    }\n});\n// ================ NEAREST NEIGHBOR ALGORITHMUS ================ \n// Nearest Neighbor Animation Klasse\nclass NearestNeighborAnimation {\n    constructor(canvas, numNodes = 4, startNode = 0) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.ctx.scale(canvas.width / 50, canvas.height / 50);\n        this.numNodes = numNodes;\n        this.startNode = startNode;\n        this.nodes = [];\n        this.nnPath = [];\n        this.selectionSteps = []; \n        this.currentPathIndex = 0;    \n        this.init();\n        this.drawNodes(true);\n    }    \n    drawCoordinateSystem() {\n        this.ctx.strokeStyle = getGridColor();\n        this.ctx.lineWidth = 0.1;   \n        for (let x = 0; x \u003C= 100; x += 10) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(x, 0);\n            this.ctx.lineTo(x, 50);\n            this.ctx.stroke();\n        }  \n        for (let y = 0; y \u003C= 50; y += 5) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(0, y);\n            this.ctx.lineTo(100, y);\n            this.ctx.stroke();\n        }\n    }     \n    init() {\n        this.generateNodes();\n        this.computeNearestNeighborPath();\n    }      \n    generateNodes() {\n        for (let i = 0; i \u003C this.numNodes; i++) {\n            this.nodes.push({\n                x: Math.floor(Math.random() * (40 - 5 + 1)) + 5,\n                y: Math.floor(Math.random() * (40 - 5 + 1)) + 5,\n                id: i\n            });\n        }\n    }     \n    distance(a, b) {\n        return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n    }       \n    computeNearestNeighborPath() {\n        const visited = new Set([this.startNode]);\n        this.nnPath = [this.startNode]; \n        this.selectionSteps = [];\n        let current = this.startNode;\n        while (visited.size \u003C this.numNodes) {\n            let nearest = null;\n            let minDistance = Infinity;\n            const currentStep = {\n                current: current,\n                candidates: []\n            };\n            for (let i = 0; i \u003C this.numNodes; i++) {\n                if (!visited.has(i)) {\n                    const dist = this.distance(this.nodes[current], this.nodes[i]);\n                    currentStep.candidates.push({\n                        node: i,\n                        distance: dist,\n                        isNearest: false\n                    });\n                    if (dist \u003C minDistance) {\n                        minDistance = dist;\n                        nearest = i;\n                    }\n                }\n            }\n            const nearestCandidate = currentStep.candidates.find(c => c.node === nearest);\n            if (nearestCandidate) {\n                nearestCandidate.isNearest = true;\n            }\n            this.selectionSteps.push(currentStep);\n            current = nearest;\n            visited.add(current);\n            this.nnPath.push(current);\n        } \n        this.nnPath.push(this.startNode);\n    }        \n    drawNodes(showCoordinateSystem = false) {\n        if (showCoordinateSystem) {\n            this.drawCoordinateSystem();\n        }   \n        this.nodes.forEach(node => {\n            this.ctx.beginPath();\n            this.ctx.arc(node.x, node.y, 0.5, 0, Math.PI * 2);\n            this.ctx.fillStyle = getPointColor();\n            this.ctx.fill();\n            this.ctx.font = \"1.5px sans-serif\";\n            this.ctx.fillStyle = getTextColor();\n            this.ctx.textAlign = \"center\";\n            const label = `P${node.id}`;\n            this.ctx.fillText(label, node.x, node.y - 1.2);\n        });\n    }     \n    drawPath(steps) {\n        if (steps \u003C= 0) return;   \n        const pathSegments = Math.min(steps, this.nnPath.length - 1);\n        this.ctx.strokeStyle = 'red';\n        this.ctx.lineWidth = 0.5;\n        this.ctx.beginPath();  \n        const startNode = this.nodes[this.nnPath[0]];\n        this.ctx.moveTo(startNode.x, startNode.y);  \n        for (let i = 1; i \u003C= pathSegments; i++) {\n            const node = this.nodes[this.nnPath[i]];\n            this.ctx.lineTo(node.x, node.y);\n        }  \n        this.ctx.stroke();\n    }     \n    drawSelectionStep(stepIndex) {\n        if (stepIndex \u003C 0 || stepIndex >= this.selectionSteps.length) return;\n        const step = this.selectionSteps[stepIndex];\n        const currentNode = this.nodes[step.current];\n        this.ctx.beginPath();\n        this.ctx.arc(currentNode.x, currentNode.y, 0.8, 0, Math.PI * 2);\n        this.ctx.fillStyle = 'rgba(0, 128, 255, 0.6)';\n        this.ctx.fill();\n        step.candidates.forEach(candidate => {\n            const candidateNode = this.nodes[candidate.node];\n            this.ctx.strokeStyle = candidate.isNearest ? 'green' : 'blue';\n            this.ctx.lineWidth = candidate.isNearest ? 0.3 : 0.1;\n            this.ctx.setLineDash(candidate.isNearest ? [] : [0.2, 0.2]);\n            this.ctx.beginPath();\n            this.ctx.moveTo(currentNode.x, currentNode.y);\n            this.ctx.lineTo(candidateNode.x, candidateNode.y);\n            this.ctx.stroke();\n            this.ctx.setLineDash([]);\n            if (candidate.isNearest) {\n                this.ctx.beginPath();\n                this.ctx.arc(candidateNode.x, candidateNode.y, 0.8, 0, Math.PI * 2);\n                this.ctx.fillStyle = 'rgba(0, 255, 0, 0.6)';\n                this.ctx.fill();\n            }\n        });\n    }      \n    nextStep() {\n        this.ctx.clearRect(0, 0, 100, 50);\n        this.drawNodes(true);\n        if (this.currentPathIndex \u003C this.selectionSteps.length) {\n            this.drawSelectionStep(this.currentPathIndex);\n            this.drawPath(this.currentPathIndex);\n            this.currentPathIndex++;\n        } else if (this.currentPathIndex === this.selectionSteps.length) {\n            this.drawPath(this.nnPath.length - 1);\n            this.currentPathIndex++;\n        } else {\n            nnStopAutoAnimation();\n        }\n    }   \n    importChristofidesPoints() {\n        if (typeof animation !== 'undefined' && animation && animation.nodes) {\n            this.nodes = JSON.parse(JSON.stringify(animation.nodes));\n            this.numNodes = this.nodes.length;\n            this.computeNearestNeighborPath();\n            this.ctx.clearRect(0, 0, 100, 50);\n            this.currentPathIndex = 0;\n            this.drawNodes(true);\n        }\n    }\n    importBFPoints() {\n        if (typeof bfAnimation !== 'undefined' && bfAnimation && bfAnimation.nodes) {\n            this.nodes = JSON.parse(JSON.stringify(bfAnimation.nodes));\n            this.numNodes = this.nodes.length;\n            this.computeNearestNeighborPath();\n            this.ctx.clearRect(0, 0, 100, 50);\n            this.currentPathIndex = 0;\n            this.drawNodes(true);\n        }\n    }\n} \n// Globale Variablen für Nearest Neighbor\nlet nnAnimation = null;\nlet nnAutoIntervalId = null;   \n// Nearest Neighbor Funktionen\nfunction nnUpdateInfoPanel() {\n    const dataOutput = document.getElementById('nnDataOutput');\n    const stepDropdown = document.getElementById('nnStepDropdown');\n    const stepDetails = document.getElementById('nnStepDetails');\n    const fullTable = document.getElementById('nnFullTable');       \n    if (!dataOutput || !stepDropdown || !nnAnimation) return;        \n    let html = \"\u003Cstrong>Algorithmus:\u003C/strong> Nearest Neighbor\u003Cbr>\";\n    html += \"\u003Chr>\";\n    html += \"\u003Cstrong>Punkte:\u003C/strong>\u003Cbr>\";\n    html += nnAnimation.nodes.map(node => \"P\" + node.id + \": (\" + node.x + \", \" + node.y + \")\").join(\"\u003Cbr>\");\n    html += \"\u003Chr>\";       \n    const pathLength = Math.min(nnAnimation.currentPathIndex + 1, nnAnimation.nnPath.length);\n    let path = nnAnimation.nnPath.slice(0, pathLength).map(node => \"P\" + node).join(\" → \");       \n    if (nnAnimation.currentPathIndex >= nnAnimation.selectionSteps.length) {\n        let totalLength = 0;\n        for (let i = 1; i \u003C nnAnimation.nnPath.length; i++) {\n            totalLength += nnAnimation.distance(\n                nnAnimation.nodes[nnAnimation.nnPath[i - 1]], \n                nnAnimation.nodes[nnAnimation.nnPath[i]]\n            );\n        }\n        path += `\u003Cbr>\u003Cbr>\u003Cspan style='font-size: 1.2em;'>\u003Cstrong>Gesamtlänge: ${totalLength.toFixed(2)}\u003C/strong>\u003C/span>`;\n        // Anzeige des aktuellen Startpunkts\n        path += `\u003Cbr>\u003Cstrong>Aktueller Startpunkt:\u003C/strong> P${nnAnimation.startNode}`;\n    }       \n    html += `\u003Cstrong>Aktueller Pfad:\u003C/strong>\u003Cbr>${path}`;\n    dataOutput.innerHTML = html;        \n    stepDropdown.innerHTML = '\u003Coption value=\"\">Schritt auswählen...\u003C/option>';\n    nnAnimation.selectionSteps.forEach((step, stepIndex) => {\n        stepDropdown.innerHTML += `\u003Coption value=\"${stepIndex}\">Schritt ${stepIndex + 1}: P${step.current}\u003C/option>`;\n    });        \n    stepDetails.innerHTML = \"\";        \n    fullTable.style.display = \"none\";\n    fullTable.innerHTML = \"\";\n    \n    // Manuelle Anwendung der Textfarbe für nnDataOutput im Dark Mode\n    if (isDarkMode()) {\n        dataOutput.style.color = getTextColor();\n        const elements = dataOutput.querySelectorAll('*');\n        elements.forEach(el => {\n            if (!el.style.color || el.style.color === \"\") {\n                el.style.color = getTextColor();\n            }\n        });\n    }\n}\nfunction nnShowStepDetails() {\n    const stepDropdown = document.getElementById('nnStepDropdown');\n    const stepDetails = document.getElementById('nnStepDetails');\n    if (!stepDropdown || !stepDetails || !nnAnimation) return;\n    const stepIndex = parseInt(stepDropdown.value);\n    if (isNaN(stepIndex) || stepIndex \u003C 0 || stepIndex >= nnAnimation.selectionSteps.length) {\n        stepDetails.innerHTML = \"\";\n        return;\n    }\n    const step = nnAnimation.selectionSteps[stepIndex];\n    let html = `\u003Cstrong>Schritt ${stepIndex + 1}:\u003C/strong>\u003Cbr>`;\n    html += `\u003Cstrong>Aktueller Knoten:\u003C/strong> P${step.current}\u003Cbr>`;\n    html += \"\u003Cstrong>Kandidaten:\u003C/strong>\u003Cbr>\";\n    html += \"\u003Cul>\";\n    step.candidates.forEach(candidate => {\n        html += `\u003Cli>P${candidate.node}: Entfernung = ${candidate.distance.toFixed(2)} ${\n            candidate.isNearest ? \"(Ausgewählt)\" : \"\"\n        }\u003C/li>`;\n    });\n    html += \"\u003C/ul>\";\n    stepDetails.innerHTML = html;\n}\nfunction nnShowFullTable() {\n    const fullTableDiv = document.getElementById('nnFullTable');\n    if (!fullTableDiv || !nnAnimation) return;\n    let html = \"\u003Ch4>\u003C/h4>\";\n    html += \"\u003Ctable class='selection-table' style='width: 100%; border-collapse: collapse;'>\";\n    html += \"\u003Ctr>\u003Cth>Schritt\u003C/th>\u003Cth>Aktueller Knoten\u003C/th>\u003Cth>Kandidat\u003C/th>\u003Cth>Entfernung\u003C/th>\u003Cth>Ausgewählt\u003C/th>\u003C/tr>\";   \n    nnAnimation.selectionSteps.forEach((step, stepIndex) => {\n        step.candidates.forEach(candidate => {\n            html += candidate.isNearest ? \"\u003Ctr class='selected'>\" : \"\u003Ctr>\";\n            html += `\u003Ctd style=\"border: 1px solid #ddd; padding: 4px; text-align: center;\">${stepIndex + 1}\u003C/td>`;\n            html += `\u003Ctd style=\"border: 1px solid #ddd; padding: 4px; text-align: center;\">P${step.current}\u003C/td>`;\n            html += `\u003Ctd style=\"border: 1px solid #ddd; padding: 4px; text-align: center;\">P${candidate.node}\u003C/td>`;\n            html += `\u003Ctd style=\"border: 1px solid #ddd; padding: 4px; text-align: center;\">${candidate.distance.toFixed(2)}\u003C/td>`;\n            html += `\u003Ctd style=\"border: 1px solid #ddd; padding: 4px; text-align: center;\">${candidate.isNearest ? \"✓\" : \"\"}\u003C/td>`;\n            html += \"\u003C/tr>\";\n        });\n    });  \n    html += \"\u003C/table>\";      \n    fullTableDiv.innerHTML = html;\n    fullTableDiv.style.display = 'block';\n}\nfunction nnToggleFullTable() {\n    const fullTableDiv = document.getElementById('nnFullTable');\n    if (!fullTableDiv) return;\n    if (fullTableDiv.style.display === 'none' || !fullTableDiv.innerHTML.trim()) {\n        nnShowFullTable();\n    } else {\n        fullTableDiv.style.display = 'none';\n    }\n}\nfunction nnNextStep() {\n    if (!nnAnimation) return;   \n    if (nnAnimation.currentPathIndex > nnAnimation.selectionSteps.length) {\n        nnAnimation.ctx.clearRect(0, 0, 100, 50);\n        nnAnimation.drawNodes(true);\n        nnAnimation.drawPath(nnAnimation.nnPath.length - 1);\n        return;\n    }  \n    nnAnimation.nextStep();   \n    nnUpdateInfoPanel();     \n    if (nnAnimation.currentPathIndex > nnAnimation.selectionSteps.length) {\n        nnAnimation.ctx.clearRect(0, 0, 100, 50);\n        nnAnimation.drawNodes(true);\n        nnAnimation.drawPath(nnAnimation.nnPath.length - 1);       \n        let totalLength = 0;\n        for (let i = 1; i \u003C nnAnimation.nnPath.length; i++) {\n            totalLength += nnAnimation.distance(\n                nnAnimation.nodes[nnAnimation.nnPath[i - 1]], \n                nnAnimation.nodes[nnAnimation.nnPath[i]]\n            );\n        }    \n        nnUpdateInfoPanel();        \n        nnStopAutoAnimation();\n    }\n}\nfunction nnResetAnimation() {\n    nnStopAutoAnimation();\n    if (nnAnimation) {\n        nnAnimation.ctx.clearRect(0, 0, 100, 50);\n        nnAnimation.currentPathIndex = 0;\n        nnAnimation.drawNodes(true);\n        nnUpdateInfoPanel();\n    }\n}\nfunction nnToggleAutoAnimation() {\n    if (nnAutoIntervalId) {\n        nnStopAutoAnimation();\n    } else {\n        nnStartAutoAnimation();\n    }\n}\nfunction nnStartAutoAnimation() {\n    if (nnAutoIntervalId) return;\n    const slider = document.getElementById('nnSpeedSlider');\n    if (!slider) return;\n    const percent = parseInt(slider.value);\n    const speed = 1000 * (100 / percent);\n    nnAutoIntervalId = setInterval(() => {\n        nnNextStep();\n    }, speed);\n}\nfunction nnStopAutoAnimation() {\n    if (nnAutoIntervalId) {\n        clearInterval(nnAutoIntervalId);\n        nnAutoIntervalId = null;\n    }\n}\nfunction nnUpdateNumPoints() {\n    nnStopAutoAnimation();\n    const numPoints = parseInt(document.getElementById('nnNumPoints').value);    \n    if (isNaN(numPoints) || numPoints \u003C 3 || numPoints > 25) {\n        alert(\"Bitte geben Sie eine gültige Anzahl von Punkten zwischen 3 und 25 ein.\");\n        return;\n    }       \n    const startPoint = parseInt(document.getElementById('nnStartPoint').value);\n    nnAnimation = new NearestNeighborAnimation(document.getElementById('nnCanvas'), numPoints, startPoint);    \n    nnAnimation.ctx.clearRect(0, 0, 100, 50);\n    nnAnimation.drawNodes(true);     \n    nnUpdateInfoPanel();\n}\nfunction nnUpdateStartPoint() {\n    nnStopAutoAnimation();\n    const startPoint = parseInt(document.getElementById('nnStartPoint').value);    \n    // Prüfen ob der Startpunkt gültig ist\n    if (isNaN(startPoint) || startPoint \u003C 0 || startPoint >= nnAnimation.nodes.length) {\n        alert(`Bitte geben Sie einen gültigen Startpunkt zwischen 0 und ${nnAnimation.nodes.length - 1} ein.`);\n        return;\n    } \n    // Speichern der aktuellen Knoten\n    const currentNodes = JSON.parse(JSON.stringify(nnAnimation.nodes));     \n    // Erstellen einer neuen Animation mit dem neuen Startpunkt aber den bestehenden Knoten\n    nnAnimation = new NearestNeighborAnimation(document.getElementById('nnCanvas'), nnAnimation.numNodes, startPoint);\n    nnAnimation.nodes = currentNodes; // Bestehende Knoten übernehmen  \n    // Neuberechnung des Nearest-Neighbor-Pfades mit dem neuen Startpunkt\n    nnAnimation.computeNearestNeighborPath(); \n    nnAnimation.ctx.clearRect(0, 0, 100, 50);\n    nnAnimation.drawNodes(true);\n    nnUpdateInfoPanel();\n}\nfunction nnImportPoints() {\n    if (typeof animation !== 'undefined' && animation && animation.nodes) {\n        if (nnAnimation) {\n            nnAnimation.importChristofidesPoints();\n            nnResetAnimation();\n            nnUpdateInfoPanel();\n        }\n    } else {\n        console.log(\"Christofides-Animation nicht gefunden oder keine Punkte verfügbar\");\n    }\n}\nfunction nnImportBFPoints() {\n    if (typeof bfAnimation !== 'undefined' && bfAnimation && bfAnimation.nodes) {\n        if (nnAnimation) {\n            nnAnimation.importBFPoints();\n            nnResetAnimation();\n            nnUpdateInfoPanel();\n        }\n    } else {\n        console.log(\"BF-Animation nicht gefunden oder keine Punkte verfügbar\");\n    }\n}\nfunction nnToggleConstellation(selectedType) {\n    console.log(\"nnToggleConstellation aufgerufen mit:\", selectedType);\n    nnStopAutoAnimation();    \n    if (!selectedType) {\n        console.log(\"Kein Sternenbild ausgewählt\");\n        return;\n    } \n    try {\n        const startPoint = parseInt(document.getElementById('nnStartPoint').value);\n        nnAnimation = new NearestNeighborAnimation(document.getElementById('nnCanvas'), 0, startPoint);\n        console.log(\"Animation erstellt\");\n        nnAnimation.nodes = createConstellationNodes(selectedType, 0);\n        console.log(\"Knoten erzeugt:\", nnAnimation.nodes.length);\n        nnAnimation.numNodes = nnAnimation.nodes.length;\n        nnAnimation.computeNearestNeighborPath();\n        console.log(\"Pfad berechnet\"); \n        nnAnimation.currentPathIndex = 0;\n        nnAnimation.ctx.clearRect(0, 0, 100, 50);\n        nnAnimation.drawNodes(true); \n        nnUpdateInfoPanel();\n        console.log(\"UI aktualisiert\");  \n        document.getElementById('nnNumPoints').value = nnAnimation.nodes.length;\n    } catch (error) {\n        console.error(\"Fehler in nnToggleConstellation:\", error);\n    }\n}\nfunction nnGenerateRandomPoints() {\n    nnStopAutoAnimation();  \n    // Die Anzahl der Punkte aus dem Eingabefeld lesen\n    const numPoints = parseInt(document.getElementById('nnNumPoints').value);\n    // Startpunkt aus dem Eingabefeld lesen\n    const startPoint = parseInt(document.getElementById('nnStartPoint').value);  \n    // Prüfen ob die Anzahl der Punkte gültig ist\n    if (isNaN(numPoints) || numPoints \u003C 3 || numPoints > 25) {\n        alert(\"Bitte geben Sie eine gültige Anzahl von Punkten zwischen 3 und 25 ein.\");\n        return;\n    }   \n    // Neue Animation mit den angegebenen Parametern erstellen\n    nnAnimation = new NearestNeighborAnimation(document.getElementById('nnCanvas'), numPoints, startPoint); \n    // Canvas löschen und neu zeichnen\n    nnAnimation.ctx.clearRect(0, 0, 100, 50);\n    nnAnimation.drawNodes(true);  \n    // Infopanel aktualisieren\n    nnUpdateInfoPanel();\n}\nfunction nnDownloadGraph() {\n    const canvas = document.getElementById('nnCanvas');\n    if (!canvas) return;  \n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = canvas.width;\n    tmpCanvas.height = canvas.height;\n    const tmpCtx = tmpCanvas.getContext('2d'); \n    tmpCtx.fillStyle = 'white';\n    tmpCtx.fillRect(0, 0, tmpCanvas.width, tmpCanvas.height);  \n    tmpCtx.drawImage(canvas, 0, 0);  \n    const link = document.createElement('a');\n    link.download = 'nearest-neighbor-graph.png';\n    link.href = tmpCanvas.toDataURL('image/png');\n    link.click();\n} \nfunction nnFindBestStartPoint() {\n    if (!nnAnimation || !nnAnimation.nodes || nnAnimation.nodes.length \u003C 2) return; \n    nnStopAutoAnimation();  \n    // Speichern der aktuellen Knoten\n    const currentNodes = JSON.parse(JSON.stringify(nnAnimation.nodes));\n    const numNodes = currentNodes.length;   \n    // Für jeden möglichen Startpunkt die Tourlänge berechnen\n    let bestStartPoint = 0;\n    let shortestDistance = Infinity;\n    const results = [];   \n    for (let startPoint = 0; startPoint \u003C numNodes; startPoint++) {\n        // Nearest Neighbor Pfad für diesen Startpunkt berechnen\n        const visited = new Set([startPoint]);\n        const path = [startPoint];\n        let current = startPoint;       \n        while (visited.size \u003C numNodes) {\n            let nearest = null;\n            let minDistance = Infinity;\n            \n            for (let i = 0; i \u003C numNodes; i++) {\n                if (!visited.has(i)) {\n                    const dist = nnAnimation.distance(currentNodes[current], currentNodes[i]);\n                    if (dist \u003C minDistance) {\n                        minDistance = dist;\n                        nearest = i;\n                    }\n                }\n            }\n            \n            current = nearest;\n            visited.add(current);\n            path.push(current);\n        }\n        \n        // Gesamtpfadlänge berechnen (einschließlich Rückweg zum Startpunkt)\n        let totalDistance = 0;\n        for (let i = 0; i \u003C path.length - 1; i++) {\n            totalDistance += nnAnimation.distance(\n                currentNodes[path[i]], \n                currentNodes[path[i + 1]]\n            );\n        }\n        // Rückweg zum Startpunkt\n        totalDistance += nnAnimation.distance(\n            currentNodes[path[path.length - 1]], \n            currentNodes[startPoint]\n        );\n        \n        // Pfad und Distanz speichern\n        results.push({\n            startPoint: startPoint,\n            distance: totalDistance,\n            path: [...path, startPoint]\n        });\n        \n        // Prüfen, ob dieser Startpunkt besser ist\n        if (totalDistance \u003C shortestDistance) {\n            shortestDistance = totalDistance;\n            bestStartPoint = startPoint;\n        }\n    }\n    \n    // Sortiere die Ergebnisse nach Pfadlänge\n    results.sort((a, b) => a.distance - b.distance);\n    \n    // Theme-abhängige Farben\n    const isDark = isDarkMode();\n    const bgColor = isDark ? \"#1e3b1e\" : \"#e8ffe8\";\n    const borderColor = isDark ? \"#4CAF50\" : \"#4CAF50\";\n    const textColor = isDark ? \"#fff\" : \"#2E7D32\";\n    const tableHeaderBgColor = isDark ? \"#2a472a\" : \"#d4ffd4\";\n    \n    // Ergebnisanzeige im Panel\n    const dataOutput = document.getElementById('nnDataOutput');\n    if (dataOutput) {\n        let resultHTML = `\n            \u003Cdiv style=\"margin: 15px 0; padding: 15px; background-color: ${bgColor}; border: 2px solid ${borderColor}; border-radius: 5px;\">\n                \u003Ch4 style=\"margin-top: 0; color: ${textColor};\">Optimaler Startpunkt gefunden!\u003C/h4>\n                \u003Cp>\u003Cstrong>Bester Startpunkt:\u003C/strong> P${bestStartPoint}\u003C/p>\n                \u003Cp>\u003Cstrong>Pfadlänge:\u003C/strong> ${shortestDistance.toFixed(2)}\u003C/p>\n                \u003Cp>\u003Cstrong>Optimaler Pfad:\u003C/strong> ${results[0].path.map(p => `P${p}`).join(' → ')}\u003C/p>\n                \u003Chr>\n                \u003Ch5>Alle Startpunkte im Vergleich:\u003C/h5>\n                \u003Ctable class=\"selection-table\" style=\"width: 100%; margin-top: 10px; ${isDark ? 'color: ' + textColor + ';' : ''}\">\n                    \u003Ctr>\n                        \u003Cth>Rang\u003C/th>\n                        \u003Cth>Startpunkt\u003C/th>\n                        \u003Cth>Pfadlänge\u003C/th>\n                        \u003Cth>Vergleich zum Optimum\u003C/th>\n                    \u003C/tr>\n        `;\n        \n        // Füge alle Ergebnisse in die Tabelle ein\n        results.forEach((result, index) => {\n            const difference = ((result.distance / shortestDistance - 1) * 100).toFixed(2);\n            const rowClass = result.startPoint === bestStartPoint ? 'selected' : '';\n            const rowStyle = result.startPoint === bestStartPoint && isDark ? \n                `background-color: ${tableHeaderBgColor};` : '';\n            \n            resultHTML += `\n                \u003Ctr class=\"${rowClass}\" style=\"${rowStyle}\">\n                    \u003Ctd style=\"text-align: center;\">${index + 1}\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">P${result.startPoint}\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">${result.distance.toFixed(2)}\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">${index === 0 ? 'Optimum' : '+' + difference + '%'}\u003C/td>\n                \u003C/tr>\n            `;\n        });\n        \n        resultHTML += `\n                \u003C/table>\n            \u003C/div>\n        `;\n        \n        dataOutput.innerHTML = resultHTML;\n        \n        // Sicherstellen, dass die Textfarbe im Dark Mode korrekt ist\n        if (isDark) {\n            const resultDiv = dataOutput.querySelector('div');\n            if (resultDiv) {\n                // Alle Text-Elemente in der Tabelle auf die richtige Farbe setzen\n                const textElements = resultDiv.querySelectorAll('p, td, th, h5');\n                textElements.forEach(el => {\n                    if (!el.style.color) {\n                        el.style.color = getTextColor();\n                    }\n                });\n            }\n        }\n    }\n    \n    // Besten Startpunkt in das Eingabefeld setzen\n    document.getElementById('nnStartPoint').value = bestStartPoint;\n    \n    // Animation mit dem besten Startpunkt neu starten\n    nnAnimation = new NearestNeighborAnimation(document.getElementById('nnCanvas'), numNodes, bestStartPoint);\n    nnAnimation.nodes = currentNodes; // Bestehende Knoten übernehmen\n    nnAnimation.computeNearestNeighborPath();\n    nnAnimation.ctx.clearRect(0, 0, 100, 50);\n    nnAnimation.drawNodes(true);\n    nnAnimation.drawPath(nnAnimation.nnPath.length - 1); // Zeige sofort den kompletten optimalen Pfad\n    \n    // Aktualisiere den Fortschritt der Animation, um den vollständigen Pfad anzuzeigen\n    nnAnimation.currentPathIndex = nnAnimation.selectionSteps.length + 1;\n    \n    // Erneut das Theme anwenden für sicheren Dark Mode-Support\n    updateInfoPanelsStyle();\n}\n// Event-Listener\ndocument.getElementById('nnSpeedSlider')?.addEventListener('input', function() {\n    if (nnAutoIntervalId) {\n        clearInterval(nnAutoIntervalId);\n        const percent = parseInt(this.value);\n        const speed = 1000 * (100 / percent);\n        nnAutoIntervalId = setInterval(() => {\n            nnNextStep();\n        }, speed);\n    }\n});\n// Initialisierung beim Laden der Seite\ndocument.addEventListener('DOMContentLoaded', function() {\n    const canvas = document.getElementById('nnCanvas');\n    if (canvas) {\n        nnAnimation = new NearestNeighborAnimation(canvas, 4, 0);\n        nnAnimation.drawNodes(true);\n        nnUpdateInfoPanel();\n    }\n    \n    // Brute Force Animation initialisieren und Info-Panel aktualisieren\n    const bfCanvas = document.getElementById('bfCanvas');\n    if (bfCanvas) {\n        if (bfAnimation) {\n            bfAnimation.updateInfoPanel();\n        } else {\n            bfAnimation = new BruteForceAnimation(bfCanvas, 4, 0);\n            bfAnimation.updateInfoPanel();\n        }\n    }\n});\n// ================ BRUTE FORCE ALGORITHMUS ================\n// Brute Force Animation Klasse\nclass BruteForceAnimation {\n    constructor(canvas, numNodes = 4, startNode = 0) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.ctx.scale(canvas.width / 50, canvas.height / 50);\n        this.numNodes = numNodes;\n        this.startNode = startNode;\n        this.nodes = [];\n        this.permutations = [];\n        this.currentPermutationIndex = 0;\n        this.shortestPath = null;\n        this.shortestDistance = Infinity;\n        this.init();\n        this.drawNodes(true);\n        this.updateInfoPanel(); // Info-Panel beim Initialisieren aktualisieren\n    }\n    drawCoordinateSystem() {\n        this.ctx.strokeStyle = getGridColor();\n        this.ctx.lineWidth = 0.1;\n        for (let x = 0; x \u003C= 50; x += 5) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(x, 0);\n            this.ctx.lineTo(x, 50);\n            this.ctx.stroke();\n        }\n        for (let y = 0; y \u003C= 50; y += 5) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(0, y);\n            this.ctx.lineTo(50, y);\n            this.ctx.stroke();\n        }\n    }\n    init() {\n        this.generateNodes();\n        this.permutations = this.generatePermutations([...Array(this.numNodes).keys()]);\n    }\n    generateNodes() {\n        for (let i = 0; i \u003C this.numNodes; i++) {\n            this.nodes.push({\n                x: Math.floor(Math.random() * 40) + 5,\n                y: Math.floor(Math.random() * 40) + 5,\n                id: i\n            });\n        }\n    }\n    generatePermutations(array) {\n        // Wenn ein Startknoten festgelegt ist, generieren wir nur Permutationen, die mit dem Startknoten beginnen\n        const permutations = [];     \n        // Wir fixieren den Startknoten\n        const startNode = this.startNode;       \n        // Entferne den Startknoten aus dem Array\n        const remainingNodes = array.filter(node => node !== startNode);         \n        // Generiere alle Permutationen für die verbleibenden Knoten\n        if (remainingNodes.length === 0) {\n            return [[startNode]];\n        } else if (remainingNodes.length === 1) {\n            return [[startNode, remainingNodes[0]]];\n        }        \n        const restPerms = this.generateAllPermutations(remainingNodes);         \n        // Füge den Startknoten am Anfang jeder Permutation hinzu\n        for (const perm of restPerms) {\n            permutations.push([startNode, ...perm]);\n        }        \n        return permutations;\n    }\n       // Hilfsfunktion zum Generieren aller Permutationen ohne festen Startpunkt\n    generateAllPermutations(array) {\n        if (array.length === 1) return [array];\n        const perms = [];\n        for (let i = 0; i \u003C array.length; i++) {\n            const rest = [...array.slice(0, i), ...array.slice(i + 1)];\n            const restPerms = this.generateAllPermutations(rest);\n            for (const perm of restPerms) {\n                perms.push([array[i], ...perm]);\n            }\n        }\n        return perms;\n    }\n    distance(a, b) {\n        return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n    }\n    calculatePathDistance(path) {\n        let distance = 0;\n        for (let i = 0; i \u003C path.length - 1; i++) {\n            distance += this.distance(this.nodes[path[i]], this.nodes[path[i + 1]]);\n        }\n        distance += this.distance(this.nodes[path[path.length - 1]], this.nodes[path[0]]);\n        return distance;\n    }\n    drawNodes(showCoordinateSystem = false) {\n        if (showCoordinateSystem) {\n            this.drawCoordinateSystem();\n        }\n        this.nodes.forEach(node => {\n            this.ctx.beginPath();\n            this.ctx.arc(node.x, node.y, 0.5, 0, Math.PI * 2);\n            this.ctx.fillStyle = getPointColor();\n            this.ctx.fill();\n            this.ctx.font = \"1.5px sans-serif\";\n            this.ctx.fillStyle = getTextColor();\n            this.ctx.textAlign = \"center\";\n            const label = `P${node.id}`;\n            this.ctx.fillText(label, node.x, node.y - 1.2);\n        });\n    }\n    drawPath(path, color = 'blue') {\n        this.ctx.strokeStyle = color;\n        this.ctx.lineWidth = 0.3;\n        this.ctx.beginPath();\n        const startNode = this.nodes[path[0]];\n        this.ctx.moveTo(startNode.x, startNode.y);\n        for (let i = 1; i \u003C path.length; i++) {\n            const node = this.nodes[path[i]];\n            this.ctx.lineTo(node.x, node.y);\n        }\n        this.ctx.lineTo(startNode.x, startNode.y);\n        this.ctx.stroke();\n    }\n    nextStep() {\n        if (this.currentPermutationIndex >= this.permutations.length) {\n            // Wenn alle Permutationen getestet wurden, lösche alle roten Geraden\n            this.ctx.clearRect(0, 0, 50, 50);\n            this.drawNodes(true);\n            // Zeichne nur den kürzesten Pfad in grün\n            if (this.shortestPath) {\n                this.drawPath(this.shortestPath, 'green');\n            }            \n            // Die Punkte und Parameter werden durch die updateInfoPanel-Methode angezeigt\n            this.updateInfoPanel(true);\n            return;\n        }\n        const currentPath = this.permutations[this.currentPermutationIndex];\n        const currentDistance = this.calculatePathDistance(currentPath);\n        if (currentDistance \u003C this.shortestDistance) {\n            this.shortestDistance = currentDistance;\n            this.shortestPath = currentPath;\n        }\n        this.ctx.clearRect(0, 0, 50, 50);\n        this.drawNodes(true);\n        this.drawPath(currentPath, 'red');\n        if (this.shortestPath) {\n            this.drawPath(this.shortestPath, 'green');\n        }\n        this.currentPermutationIndex++;\n        this.updateInfoPanel();\n    }\n    updateInfoPanel(isFinished = false) {\n        const dataOutput = document.getElementById('bfDataOutput');\n        let html = `\u003Cstrong>Punkte:\u003C/strong>\u003Cbr>`;\n        html += this.nodes.map(node => \"P\" + node.id + \": (\" + node.x + \", \" + node.y + \")\").join(\"\u003Cbr>\");\n        html += \"\u003Chr>\";      \n        html += `\u003Cstrong>Anzahl der Permutationen:\u003C/strong> ${this.permutations.length}\u003Cbr>`;        \n        if (!isFinished) {\n            html += `\u003Cstrong>Aktuelle Permutation:\u003C/strong> ${this.currentPermutationIndex} von ${this.permutations.length}\u003Cbr>\u003Chr>`;         \n            if (this.currentPermutationIndex \u003C this.permutations.length) {\n                html += `\u003Cstrong>Aktueller Pfad:\u003C/strong> ${this.permutations[this.currentPermutationIndex].map(p => `P${p}`).join(' → ')}\u003Cbr>`;\n                html += `\u003Cstrong>Distanz der aktuellen Permutation:\u003C/strong> ${this.calculatePathDistance(this.permutations[this.currentPermutationIndex]).toFixed(2)}\u003Cbr>`;\n            } else {\n                html += \"\u003Cstrong>Alle Permutationen geprüft\u003C/strong>\u003Cbr>\";\n            }\n        } else {\n            html += `\u003Cstrong>Alle Permutationen geprüft:\u003C/strong> ${this.permutations.length} von ${this.permutations.length}\u003Cbr>\u003Chr>`;\n        }          \n        html += `\u003Chr>\u003Cstrong>Kürzeste Distanz:\u003C/strong> ${this.shortestDistance !== Infinity ? this.shortestDistance.toFixed(2) : \"Noch nicht gefunden\"}\u003Cbr>`;           \n        if (this.shortestPath) {\n            html += `\u003Cstrong>Kürzester Pfad:\u003C/strong> ${this.shortestPath.map(p => `P${p}`).join(' → ')}\u003Cbr>`;        \n            // Zeige detaillierte Ergebnisse an, wenn alle Permutationen geprüft wurden\n            if (isFinished || this.currentPermutationIndex >= this.permutations.length) {\n                html += `\u003Chr>\u003Ch4>Ergebnisanalyse:\u003C/h4>`;  \n                // Berechne Faktoriell für Vergleich\n                const factorial = n => n \u003C= 1 ? 1 : n * factorial(n - 1);\n                const totalPermsWithoutFix = factorial(this.numNodes);\n                const totalPermsWithFix = factorial(this.numNodes - 1);     \n                html += `\u003Cstrong>Geprüfte Permutationen:\u003C/strong> ${this.permutations.length}\u003Cbr>`;\n                html += `\u003Cstrong>Gesamtpermutationen ohne festen Startpunkt:\u003C/strong> ${totalPermsWithoutFix}\u003Cbr>`;\n                html += `\u003Cstrong>Ersparnis durch festen Startpunkt:\u003C/strong> ${totalPermsWithoutFix - totalPermsWithFix} Permutationen (${Math.round((1 - totalPermsWithFix/totalPermsWithoutFix) * 100)}%)\u003Cbr>\u003Cbr>`;      \n                html += `\u003Cstrong style=\"font-size: 1.2em;\">Gefundener optimaler Pfad:\u003C/strong>\u003Cbr>`;\n                html += `\u003Cspan style=\"font-size: 1.1em;\">${this.shortestPath.map(p => `P${p}`).join(' → ')} → P${this.shortestPath[0]}\u003C/span>\u003Cbr>`;\n                html += `\u003Cstrong>Gesamtlänge:\u003C/strong> \u003Cspan style=\"color: green; font-weight: bold;\">${this.shortestDistance.toFixed(2)}\u003C/span>\u003Cbr>`;\n                // Einzelne Wegstücke mit Distanzen anzeigen\n                html += `\u003Cbr>\u003Cstrong>Einzelne Abschnitte:\u003C/strong>\u003Cbr>`;\n                html += `\u003Ctable class=\"selection-table\" style=\"width: 100%;\">`;\n                html += `\u003Ctr>\u003Cth>Von\u003C/th>\u003Cth>Nach\u003C/th>\u003Cth>Distanz\u003C/th>\u003C/tr>`;\n                // Füge alle Segmente des kürzesten Pfades hinzu\n                for (let i = 0; i \u003C this.shortestPath.length - 1; i++) {\n                    const from = this.shortestPath[i];\n                    const to = this.shortestPath[i + 1];\n                    const dist = this.distance(this.nodes[from], this.nodes[to]);\n                    html += `\u003Ctr>\n                        \u003Ctd style=\"text-align: center;\">P${from}\u003C/td>\n                        \u003Ctd style=\"text-align: center;\">P${to}\u003C/td>\n                        \u003Ctd style=\"text-align: center;\">${dist.toFixed(2)}\u003C/td>\n                    \u003C/tr>`;\n                }  \n                // Füge den Rückweg zum Startpunkt hinzu\n                const from = this.shortestPath[this.shortestPath.length - 1];\n                const to = this.shortestPath[0];\n                const dist = this.distance(this.nodes[from], this.nodes[to]);\n                html += `\u003Ctr>\n                    \u003Ctd style=\"text-align: center;\">P${from}\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">P${to}\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">${dist.toFixed(2)}\u003C/td>\n                \u003C/tr>`;     \n                html += `\u003Ctr style=\"font-weight: bold;\">\n                    \u003Ctd colspan=\"2\" style=\"text-align: right;\">Gesamtlänge:\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">${this.shortestDistance.toFixed(2)}\u003C/td>\n                \u003C/tr>`;\n                html += `\u003C/table>`;\n            }\n        } else {\n            html += \"\u003Cstrong>Kürzester Pfad:\u003C/strong> Noch nicht gefunden\";\n        }        \n        dataOutput.innerHTML = html;\n    }\n    reset() {\n        this.currentPermutationIndex = 0;\n        this.shortestPath = null;\n        this.shortestDistance = Infinity;\n        this.ctx.clearRect(0, 0, 50, 50);\n        this.drawNodes(true);\n        this.updateInfoPanel();\n    }\n    importChristofidesPoints() {\n        if (typeof animation !== 'undefined' && animation && animation.nodes) {\n            this.nodes = JSON.parse(JSON.stringify(animation.nodes));\n            this.numNodes = this.nodes.length;\n            this.permutations = this.generatePermutations([...Array(this.numNodes).keys()]);\n            this.reset();\n        }\n    }\n    importNNPoints() {\n        if (typeof nnAnimation !== 'undefined' && nnAnimation && nnAnimation.nodes) {\n            this.nodes = JSON.parse(JSON.stringify(nnAnimation.nodes));\n            this.numNodes = this.nodes.length;\n            this.permutations = this.generatePermutations([...Array(this.numNodes).keys()]);\n            this.reset();\n        }\n    }\n}\nlet bfAnimation = new BruteForceAnimation(document.getElementById('bfCanvas'), 4, 0);\nlet bfAutoIntervalId = null;\nfunction bfNextStep() {\n    if (!bfAnimation) return;\n    bfAnimation.nextStep();\n}\nfunction bfStartAutoAnimation() {\n    if (bfAutoIntervalId) return;\n    const slider = document.getElementById('bfSpeedSlider');\n    const percent = parseInt(slider.value);\n    const speed = 1000 * (100 / percent);\n    bfAutoIntervalId = setInterval(() => {\n        bfAnimation.nextStep();\n    }, speed);\n}\nfunction bfToggleAutoAnimation() {\n    if (bfAutoIntervalId) {\n        bfStopAutoAnimation();\n    } else {\n        bfStartAutoAnimation();\n    }\n}\nfunction bfStopAutoAnimation() {\n    if (bfAutoIntervalId) {\n        clearInterval(bfAutoIntervalId);\n        bfAutoIntervalId = null;\n    }\n}\nfunction bfResetAnimation() {\n    bfStopAutoAnimation();\n    if (bfAnimation) {\n        bfAnimation.reset();\n    }\n}\nfunction bfUpdateNumPoints() {\n    const numPoints = parseInt(document.getElementById('bfNumPoints').value, 10);\n    const startPoint = parseInt(document.getElementById('bfStartPoint').value, 10);\n    if (isNaN(numPoints) || numPoints \u003C 3 || numPoints > 25) {\n        alert(\"Bitte eine gültige Anzahl zwischen 3 und 25 eingeben\");\n        return;\n    }\n    bfAnimation = new BruteForceAnimation(document.getElementById('bfCanvas'), numPoints, startPoint);\n    bfAnimation.reset();\n}\nfunction bfUpdateStartPoint() {\n    bfStopAutoAnimation();\n    const startPoint = parseInt(document.getElementById('bfStartPoint').value);   \n    // Prüfen ob der Startpunkt gültig ist\n    if (isNaN(startPoint) || startPoint \u003C 0 || startPoint >= bfAnimation.nodes.length) {\n        alert(`Bitte geben Sie einen gültigen Startpunkt zwischen 0 und ${bfAnimation.nodes.length - 1} ein.`);\n        return;\n    }    \n    // Speichern der aktuellen Knoten\n    const currentNodes = JSON.parse(JSON.stringify(bfAnimation.nodes));      \n    // Neue Animation mit dem neuen Startpunkt erstellen\n    bfAnimation = new BruteForceAnimation(document.getElementById('bfCanvas'), bfAnimation.numNodes, startPoint);       \n    // Bestehende Knoten übernehmen\n    bfAnimation.nodes = currentNodes;    \n    // Permutationen neu berechnen\n    bfAnimation.permutations = bfAnimation.generatePermutations([...Array(bfAnimation.numNodes).keys()]);     \n    // Animation zurücksetzen\n    bfAnimation.reset();\n}\nfunction bfImportChristofidesPoints() {\n    if (bfAnimation) {\n        bfAnimation.importChristofidesPoints();\n    }\n}\nfunction bfImportNNPoints() {\n    if (bfAnimation) {\n        bfAnimation.importNNPoints();\n    }\n}\nfunction bfToggleConstellation(selectedType) {\n    if (!selectedType) return;\n    // Erstelle eine neue BruteForceAnimation-Instanz\n    bfAnimation = new BruteForceAnimation(document.getElementById('bfCanvas'), 0);\n    // Setze die Knoten basierend auf dem ausgewählten Sternbild\n    bfAnimation.nodes = createConstellationNodes(selectedType, 0);\n    bfAnimation.numNodes = bfAnimation.nodes.length;\n    // Initialisiere die Permutationen und setze die Animation zurück\n    bfAnimation.permutations = bfAnimation.generatePermutations([...Array(bfAnimation.numNodes).keys()]);\n    bfAnimation.reset();\n}\nfunction bfDownloadGraph() {\n    const canvas = document.getElementById('bfCanvas');\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = canvas.width;\n    tmpCanvas.height = canvas.height;\n    const tmpCtx = tmpCanvas.getContext('2d');\n    tmpCtx.fillStyle = 'white';\n    tmpCtx.fillRect(0, 0, tmpCanvas.width, tmpCanvas.height);\n    tmpCtx.drawImage(canvas, 0, 0);\n    const link = document.createElement('a');\n    link.download = 'brute-force-graph.png';\n    link.href = tmpCanvas.toDataURL('image/png');\n    link.click();\n}\nfunction bfShowFullTable() {\n    const fullTableDiv = document.getElementById('bfFullTable');\n    if (!fullTableDiv || !bfAnimation) return;\n    \n    // Theme-abhängige Farben\n    const isDark = isDarkMode();\n    const bgColor = isDark ? \"#2a472a\" : \"#d4ffd4\";\n    const textColor = isDark ? \"#fff\" : \"#000\";\n    const highlightTextColor = isDark ? \"#4CAF50\" : \"#006400\";\n    \n    let html = \"\u003Ch4>Alle getesteten Pfade\u003C/h4>\";\n    html += \"\u003Ctable class='selection-table' style='width: 100%; border-collapse: collapse;'>\";\n    html += \"\u003Ctr>\u003Cth>Pfad\u003C/th>\u003Cth>Distanz\u003C/th>\u003Cth>Kürzester Pfad\u003C/th>\u003C/tr>\";\n    \n    bfAnimation.permutations.forEach((path, index) => {\n        const distance = bfAnimation.calculatePathDistance(path).toFixed(2);\n        const isShortest = bfAnimation.shortestPath && bfAnimation.shortestPath.join(',') === path.join(',');\n        \n        // Verbesserte Stilisierung für den kürzesten Pfad\n        const rowStyle = isShortest ? \n            `background-color: ${bgColor}; font-weight: bold;` : '';\n            \n        const checkmarkStyle = isShortest ? \n            `color: ${highlightTextColor}; font-size: 1.2em; font-weight: bold;` : '';\n            \n        html += `\u003Ctr style=\"${rowStyle}\" class=\"${isShortest ? 'selected' : ''}\">`;\n        html += `\u003Ctd style='border: 1px solid #ddd; padding: 4px; text-align: center;'>${path.map(p => `P${p}`).join(' → ')}\u003C/td>`;\n        html += `\u003Ctd style='border: 1px solid #ddd; padding: 4px; text-align: center;'>${distance}\u003C/td>`;\n        html += `\u003Ctd style='border: 1px solid #ddd; padding: 4px; text-align: center; ${checkmarkStyle}'>${isShortest ? \"✓\" : \"\"}\u003C/td>`;\n        html += \"\u003C/tr>\";\n    });\n    \n    html += \"\u003C/table>\";\n    fullTableDiv.innerHTML = html;\n    fullTableDiv.style.display = 'block';\n    \n    // Stelle sicher, dass die Tabellenborden im Dark Mode richtig angezeigt werden\n    if (isDark) {\n        const tableCells = fullTableDiv.querySelectorAll('td, th');\n        tableCells.forEach(cell => {\n            cell.style.borderColor = \"#555\";\n        });\n    }\n}\nfunction bfToggleFullTable() {\n    const fullTableDiv = document.getElementById('bfFullTable');\n    if (!fullTableDiv) return;\n    if (fullTableDiv.style.display === 'none' || !fullTableDiv.innerHTML.trim()) {\n        bfShowFullTable();\n    } else {\n        fullTableDiv.style.display = 'none';\n    }\n}\n\u003C/script>\n",{"title":8,"searchDepth":1128,"depth":1128,"links":1129},2,[1130,1132,1133],{"id":110,"depth":1131,"text":113},3,{"id":482,"depth":1131,"text":485},{"id":849,"depth":1131,"text":852},"markdown","content:articles:5.Algo-vertretung-14-04-25.md","content","articles/5.Algo-vertretung-14-04-25.md","articles/5.Algo-vertretung-14-04-25","md",{"_path":1141,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":1142,"description":1143,"cover":1144,"author":1145,"date":1148,"layout":1149,"body":1150,"_type":1134,"_id":1498,"_source":1136,"_file":1499,"_stem":1500,"_extension":1139},"/articles/get-started","Get started with Alpine","Creating a blog with Alpine is a command away, as well as deploying to many platforms.","/articles/get-started.webp",{"name":1146,"avatarUrl":14,"link":1147},"Sébastien Chopin","https://twitter.com/atinux","2022-08-23T00:00:00.000Z","article",{"type":18,"children":1151,"toc":1488},[1152,1157,1161,1168,1173,1218,1224,1237,1257,1263,1268,1292,1305,1311,1317,1322,1345,1358,1364,1376,1412,1418,1423,1446,1458,1463,1483],{"type":21,"tag":22,"props":1153,"children":1155},{"id":1154},"get-started-with-alpine",[1156],{"type":27,"value":1142},{"type":21,"tag":78,"props":1158,"children":1159},{},[1160],{"type":27,"value":1143},{"type":21,"tag":1162,"props":1163,"children":1165},"h2",{"id":1164},"create-a-blog",[1166],{"type":27,"value":1167},"Create a blog",{"type":21,"tag":78,"props":1169,"children":1170},{},[1171],{"type":27,"value":1172},"Open a terminal an run the following command:",{"type":21,"tag":1174,"props":1175,"children":1179},"pre",{"className":1176,"code":1177,"language":1178,"meta":8,"style":8},"language-bash shiki shiki-themes github-light github-dark","npx nuxi@latest init -t themes/alpine\n","bash",[1180],{"type":21,"tag":1181,"props":1182,"children":1183},"code",{"__ignoreMap":8},[1184],{"type":21,"tag":1185,"props":1186,"children":1189},"span",{"class":1187,"line":1188},"line",1,[1190,1196,1202,1207,1213],{"type":21,"tag":1185,"props":1191,"children":1193},{"style":1192},"--shiki-default:#6F42C1;--shiki-dark:#B392F0",[1194],{"type":27,"value":1195},"npx",{"type":21,"tag":1185,"props":1197,"children":1199},{"style":1198},"--shiki-default:#032F62;--shiki-dark:#9ECBFF",[1200],{"type":27,"value":1201}," nuxi@latest",{"type":21,"tag":1185,"props":1203,"children":1204},{"style":1198},[1205],{"type":27,"value":1206}," init",{"type":21,"tag":1185,"props":1208,"children":1210},{"style":1209},"--shiki-default:#005CC5;--shiki-dark:#79B8FF",[1211],{"type":27,"value":1212}," -t",{"type":21,"tag":1185,"props":1214,"children":1215},{"style":1198},[1216],{"type":27,"value":1217}," themes/alpine\n",{"type":21,"tag":1162,"props":1219,"children":1221},{"id":1220},"dependencies",[1222],{"type":27,"value":1223},"Dependencies",{"type":21,"tag":78,"props":1225,"children":1226},{},[1227,1229,1235],{"type":27,"value":1228},"Next, go to to ",{"type":21,"tag":1181,"props":1230,"children":1232},{"className":1231},[],[1233],{"type":27,"value":1234},"my-blog/",{"type":27,"value":1236}," directory and install the dependencies:",{"type":21,"tag":1174,"props":1238,"children":1240},{"className":1176,"code":1239,"language":1178,"meta":8,"style":8},"npm install\n",[1241],{"type":21,"tag":1181,"props":1242,"children":1243},{"__ignoreMap":8},[1244],{"type":21,"tag":1185,"props":1245,"children":1246},{"class":1187,"line":1188},[1247,1252],{"type":21,"tag":1185,"props":1248,"children":1249},{"style":1192},[1250],{"type":27,"value":1251},"npm",{"type":21,"tag":1185,"props":1253,"children":1254},{"style":1198},[1255],{"type":27,"value":1256}," install\n",{"type":21,"tag":1162,"props":1258,"children":1260},{"id":1259},"development",[1261],{"type":27,"value":1262},"Development",{"type":21,"tag":78,"props":1264,"children":1265},{},[1266],{"type":27,"value":1267},"Start the development server on port 3000:",{"type":21,"tag":1174,"props":1269,"children":1271},{"className":1176,"code":1270,"language":1178,"meta":8,"style":8},"npm run dev\n",[1272],{"type":21,"tag":1181,"props":1273,"children":1274},{"__ignoreMap":8},[1275],{"type":21,"tag":1185,"props":1276,"children":1277},{"class":1187,"line":1188},[1278,1282,1287],{"type":21,"tag":1185,"props":1279,"children":1280},{"style":1192},[1281],{"type":27,"value":1251},{"type":21,"tag":1185,"props":1283,"children":1284},{"style":1198},[1285],{"type":27,"value":1286}," run",{"type":21,"tag":1185,"props":1288,"children":1289},{"style":1198},[1290],{"type":27,"value":1291}," dev\n",{"type":21,"tag":78,"props":1293,"children":1294},{},[1295,1297,1303],{"type":27,"value":1296},"Next, you can start creating your content in Markdown in the ",{"type":21,"tag":1181,"props":1298,"children":1300},{"className":1299},[],[1301],{"type":27,"value":1302},"content/",{"type":27,"value":1304}," directory.",{"type":21,"tag":1162,"props":1306,"children":1308},{"id":1307},"deploy",[1309],{"type":27,"value":1310},"Deploy",{"type":21,"tag":108,"props":1312,"children":1314},{"id":1313},"static-hosting",[1315],{"type":27,"value":1316},"Static hosting",{"type":21,"tag":78,"props":1318,"children":1319},{},[1320],{"type":27,"value":1321},"You can deploy Alpine to any static hosting by running the following command:",{"type":21,"tag":1174,"props":1323,"children":1325},{"className":1176,"code":1324,"language":1178,"meta":8,"style":8},"npm run generate\n",[1326],{"type":21,"tag":1181,"props":1327,"children":1328},{"__ignoreMap":8},[1329],{"type":21,"tag":1185,"props":1330,"children":1331},{"class":1187,"line":1188},[1332,1336,1340],{"type":21,"tag":1185,"props":1333,"children":1334},{"style":1192},[1335],{"type":27,"value":1251},{"type":21,"tag":1185,"props":1337,"children":1338},{"style":1198},[1339],{"type":27,"value":1286},{"type":21,"tag":1185,"props":1341,"children":1342},{"style":1198},[1343],{"type":27,"value":1344}," generate\n",{"type":21,"tag":78,"props":1346,"children":1347},{},[1348,1350,1356],{"type":27,"value":1349},"This command will create a ",{"type":21,"tag":1181,"props":1351,"children":1353},{"className":1352},[],[1354],{"type":27,"value":1355},"dist/",{"type":27,"value":1357}," directory with the compiled files ready to be uploaded to any static hosting.",{"type":21,"tag":108,"props":1359,"children":1361},{"id":1360},"edge-platforms",[1362],{"type":27,"value":1363},"Edge platforms",{"type":21,"tag":78,"props":1365,"children":1366},{},[1367,1369,1374],{"type":27,"value":1368},"Alpine supports deploying to the following platforms with ",{"type":21,"tag":766,"props":1370,"children":1371},{},[1372],{"type":27,"value":1373},"zero configuration",{"type":27,"value":1375},":",{"type":21,"tag":1377,"props":1378,"children":1379},"ul",{},[1380,1392,1402],{"type":21,"tag":1381,"props":1382,"children":1383},"li",{},[1384],{"type":21,"tag":85,"props":1385,"children":1389},{"href":1386,"rel":1387},"https://vercel.com",[1388],"nofollow",[1390],{"type":27,"value":1391},"Vercel",{"type":21,"tag":1381,"props":1393,"children":1394},{},[1395],{"type":21,"tag":85,"props":1396,"children":1399},{"href":1397,"rel":1398},"https://netlify.com",[1388],[1400],{"type":27,"value":1401},"Netlify",{"type":21,"tag":1381,"props":1403,"children":1404},{},[1405],{"type":21,"tag":85,"props":1406,"children":1409},{"href":1407,"rel":1408},"https://v3.nuxtjs.org/guide/deploy/presets#supported-hosting-providers",[1388],[1410],{"type":27,"value":1411},"and more...",{"type":21,"tag":108,"props":1413,"children":1415},{"id":1414},"node-server",[1416],{"type":27,"value":1417},"Node server",{"type":21,"tag":78,"props":1419,"children":1420},{},[1421],{"type":27,"value":1422},"You can deploy Alpine to a Node server by running the following command:",{"type":21,"tag":1174,"props":1424,"children":1426},{"className":1176,"code":1425,"language":1178,"meta":8,"style":8},"npm run build\n",[1427],{"type":21,"tag":1181,"props":1428,"children":1429},{"__ignoreMap":8},[1430],{"type":21,"tag":1185,"props":1431,"children":1432},{"class":1187,"line":1188},[1433,1437,1441],{"type":21,"tag":1185,"props":1434,"children":1435},{"style":1192},[1436],{"type":27,"value":1251},{"type":21,"tag":1185,"props":1438,"children":1439},{"style":1198},[1440],{"type":27,"value":1286},{"type":21,"tag":1185,"props":1442,"children":1443},{"style":1198},[1444],{"type":27,"value":1445}," build\n",{"type":21,"tag":78,"props":1447,"children":1448},{},[1449,1450,1456],{"type":27,"value":1349},{"type":21,"tag":1181,"props":1451,"children":1453},{"className":1452},[],[1454],{"type":27,"value":1455},".output/",{"type":27,"value":1457}," directory with the compiled files ready to be uploaded to any Node server.",{"type":21,"tag":78,"props":1459,"children":1460},{},[1461],{"type":27,"value":1462},"To start the production server, run the following command:",{"type":21,"tag":1174,"props":1464,"children":1466},{"className":1176,"code":1465,"language":1178,"meta":8,"style":8},"node .output/server/index.mjs\n",[1467],{"type":21,"tag":1181,"props":1468,"children":1469},{"__ignoreMap":8},[1470],{"type":21,"tag":1185,"props":1471,"children":1472},{"class":1187,"line":1188},[1473,1478],{"type":21,"tag":1185,"props":1474,"children":1475},{"style":1192},[1476],{"type":27,"value":1477},"node",{"type":21,"tag":1185,"props":1479,"children":1480},{"style":1198},[1481],{"type":27,"value":1482}," .output/server/index.mjs\n",{"type":21,"tag":102,"props":1484,"children":1485},{},[1486],{"type":27,"value":1487},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":8,"searchDepth":1128,"depth":1128,"links":1489},[1490,1491,1492,1493],{"id":1164,"depth":1128,"text":1167},{"id":1220,"depth":1128,"text":1223},{"id":1259,"depth":1128,"text":1262},{"id":1307,"depth":1128,"text":1310,"children":1494},[1495,1496,1497],{"id":1313,"depth":1131,"text":1316},{"id":1360,"depth":1131,"text":1363},{"id":1414,"depth":1131,"text":1417},"content:articles:1.get-started.md","articles/1.get-started.md","articles/1.get-started",{"_path":1502,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":1503,"description":1504,"cover":1505,"author":1506,"date":1148,"layout":1149,"body":1510,"_type":1134,"_id":2424,"_source":1136,"_file":2425,"_stem":2426,"_extension":1139},"/articles/configure","Configure Alpine","Learn how to configure Alpine with the app.config.ts file.","/articles/configure-alpine.webp",{"name":1507,"avatarUrl":1508,"link":1509},"Clément Ollivier","https://pbs.twimg.com/profile_images/1370286658432724996/ZMSDzzIi_400x400.jpg","https://twitter.com/clemcodes",{"type":18,"children":1511,"toc":2419},[1512,1517,1538,1607,1621,1634,1640,1645,1841,1847,1860,2101,2107,2119,2415],{"type":21,"tag":22,"props":1513,"children":1515},{"id":1514},"configure-alpine",[1516],{"type":27,"value":1503},{"type":21,"tag":78,"props":1518,"children":1519},{},[1520,1522,1528,1530,1536],{"type":27,"value":1521},"To configure meta tags, social links or even the Alpine theme display, update the ",{"type":21,"tag":1181,"props":1523,"children":1525},{"className":1524},[],[1526],{"type":27,"value":1527},"alpine",{"type":27,"value":1529}," key in the ",{"type":21,"tag":1181,"props":1531,"children":1533},{"className":1532},[],[1534],{"type":27,"value":1535},"app.config.ts",{"type":27,"value":1537}," at the root of your project:",{"type":21,"tag":1174,"props":1539,"children":1543},{"className":1540,"code":1541,"filename":1535,"language":1542,"meta":8,"style":8},"language-ts shiki shiki-themes github-light github-dark","export default defineAppConfig({\n  alpine: {\n    /* Alpine configuration goes here */\n  }\n}\n","ts",[1544],{"type":21,"tag":1181,"props":1545,"children":1546},{"__ignoreMap":8},[1547,1572,1580,1589,1598],{"type":21,"tag":1185,"props":1548,"children":1549},{"class":1187,"line":1188},[1550,1556,1561,1566],{"type":21,"tag":1185,"props":1551,"children":1553},{"style":1552},"--shiki-default:#D73A49;--shiki-dark:#F97583",[1554],{"type":27,"value":1555},"export",{"type":21,"tag":1185,"props":1557,"children":1558},{"style":1552},[1559],{"type":27,"value":1560}," default",{"type":21,"tag":1185,"props":1562,"children":1563},{"style":1192},[1564],{"type":27,"value":1565}," defineAppConfig",{"type":21,"tag":1185,"props":1567,"children":1569},{"style":1568},"--shiki-default:#24292E;--shiki-dark:#E1E4E8",[1570],{"type":27,"value":1571},"({\n",{"type":21,"tag":1185,"props":1573,"children":1574},{"class":1187,"line":1128},[1575],{"type":21,"tag":1185,"props":1576,"children":1577},{"style":1568},[1578],{"type":27,"value":1579},"  alpine: {\n",{"type":21,"tag":1185,"props":1581,"children":1582},{"class":1187,"line":1131},[1583],{"type":21,"tag":1185,"props":1584,"children":1586},{"style":1585},"--shiki-default:#6A737D;--shiki-dark:#6A737D",[1587],{"type":27,"value":1588},"    /* Alpine configuration goes here */\n",{"type":21,"tag":1185,"props":1590,"children":1592},{"class":1187,"line":1591},4,[1593],{"type":21,"tag":1185,"props":1594,"children":1595},{"style":1568},[1596],{"type":27,"value":1597},"  }\n",{"type":21,"tag":1185,"props":1599,"children":1601},{"class":1187,"line":1600},5,[1602],{"type":21,"tag":1185,"props":1603,"children":1604},{"style":1568},[1605],{"type":27,"value":1606},"}\n",{"type":21,"tag":78,"props":1608,"children":1609},{},[1610,1612,1619],{"type":27,"value":1611},"You can look at the ",{"type":21,"tag":85,"props":1613,"children":1616},{"href":1614,"rel":1615},"https://github.com/nuxt-themes/alpine/tree/main/app.config.ts",[1388],[1617],{"type":27,"value":1618},"default config",{"type":27,"value":1620},".",{"type":21,"tag":78,"props":1622,"children":1623},{},[1624,1626,1632],{"type":27,"value":1625},"The ",{"type":21,"tag":85,"props":1627,"children":1629},{"href":1614,"rel":1628},[1388],[1630],{"type":27,"value":1631},"config schema",{"type":27,"value":1633}," also gives comments on all the configuration parameters.",{"type":21,"tag":1162,"props":1635,"children":1637},{"id":1636},"meta-tags",[1638],{"type":27,"value":1639},"Meta tags",{"type":21,"tag":78,"props":1641,"children":1642},{},[1643],{"type":27,"value":1644},"Configure the title, description and social image of your website:",{"type":21,"tag":1174,"props":1646,"children":1648},{"className":1540,"code":1647,"filename":1535,"language":1542,"meta":8,"style":8},"export default defineAppConfig({\n  alpine: {\n    title: 'Alpine',\n    description: 'The minimalist blog theme',\n    image: '/social-card-preview.png',\n    // image can also be an object:\n    image: {\n      src: '/social-card-preview.png',\n      alt: 'An image showcasing my project.',\n      width: 400,\n      height: 300\n    }\n  }\n})\n",[1649],{"type":21,"tag":1181,"props":1650,"children":1651},{"__ignoreMap":8},[1652,1671,1678,1696,1713,1730,1739,1748,1765,1783,1801,1815,1824,1832],{"type":21,"tag":1185,"props":1653,"children":1654},{"class":1187,"line":1188},[1655,1659,1663,1667],{"type":21,"tag":1185,"props":1656,"children":1657},{"style":1552},[1658],{"type":27,"value":1555},{"type":21,"tag":1185,"props":1660,"children":1661},{"style":1552},[1662],{"type":27,"value":1560},{"type":21,"tag":1185,"props":1664,"children":1665},{"style":1192},[1666],{"type":27,"value":1565},{"type":21,"tag":1185,"props":1668,"children":1669},{"style":1568},[1670],{"type":27,"value":1571},{"type":21,"tag":1185,"props":1672,"children":1673},{"class":1187,"line":1128},[1674],{"type":21,"tag":1185,"props":1675,"children":1676},{"style":1568},[1677],{"type":27,"value":1579},{"type":21,"tag":1185,"props":1679,"children":1680},{"class":1187,"line":1131},[1681,1686,1691],{"type":21,"tag":1185,"props":1682,"children":1683},{"style":1568},[1684],{"type":27,"value":1685},"    title: ",{"type":21,"tag":1185,"props":1687,"children":1688},{"style":1198},[1689],{"type":27,"value":1690},"'Alpine'",{"type":21,"tag":1185,"props":1692,"children":1693},{"style":1568},[1694],{"type":27,"value":1695},",\n",{"type":21,"tag":1185,"props":1697,"children":1698},{"class":1187,"line":1591},[1699,1704,1709],{"type":21,"tag":1185,"props":1700,"children":1701},{"style":1568},[1702],{"type":27,"value":1703},"    description: ",{"type":21,"tag":1185,"props":1705,"children":1706},{"style":1198},[1707],{"type":27,"value":1708},"'The minimalist blog theme'",{"type":21,"tag":1185,"props":1710,"children":1711},{"style":1568},[1712],{"type":27,"value":1695},{"type":21,"tag":1185,"props":1714,"children":1715},{"class":1187,"line":1600},[1716,1721,1726],{"type":21,"tag":1185,"props":1717,"children":1718},{"style":1568},[1719],{"type":27,"value":1720},"    image: ",{"type":21,"tag":1185,"props":1722,"children":1723},{"style":1198},[1724],{"type":27,"value":1725},"'/social-card-preview.png'",{"type":21,"tag":1185,"props":1727,"children":1728},{"style":1568},[1729],{"type":27,"value":1695},{"type":21,"tag":1185,"props":1731,"children":1733},{"class":1187,"line":1732},6,[1734],{"type":21,"tag":1185,"props":1735,"children":1736},{"style":1585},[1737],{"type":27,"value":1738},"    // image can also be an object:\n",{"type":21,"tag":1185,"props":1740,"children":1742},{"class":1187,"line":1741},7,[1743],{"type":21,"tag":1185,"props":1744,"children":1745},{"style":1568},[1746],{"type":27,"value":1747},"    image: {\n",{"type":21,"tag":1185,"props":1749,"children":1751},{"class":1187,"line":1750},8,[1752,1757,1761],{"type":21,"tag":1185,"props":1753,"children":1754},{"style":1568},[1755],{"type":27,"value":1756},"      src: ",{"type":21,"tag":1185,"props":1758,"children":1759},{"style":1198},[1760],{"type":27,"value":1725},{"type":21,"tag":1185,"props":1762,"children":1763},{"style":1568},[1764],{"type":27,"value":1695},{"type":21,"tag":1185,"props":1766,"children":1768},{"class":1187,"line":1767},9,[1769,1774,1779],{"type":21,"tag":1185,"props":1770,"children":1771},{"style":1568},[1772],{"type":27,"value":1773},"      alt: ",{"type":21,"tag":1185,"props":1775,"children":1776},{"style":1198},[1777],{"type":27,"value":1778},"'An image showcasing my project.'",{"type":21,"tag":1185,"props":1780,"children":1781},{"style":1568},[1782],{"type":27,"value":1695},{"type":21,"tag":1185,"props":1784,"children":1786},{"class":1187,"line":1785},10,[1787,1792,1797],{"type":21,"tag":1185,"props":1788,"children":1789},{"style":1568},[1790],{"type":27,"value":1791},"      width: ",{"type":21,"tag":1185,"props":1793,"children":1794},{"style":1209},[1795],{"type":27,"value":1796},"400",{"type":21,"tag":1185,"props":1798,"children":1799},{"style":1568},[1800],{"type":27,"value":1695},{"type":21,"tag":1185,"props":1802,"children":1804},{"class":1187,"line":1803},11,[1805,1810],{"type":21,"tag":1185,"props":1806,"children":1807},{"style":1568},[1808],{"type":27,"value":1809},"      height: ",{"type":21,"tag":1185,"props":1811,"children":1812},{"style":1209},[1813],{"type":27,"value":1814},"300\n",{"type":21,"tag":1185,"props":1816,"children":1818},{"class":1187,"line":1817},12,[1819],{"type":21,"tag":1185,"props":1820,"children":1821},{"style":1568},[1822],{"type":27,"value":1823},"    }\n",{"type":21,"tag":1185,"props":1825,"children":1827},{"class":1187,"line":1826},13,[1828],{"type":21,"tag":1185,"props":1829,"children":1830},{"style":1568},[1831],{"type":27,"value":1597},{"type":21,"tag":1185,"props":1833,"children":1835},{"class":1187,"line":1834},14,[1836],{"type":21,"tag":1185,"props":1837,"children":1838},{"style":1568},[1839],{"type":27,"value":1840},"})\n",{"type":21,"tag":1162,"props":1842,"children":1844},{"id":1843},"social-links",[1845],{"type":27,"value":1846},"Social links",{"type":21,"tag":78,"props":1848,"children":1849},{},[1850,1852,1858],{"type":27,"value":1851},"To configure the social links displayed in the footer, use the ",{"type":21,"tag":1181,"props":1853,"children":1855},{"className":1854},[],[1856],{"type":27,"value":1857},"socials",{"type":27,"value":1859}," property:",{"type":21,"tag":1174,"props":1861,"children":1863},{"className":1540,"code":1862,"filename":1535,"language":1542,"meta":8,"style":8},"export default defineAppConfig({\n  alpine: {\n    socials: {\n      twitter: 'nuxtlabs',\n      instagram: 'wearenuxt',\n      linkedin: {\n        icon: 'uil:linkedin',\n        label: 'LinkedIn',\n        href: 'https://www.linkedin.com/company/nuxtlabs'\n      },\n      mastodon: {\n        icon: 'simple-icons:mastodon',\n        label: 'Mastodon',\n        href: 'https://m.webtoo.ls/@nuxt',\n        rel: 'me'\n      }\n    }\n  }\n})\n",[1864],{"type":21,"tag":1181,"props":1865,"children":1866},{"__ignoreMap":8},[1867,1886,1893,1901,1918,1935,1943,1960,1977,1990,1998,2006,2022,2038,2054,2068,2077,2085,2093],{"type":21,"tag":1185,"props":1868,"children":1869},{"class":1187,"line":1188},[1870,1874,1878,1882],{"type":21,"tag":1185,"props":1871,"children":1872},{"style":1552},[1873],{"type":27,"value":1555},{"type":21,"tag":1185,"props":1875,"children":1876},{"style":1552},[1877],{"type":27,"value":1560},{"type":21,"tag":1185,"props":1879,"children":1880},{"style":1192},[1881],{"type":27,"value":1565},{"type":21,"tag":1185,"props":1883,"children":1884},{"style":1568},[1885],{"type":27,"value":1571},{"type":21,"tag":1185,"props":1887,"children":1888},{"class":1187,"line":1128},[1889],{"type":21,"tag":1185,"props":1890,"children":1891},{"style":1568},[1892],{"type":27,"value":1579},{"type":21,"tag":1185,"props":1894,"children":1895},{"class":1187,"line":1131},[1896],{"type":21,"tag":1185,"props":1897,"children":1898},{"style":1568},[1899],{"type":27,"value":1900},"    socials: {\n",{"type":21,"tag":1185,"props":1902,"children":1903},{"class":1187,"line":1591},[1904,1909,1914],{"type":21,"tag":1185,"props":1905,"children":1906},{"style":1568},[1907],{"type":27,"value":1908},"      twitter: ",{"type":21,"tag":1185,"props":1910,"children":1911},{"style":1198},[1912],{"type":27,"value":1913},"'nuxtlabs'",{"type":21,"tag":1185,"props":1915,"children":1916},{"style":1568},[1917],{"type":27,"value":1695},{"type":21,"tag":1185,"props":1919,"children":1920},{"class":1187,"line":1600},[1921,1926,1931],{"type":21,"tag":1185,"props":1922,"children":1923},{"style":1568},[1924],{"type":27,"value":1925},"      instagram: ",{"type":21,"tag":1185,"props":1927,"children":1928},{"style":1198},[1929],{"type":27,"value":1930},"'wearenuxt'",{"type":21,"tag":1185,"props":1932,"children":1933},{"style":1568},[1934],{"type":27,"value":1695},{"type":21,"tag":1185,"props":1936,"children":1937},{"class":1187,"line":1732},[1938],{"type":21,"tag":1185,"props":1939,"children":1940},{"style":1568},[1941],{"type":27,"value":1942},"      linkedin: {\n",{"type":21,"tag":1185,"props":1944,"children":1945},{"class":1187,"line":1741},[1946,1951,1956],{"type":21,"tag":1185,"props":1947,"children":1948},{"style":1568},[1949],{"type":27,"value":1950},"        icon: ",{"type":21,"tag":1185,"props":1952,"children":1953},{"style":1198},[1954],{"type":27,"value":1955},"'uil:linkedin'",{"type":21,"tag":1185,"props":1957,"children":1958},{"style":1568},[1959],{"type":27,"value":1695},{"type":21,"tag":1185,"props":1961,"children":1962},{"class":1187,"line":1750},[1963,1968,1973],{"type":21,"tag":1185,"props":1964,"children":1965},{"style":1568},[1966],{"type":27,"value":1967},"        label: ",{"type":21,"tag":1185,"props":1969,"children":1970},{"style":1198},[1971],{"type":27,"value":1972},"'LinkedIn'",{"type":21,"tag":1185,"props":1974,"children":1975},{"style":1568},[1976],{"type":27,"value":1695},{"type":21,"tag":1185,"props":1978,"children":1979},{"class":1187,"line":1767},[1980,1985],{"type":21,"tag":1185,"props":1981,"children":1982},{"style":1568},[1983],{"type":27,"value":1984},"        href: ",{"type":21,"tag":1185,"props":1986,"children":1987},{"style":1198},[1988],{"type":27,"value":1989},"'https://www.linkedin.com/company/nuxtlabs'\n",{"type":21,"tag":1185,"props":1991,"children":1992},{"class":1187,"line":1785},[1993],{"type":21,"tag":1185,"props":1994,"children":1995},{"style":1568},[1996],{"type":27,"value":1997},"      },\n",{"type":21,"tag":1185,"props":1999,"children":2000},{"class":1187,"line":1803},[2001],{"type":21,"tag":1185,"props":2002,"children":2003},{"style":1568},[2004],{"type":27,"value":2005},"      mastodon: {\n",{"type":21,"tag":1185,"props":2007,"children":2008},{"class":1187,"line":1817},[2009,2013,2018],{"type":21,"tag":1185,"props":2010,"children":2011},{"style":1568},[2012],{"type":27,"value":1950},{"type":21,"tag":1185,"props":2014,"children":2015},{"style":1198},[2016],{"type":27,"value":2017},"'simple-icons:mastodon'",{"type":21,"tag":1185,"props":2019,"children":2020},{"style":1568},[2021],{"type":27,"value":1695},{"type":21,"tag":1185,"props":2023,"children":2024},{"class":1187,"line":1826},[2025,2029,2034],{"type":21,"tag":1185,"props":2026,"children":2027},{"style":1568},[2028],{"type":27,"value":1967},{"type":21,"tag":1185,"props":2030,"children":2031},{"style":1198},[2032],{"type":27,"value":2033},"'Mastodon'",{"type":21,"tag":1185,"props":2035,"children":2036},{"style":1568},[2037],{"type":27,"value":1695},{"type":21,"tag":1185,"props":2039,"children":2040},{"class":1187,"line":1834},[2041,2045,2050],{"type":21,"tag":1185,"props":2042,"children":2043},{"style":1568},[2044],{"type":27,"value":1984},{"type":21,"tag":1185,"props":2046,"children":2047},{"style":1198},[2048],{"type":27,"value":2049},"'https://m.webtoo.ls/@nuxt'",{"type":21,"tag":1185,"props":2051,"children":2052},{"style":1568},[2053],{"type":27,"value":1695},{"type":21,"tag":1185,"props":2055,"children":2057},{"class":1187,"line":2056},15,[2058,2063],{"type":21,"tag":1185,"props":2059,"children":2060},{"style":1568},[2061],{"type":27,"value":2062},"        rel: ",{"type":21,"tag":1185,"props":2064,"children":2065},{"style":1198},[2066],{"type":27,"value":2067},"'me'\n",{"type":21,"tag":1185,"props":2069,"children":2071},{"class":1187,"line":2070},16,[2072],{"type":21,"tag":1185,"props":2073,"children":2074},{"style":1568},[2075],{"type":27,"value":2076},"      }\n",{"type":21,"tag":1185,"props":2078,"children":2080},{"class":1187,"line":2079},17,[2081],{"type":21,"tag":1185,"props":2082,"children":2083},{"style":1568},[2084],{"type":27,"value":1823},{"type":21,"tag":1185,"props":2086,"children":2088},{"class":1187,"line":2087},18,[2089],{"type":21,"tag":1185,"props":2090,"children":2091},{"style":1568},[2092],{"type":27,"value":1597},{"type":21,"tag":1185,"props":2094,"children":2096},{"class":1187,"line":2095},19,[2097],{"type":21,"tag":1185,"props":2098,"children":2099},{"style":1568},[2100],{"type":27,"value":1840},{"type":21,"tag":1162,"props":2102,"children":2104},{"id":2103},"theme-display",[2105],{"type":27,"value":2106},"Theme display",{"type":21,"tag":78,"props":2108,"children":2109},{},[2110,2112,2117],{"type":27,"value":2111},"Alpine Header and Footer can also be customized via the ",{"type":21,"tag":1181,"props":2113,"children":2115},{"className":2114},[],[2116],{"type":27,"value":1535},{"type":27,"value":2118}," file:",{"type":21,"tag":1174,"props":2120,"children":2122},{"className":1540,"code":2121,"filename":1535,"language":1542,"meta":8,"style":8},"defineAppConfig({\n  alpine: {\n    // Remove header with header: false\n    header: {\n      position: 'inline', // possible value are : 'none' | 'left' | 'center' | 'right' | 'inline'\n      logo: false\n    },\n    // Remove header with footer: false\n    footer: {\n      credits: {\n        enabled: true, // possible value are : true | false\n        repository: 'https://www.github.com/nuxt-themes/alpine' // our github repository\n      },\n      navigation: false, // possible value are : true | false\n      position: 'center', // possible value are : 'none' | 'left' | 'center' | 'right'\n      message: 'Follow me on' // string that will be displayed on the footer (leave empty or delete to disable)\n    }\n    // Disable back to top button: false\n    backToTop: {\n      text: 'Back to top',\n      icon: 'material-symbols:arrow-upward'\n    }\n  }\n})\n",[2123],{"type":21,"tag":1181,"props":2124,"children":2125},{"__ignoreMap":8},[2126,2138,2145,2153,2161,2184,2197,2205,2213,2221,2229,2251,2269,2276,2297,2318,2336,2343,2351,2359,2377,2391,2399,2407],{"type":21,"tag":1185,"props":2127,"children":2128},{"class":1187,"line":1188},[2129,2134],{"type":21,"tag":1185,"props":2130,"children":2131},{"style":1192},[2132],{"type":27,"value":2133},"defineAppConfig",{"type":21,"tag":1185,"props":2135,"children":2136},{"style":1568},[2137],{"type":27,"value":1571},{"type":21,"tag":1185,"props":2139,"children":2140},{"class":1187,"line":1128},[2141],{"type":21,"tag":1185,"props":2142,"children":2143},{"style":1568},[2144],{"type":27,"value":1579},{"type":21,"tag":1185,"props":2146,"children":2147},{"class":1187,"line":1131},[2148],{"type":21,"tag":1185,"props":2149,"children":2150},{"style":1585},[2151],{"type":27,"value":2152},"    // Remove header with header: false\n",{"type":21,"tag":1185,"props":2154,"children":2155},{"class":1187,"line":1591},[2156],{"type":21,"tag":1185,"props":2157,"children":2158},{"style":1568},[2159],{"type":27,"value":2160},"    header: {\n",{"type":21,"tag":1185,"props":2162,"children":2163},{"class":1187,"line":1600},[2164,2169,2174,2179],{"type":21,"tag":1185,"props":2165,"children":2166},{"style":1568},[2167],{"type":27,"value":2168},"      position: ",{"type":21,"tag":1185,"props":2170,"children":2171},{"style":1198},[2172],{"type":27,"value":2173},"'inline'",{"type":21,"tag":1185,"props":2175,"children":2176},{"style":1568},[2177],{"type":27,"value":2178},", ",{"type":21,"tag":1185,"props":2180,"children":2181},{"style":1585},[2182],{"type":27,"value":2183},"// possible value are : 'none' | 'left' | 'center' | 'right' | 'inline'\n",{"type":21,"tag":1185,"props":2185,"children":2186},{"class":1187,"line":1732},[2187,2192],{"type":21,"tag":1185,"props":2188,"children":2189},{"style":1568},[2190],{"type":27,"value":2191},"      logo: ",{"type":21,"tag":1185,"props":2193,"children":2194},{"style":1209},[2195],{"type":27,"value":2196},"false\n",{"type":21,"tag":1185,"props":2198,"children":2199},{"class":1187,"line":1741},[2200],{"type":21,"tag":1185,"props":2201,"children":2202},{"style":1568},[2203],{"type":27,"value":2204},"    },\n",{"type":21,"tag":1185,"props":2206,"children":2207},{"class":1187,"line":1750},[2208],{"type":21,"tag":1185,"props":2209,"children":2210},{"style":1585},[2211],{"type":27,"value":2212},"    // Remove header with footer: false\n",{"type":21,"tag":1185,"props":2214,"children":2215},{"class":1187,"line":1767},[2216],{"type":21,"tag":1185,"props":2217,"children":2218},{"style":1568},[2219],{"type":27,"value":2220},"    footer: {\n",{"type":21,"tag":1185,"props":2222,"children":2223},{"class":1187,"line":1785},[2224],{"type":21,"tag":1185,"props":2225,"children":2226},{"style":1568},[2227],{"type":27,"value":2228},"      credits: {\n",{"type":21,"tag":1185,"props":2230,"children":2231},{"class":1187,"line":1803},[2232,2237,2242,2246],{"type":21,"tag":1185,"props":2233,"children":2234},{"style":1568},[2235],{"type":27,"value":2236},"        enabled: ",{"type":21,"tag":1185,"props":2238,"children":2239},{"style":1209},[2240],{"type":27,"value":2241},"true",{"type":21,"tag":1185,"props":2243,"children":2244},{"style":1568},[2245],{"type":27,"value":2178},{"type":21,"tag":1185,"props":2247,"children":2248},{"style":1585},[2249],{"type":27,"value":2250},"// possible value are : true | false\n",{"type":21,"tag":1185,"props":2252,"children":2253},{"class":1187,"line":1817},[2254,2259,2264],{"type":21,"tag":1185,"props":2255,"children":2256},{"style":1568},[2257],{"type":27,"value":2258},"        repository: ",{"type":21,"tag":1185,"props":2260,"children":2261},{"style":1198},[2262],{"type":27,"value":2263},"'https://www.github.com/nuxt-themes/alpine'",{"type":21,"tag":1185,"props":2265,"children":2266},{"style":1585},[2267],{"type":27,"value":2268}," // our github repository\n",{"type":21,"tag":1185,"props":2270,"children":2271},{"class":1187,"line":1826},[2272],{"type":21,"tag":1185,"props":2273,"children":2274},{"style":1568},[2275],{"type":27,"value":1997},{"type":21,"tag":1185,"props":2277,"children":2278},{"class":1187,"line":1834},[2279,2284,2289,2293],{"type":21,"tag":1185,"props":2280,"children":2281},{"style":1568},[2282],{"type":27,"value":2283},"      navigation: ",{"type":21,"tag":1185,"props":2285,"children":2286},{"style":1209},[2287],{"type":27,"value":2288},"false",{"type":21,"tag":1185,"props":2290,"children":2291},{"style":1568},[2292],{"type":27,"value":2178},{"type":21,"tag":1185,"props":2294,"children":2295},{"style":1585},[2296],{"type":27,"value":2250},{"type":21,"tag":1185,"props":2298,"children":2299},{"class":1187,"line":2056},[2300,2304,2309,2313],{"type":21,"tag":1185,"props":2301,"children":2302},{"style":1568},[2303],{"type":27,"value":2168},{"type":21,"tag":1185,"props":2305,"children":2306},{"style":1198},[2307],{"type":27,"value":2308},"'center'",{"type":21,"tag":1185,"props":2310,"children":2311},{"style":1568},[2312],{"type":27,"value":2178},{"type":21,"tag":1185,"props":2314,"children":2315},{"style":1585},[2316],{"type":27,"value":2317},"// possible value are : 'none' | 'left' | 'center' | 'right'\n",{"type":21,"tag":1185,"props":2319,"children":2320},{"class":1187,"line":2070},[2321,2326,2331],{"type":21,"tag":1185,"props":2322,"children":2323},{"style":1568},[2324],{"type":27,"value":2325},"      message: ",{"type":21,"tag":1185,"props":2327,"children":2328},{"style":1198},[2329],{"type":27,"value":2330},"'Follow me on'",{"type":21,"tag":1185,"props":2332,"children":2333},{"style":1585},[2334],{"type":27,"value":2335}," // string that will be displayed on the footer (leave empty or delete to disable)\n",{"type":21,"tag":1185,"props":2337,"children":2338},{"class":1187,"line":2079},[2339],{"type":21,"tag":1185,"props":2340,"children":2341},{"style":1568},[2342],{"type":27,"value":1823},{"type":21,"tag":1185,"props":2344,"children":2345},{"class":1187,"line":2087},[2346],{"type":21,"tag":1185,"props":2347,"children":2348},{"style":1585},[2349],{"type":27,"value":2350},"    // Disable back to top button: false\n",{"type":21,"tag":1185,"props":2352,"children":2353},{"class":1187,"line":2095},[2354],{"type":21,"tag":1185,"props":2355,"children":2356},{"style":1568},[2357],{"type":27,"value":2358},"    backToTop: {\n",{"type":21,"tag":1185,"props":2360,"children":2362},{"class":1187,"line":2361},20,[2363,2368,2373],{"type":21,"tag":1185,"props":2364,"children":2365},{"style":1568},[2366],{"type":27,"value":2367},"      text: ",{"type":21,"tag":1185,"props":2369,"children":2370},{"style":1198},[2371],{"type":27,"value":2372},"'Back to top'",{"type":21,"tag":1185,"props":2374,"children":2375},{"style":1568},[2376],{"type":27,"value":1695},{"type":21,"tag":1185,"props":2378,"children":2380},{"class":1187,"line":2379},21,[2381,2386],{"type":21,"tag":1185,"props":2382,"children":2383},{"style":1568},[2384],{"type":27,"value":2385},"      icon: ",{"type":21,"tag":1185,"props":2387,"children":2388},{"style":1198},[2389],{"type":27,"value":2390},"'material-symbols:arrow-upward'\n",{"type":21,"tag":1185,"props":2392,"children":2394},{"class":1187,"line":2393},22,[2395],{"type":21,"tag":1185,"props":2396,"children":2397},{"style":1568},[2398],{"type":27,"value":1823},{"type":21,"tag":1185,"props":2400,"children":2402},{"class":1187,"line":2401},23,[2403],{"type":21,"tag":1185,"props":2404,"children":2405},{"style":1568},[2406],{"type":27,"value":1597},{"type":21,"tag":1185,"props":2408,"children":2410},{"class":1187,"line":2409},24,[2411],{"type":21,"tag":1185,"props":2412,"children":2413},{"style":1568},[2414],{"type":27,"value":1840},{"type":21,"tag":102,"props":2416,"children":2417},{},[2418],{"type":27,"value":1487},{"title":8,"searchDepth":1128,"depth":1128,"links":2420},[2421,2422,2423],{"id":1636,"depth":1128,"text":1639},{"id":1843,"depth":1128,"text":1846},{"id":2103,"depth":1128,"text":2106},"content:articles:2.configure.md","articles/2.configure.md","articles/2.configure",{"_path":2428,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":2429,"description":2430,"cover":2431,"date":1148,"layout":1149,"body":2432,"_type":1134,"_id":3157,"_source":1136,"_file":3158,"_stem":3159,"_extension":1139},"/articles/write-articles","Write Articles","Writing Markdown articles in Alpine is straightforward.","/articles/write-articles.webp",{"type":18,"children":2433,"toc":3149},[2434,2439,2444,2450,2462,2482,2487,2500,2598,2610,2616,2627,2659,2688,2744,2763,2768,2774,2786,2853,2858,2864,2883,2966,2971,2977,2982,3113,3119,3132,3145],{"type":21,"tag":22,"props":2435,"children":2437},{"id":2436},"write-articles",[2438],{"type":27,"value":2429},{"type":21,"tag":78,"props":2440,"children":2441},{},[2442],{"type":27,"value":2443},"Write Markdown articles in Alpine is straightforward.",{"type":21,"tag":1162,"props":2445,"children":2447},{"id":2446},"create-an-articles-list",[2448],{"type":27,"value":2449},"Create an articles list",{"type":21,"tag":78,"props":2451,"children":2452},{},[2453,2455,2460],{"type":27,"value":2454},"Create a new file in the ",{"type":21,"tag":1181,"props":2456,"children":2458},{"className":2457},[],[2459],{"type":27,"value":1302},{"type":27,"value":2461}," directory:",{"type":21,"tag":1174,"props":2463,"children":2465},{"className":1176,"code":2464,"language":1178,"meta":8,"style":8},"touch content/2.articles.md\n",[2466],{"type":21,"tag":1181,"props":2467,"children":2468},{"__ignoreMap":8},[2469],{"type":21,"tag":1185,"props":2470,"children":2471},{"class":1187,"line":1188},[2472,2477],{"type":21,"tag":1185,"props":2473,"children":2474},{"style":1192},[2475],{"type":27,"value":2476},"touch",{"type":21,"tag":1185,"props":2478,"children":2479},{"style":1198},[2480],{"type":27,"value":2481}," content/2.articles.md\n",{"type":21,"tag":78,"props":2483,"children":2484},{},[2485],{"type":27,"value":2486},"The numbered prefix determines the order of the menu items.",{"type":21,"tag":78,"props":2488,"children":2489},{},[2490,2492,2498],{"type":27,"value":2491},"In this file, use the ",{"type":21,"tag":1181,"props":2493,"children":2495},{"className":2494},[],[2496],{"type":27,"value":2497},"articles-list",{"type":27,"value":2499}," component to display the list of articles:",{"type":21,"tag":1174,"props":2501,"children":2505},{"className":2502,"code":2503,"filename":2504,"language":1139,"meta":8,"style":8},"language-md shiki shiki-themes github-light github-dark","---\ntitle: 'Articles'\nlayout: 'page'\n---\n::articles-list\n---\npath: articles\n---\n::\n","2.articles.md",[2506],{"type":21,"tag":1181,"props":2507,"children":2508},{"__ignoreMap":8},[2509,2517,2535,2552,2559,2567,2575,2583,2590],{"type":21,"tag":1185,"props":2510,"children":2511},{"class":1187,"line":1188},[2512],{"type":21,"tag":1185,"props":2513,"children":2514},{"style":1568},[2515],{"type":27,"value":2516},"---\n",{"type":21,"tag":1185,"props":2518,"children":2519},{"class":1187,"line":1128},[2520,2525,2530],{"type":21,"tag":1185,"props":2521,"children":2523},{"style":2522},"--shiki-default:#22863A;--shiki-dark:#85E89D",[2524],{"type":27,"value":96},{"type":21,"tag":1185,"props":2526,"children":2527},{"style":1568},[2528],{"type":27,"value":2529},": ",{"type":21,"tag":1185,"props":2531,"children":2532},{"style":1198},[2533],{"type":27,"value":2534},"'Articles'\n",{"type":21,"tag":1185,"props":2536,"children":2537},{"class":1187,"line":1131},[2538,2543,2547],{"type":21,"tag":1185,"props":2539,"children":2540},{"style":2522},[2541],{"type":27,"value":2542},"layout",{"type":21,"tag":1185,"props":2544,"children":2545},{"style":1568},[2546],{"type":27,"value":2529},{"type":21,"tag":1185,"props":2548,"children":2549},{"style":1198},[2550],{"type":27,"value":2551},"'page'\n",{"type":21,"tag":1185,"props":2553,"children":2554},{"class":1187,"line":1591},[2555],{"type":21,"tag":1185,"props":2556,"children":2557},{"style":1568},[2558],{"type":27,"value":2516},{"type":21,"tag":1185,"props":2560,"children":2561},{"class":1187,"line":1600},[2562],{"type":21,"tag":1185,"props":2563,"children":2564},{"style":1568},[2565],{"type":27,"value":2566},"::articles-list\n",{"type":21,"tag":1185,"props":2568,"children":2569},{"class":1187,"line":1732},[2570],{"type":21,"tag":1185,"props":2571,"children":2573},{"style":2572},"--shiki-default:#005CC5;--shiki-default-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold",[2574],{"type":27,"value":2516},{"type":21,"tag":1185,"props":2576,"children":2577},{"class":1187,"line":1741},[2578],{"type":21,"tag":1185,"props":2579,"children":2580},{"style":1568},[2581],{"type":27,"value":2582},"path: articles\n",{"type":21,"tag":1185,"props":2584,"children":2585},{"class":1187,"line":1750},[2586],{"type":21,"tag":1185,"props":2587,"children":2588},{"style":2572},[2589],{"type":27,"value":2516},{"type":21,"tag":1185,"props":2591,"children":2592},{"class":1187,"line":1767},[2593],{"type":21,"tag":1185,"props":2594,"children":2595},{"style":1568},[2596],{"type":27,"value":2597},"::\n",{"type":21,"tag":78,"props":2599,"children":2600},{},[2601,2602,2608],{"type":27,"value":1625},{"type":21,"tag":1181,"props":2603,"children":2605},{"className":2604},[],[2606],{"type":27,"value":2607},"path",{"type":27,"value":2609}," prop corresponds to the directory where the articles are stored.",{"type":21,"tag":1162,"props":2611,"children":2613},{"id":2612},"display-an-article-in-the-list",[2614],{"type":27,"value":2615},"Display an article in the list",{"type":21,"tag":78,"props":2617,"children":2618},{},[2619,2620,2626],{"type":27,"value":2454},{"type":21,"tag":1181,"props":2621,"children":2623},{"className":2622},[],[2624],{"type":27,"value":2625},"/content/articles",{"type":27,"value":2461},{"type":21,"tag":1174,"props":2628,"children":2630},{"className":1176,"code":2629,"language":1178,"meta":8,"style":8},"mkdir content/articles\ntouch content/articles/1.my-new-article.md\n",[2631],{"type":21,"tag":1181,"props":2632,"children":2633},{"__ignoreMap":8},[2634,2647],{"type":21,"tag":1185,"props":2635,"children":2636},{"class":1187,"line":1188},[2637,2642],{"type":21,"tag":1185,"props":2638,"children":2639},{"style":1192},[2640],{"type":27,"value":2641},"mkdir",{"type":21,"tag":1185,"props":2643,"children":2644},{"style":1198},[2645],{"type":27,"value":2646}," content/articles\n",{"type":21,"tag":1185,"props":2648,"children":2649},{"class":1187,"line":1128},[2650,2654],{"type":21,"tag":1185,"props":2651,"children":2652},{"style":1192},[2653],{"type":27,"value":2476},{"type":21,"tag":1185,"props":2655,"children":2656},{"style":1198},[2657],{"type":27,"value":2658}," content/articles/1.my-new-article.md\n",{"type":21,"tag":78,"props":2660,"children":2661},{},[2662,2664,2670,2672,2678,2680,2686],{"type":27,"value":2663},"For your article to be correctly displayed in the ",{"type":21,"tag":85,"props":2665,"children":2667},{"href":2666},"/articles",[2668],{"type":27,"value":2669},"articles list",{"type":27,"value":2671},", define a ",{"type":21,"tag":1181,"props":2673,"children":2675},{"className":2674},[],[2676],{"type":27,"value":2677},"cover",{"type":27,"value":2679}," and ",{"type":21,"tag":1181,"props":2681,"children":2683},{"className":2682},[],[2684],{"type":27,"value":2685},"date",{"type":27,"value":2687}," property in the frontmatter:",{"type":21,"tag":1174,"props":2689,"children":2694},{"className":2690,"code":2691,"filename":2692,"language":2693,"meta":8,"style":8},"language-yaml shiki shiki-themes github-light github-dark","---\ncover: path/to/cover\ndate: 2022-08-23\n---\n","content/articles/1.my-new-article.md","yaml",[2695],{"type":21,"tag":1181,"props":2696,"children":2697},{"__ignoreMap":8},[2698,2705,2721,2737],{"type":21,"tag":1185,"props":2699,"children":2700},{"class":1187,"line":1188},[2701],{"type":21,"tag":1185,"props":2702,"children":2703},{"style":1192},[2704],{"type":27,"value":2516},{"type":21,"tag":1185,"props":2706,"children":2707},{"class":1187,"line":1128},[2708,2712,2716],{"type":21,"tag":1185,"props":2709,"children":2710},{"style":2522},[2711],{"type":27,"value":2677},{"type":21,"tag":1185,"props":2713,"children":2714},{"style":1568},[2715],{"type":27,"value":2529},{"type":21,"tag":1185,"props":2717,"children":2718},{"style":1198},[2719],{"type":27,"value":2720},"path/to/cover\n",{"type":21,"tag":1185,"props":2722,"children":2723},{"class":1187,"line":1131},[2724,2728,2732],{"type":21,"tag":1185,"props":2725,"children":2726},{"style":2522},[2727],{"type":27,"value":2685},{"type":21,"tag":1185,"props":2729,"children":2730},{"style":1568},[2731],{"type":27,"value":2529},{"type":21,"tag":1185,"props":2733,"children":2734},{"style":1209},[2735],{"type":27,"value":2736},"2022-08-23\n",{"type":21,"tag":1185,"props":2738,"children":2739},{"class":1187,"line":1591},[2740],{"type":21,"tag":1185,"props":2741,"children":2742},{"style":1192},[2743],{"type":27,"value":2516},{"type":21,"tag":78,"props":2745,"children":2746},{},[2747,2748,2753,2755,2761],{"type":27,"value":1625},{"type":21,"tag":1181,"props":2749,"children":2751},{"className":2750},[],[2752],{"type":27,"value":2677},{"type":27,"value":2754}," property can be a local path relative to the ",{"type":21,"tag":1181,"props":2756,"children":2758},{"className":2757},[],[2759],{"type":27,"value":2760},"/public",{"type":27,"value":2762}," directory or an external URL.",{"type":21,"tag":78,"props":2764,"children":2765},{},[2766],{"type":27,"value":2767},"Your article will now be displayed in the list with its filename as a default title.",{"type":21,"tag":1162,"props":2769,"children":2771},{"id":2770},"edit-your-article",[2772],{"type":27,"value":2773},"Edit your article",{"type":21,"tag":78,"props":2775,"children":2776},{},[2777,2779,2784],{"type":27,"value":2778},"Under the frontmatter block, enter a Markdown ",{"type":21,"tag":1181,"props":2780,"children":2782},{"className":2781},[],[2783],{"type":27,"value":22},{"type":27,"value":2785}," tag and a line of text:",{"type":21,"tag":1174,"props":2787,"children":2789},{"className":2502,"code":2788,"filename":2692,"language":1139,"meta":8,"style":8},"---\ncover: path/to/cover\ndate: 2022-08-23\n---\n# An awesome article\nThis article is little by size but big by heart.\n",[2790],{"type":21,"tag":1181,"props":2791,"children":2792},{"__ignoreMap":8},[2793,2800,2815,2830,2837,2845],{"type":21,"tag":1185,"props":2794,"children":2795},{"class":1187,"line":1188},[2796],{"type":21,"tag":1185,"props":2797,"children":2798},{"style":1568},[2799],{"type":27,"value":2516},{"type":21,"tag":1185,"props":2801,"children":2802},{"class":1187,"line":1128},[2803,2807,2811],{"type":21,"tag":1185,"props":2804,"children":2805},{"style":2522},[2806],{"type":27,"value":2677},{"type":21,"tag":1185,"props":2808,"children":2809},{"style":1568},[2810],{"type":27,"value":2529},{"type":21,"tag":1185,"props":2812,"children":2813},{"style":1198},[2814],{"type":27,"value":2720},{"type":21,"tag":1185,"props":2816,"children":2817},{"class":1187,"line":1131},[2818,2822,2826],{"type":21,"tag":1185,"props":2819,"children":2820},{"style":2522},[2821],{"type":27,"value":2685},{"type":21,"tag":1185,"props":2823,"children":2824},{"style":1568},[2825],{"type":27,"value":2529},{"type":21,"tag":1185,"props":2827,"children":2828},{"style":1209},[2829],{"type":27,"value":2736},{"type":21,"tag":1185,"props":2831,"children":2832},{"class":1187,"line":1591},[2833],{"type":21,"tag":1185,"props":2834,"children":2835},{"style":1568},[2836],{"type":27,"value":2516},{"type":21,"tag":1185,"props":2838,"children":2839},{"class":1187,"line":1600},[2840],{"type":21,"tag":1185,"props":2841,"children":2842},{"style":2572},[2843],{"type":27,"value":2844},"# An awesome article\n",{"type":21,"tag":1185,"props":2846,"children":2847},{"class":1187,"line":1732},[2848],{"type":21,"tag":1185,"props":2849,"children":2850},{"style":1568},[2851],{"type":27,"value":2852},"This article is little by size but big by heart.\n",{"type":21,"tag":78,"props":2854,"children":2855},{},[2856],{"type":27,"value":2857},"Your article will now be displayed in the list with the title and description you wrote in Markdown.",{"type":21,"tag":1162,"props":2859,"children":2861},{"id":2860},"override-title-and-description",[2862],{"type":27,"value":2863},"Override title and description",{"type":21,"tag":78,"props":2865,"children":2866},{},[2867,2869,2874,2875,2881],{"type":27,"value":2868},"If you want to change the title and description displayed on the list and in the meta tags of the article, add the ",{"type":21,"tag":1181,"props":2870,"children":2872},{"className":2871},[],[2873],{"type":27,"value":96},{"type":27,"value":2679},{"type":21,"tag":1181,"props":2876,"children":2878},{"className":2877},[],[2879],{"type":27,"value":2880},"description",{"type":27,"value":2882}," property to your frontmatter:",{"type":21,"tag":1174,"props":2884,"children":2886},{"className":2502,"code":2885,"filename":2692,"language":1139,"meta":8,"style":8},"---\ncover: path/to/cover\ndate: 2022-08-23\ntitle: Another title\ndescription: Another description\n---\n",[2887],{"type":21,"tag":1181,"props":2888,"children":2889},{"__ignoreMap":8},[2890,2897,2912,2927,2943,2959],{"type":21,"tag":1185,"props":2891,"children":2892},{"class":1187,"line":1188},[2893],{"type":21,"tag":1185,"props":2894,"children":2895},{"style":1568},[2896],{"type":27,"value":2516},{"type":21,"tag":1185,"props":2898,"children":2899},{"class":1187,"line":1128},[2900,2904,2908],{"type":21,"tag":1185,"props":2901,"children":2902},{"style":2522},[2903],{"type":27,"value":2677},{"type":21,"tag":1185,"props":2905,"children":2906},{"style":1568},[2907],{"type":27,"value":2529},{"type":21,"tag":1185,"props":2909,"children":2910},{"style":1198},[2911],{"type":27,"value":2720},{"type":21,"tag":1185,"props":2913,"children":2914},{"class":1187,"line":1131},[2915,2919,2923],{"type":21,"tag":1185,"props":2916,"children":2917},{"style":2522},[2918],{"type":27,"value":2685},{"type":21,"tag":1185,"props":2920,"children":2921},{"style":1568},[2922],{"type":27,"value":2529},{"type":21,"tag":1185,"props":2924,"children":2925},{"style":1209},[2926],{"type":27,"value":2736},{"type":21,"tag":1185,"props":2928,"children":2929},{"class":1187,"line":1591},[2930,2934,2938],{"type":21,"tag":1185,"props":2931,"children":2932},{"style":2522},[2933],{"type":27,"value":96},{"type":21,"tag":1185,"props":2935,"children":2936},{"style":1568},[2937],{"type":27,"value":2529},{"type":21,"tag":1185,"props":2939,"children":2940},{"style":1198},[2941],{"type":27,"value":2942},"Another title\n",{"type":21,"tag":1185,"props":2944,"children":2945},{"class":1187,"line":1600},[2946,2950,2954],{"type":21,"tag":1185,"props":2947,"children":2948},{"style":2522},[2949],{"type":27,"value":2880},{"type":21,"tag":1185,"props":2951,"children":2952},{"style":1568},[2953],{"type":27,"value":2529},{"type":21,"tag":1185,"props":2955,"children":2956},{"style":1198},[2957],{"type":27,"value":2958},"Another description\n",{"type":21,"tag":1185,"props":2960,"children":2961},{"class":1187,"line":1732},[2962],{"type":21,"tag":1185,"props":2963,"children":2964},{"style":1568},[2965],{"type":27,"value":2516},{"type":21,"tag":78,"props":2967,"children":2968},{},[2969],{"type":27,"value":2970},"You are now ready to edit your article and create new ones!",{"type":21,"tag":1162,"props":2972,"children":2974},{"id":2973},"optional-arguments",[2975],{"type":27,"value":2976},"Optional Arguments",{"type":21,"tag":78,"props":2978,"children":2979},{},[2980],{"type":27,"value":2981},"In the frontmatter block, you can pass additional options for displaying your article, such as displaying badges on the image:",{"type":21,"tag":1174,"props":2983,"children":2985},{"className":2502,"code":2984,"language":1139,"meta":8,"style":8},"---\ncover: path/to/cover\ndate: 2022-08-23\nbadges: [{\n  color: 'white',\n  bg: 'rgba(0, 0, 0, 0.3)',\n  content: 'Technology'\n}]\n---\n",[2986],{"type":21,"tag":1181,"props":2987,"children":2988},{"__ignoreMap":8},[2989,2996,3011,3026,3039,3060,3081,3098,3106],{"type":21,"tag":1185,"props":2990,"children":2991},{"class":1187,"line":1188},[2992],{"type":21,"tag":1185,"props":2993,"children":2994},{"style":1568},[2995],{"type":27,"value":2516},{"type":21,"tag":1185,"props":2997,"children":2998},{"class":1187,"line":1128},[2999,3003,3007],{"type":21,"tag":1185,"props":3000,"children":3001},{"style":2522},[3002],{"type":27,"value":2677},{"type":21,"tag":1185,"props":3004,"children":3005},{"style":1568},[3006],{"type":27,"value":2529},{"type":21,"tag":1185,"props":3008,"children":3009},{"style":1198},[3010],{"type":27,"value":2720},{"type":21,"tag":1185,"props":3012,"children":3013},{"class":1187,"line":1131},[3014,3018,3022],{"type":21,"tag":1185,"props":3015,"children":3016},{"style":2522},[3017],{"type":27,"value":2685},{"type":21,"tag":1185,"props":3019,"children":3020},{"style":1568},[3021],{"type":27,"value":2529},{"type":21,"tag":1185,"props":3023,"children":3024},{"style":1209},[3025],{"type":27,"value":2736},{"type":21,"tag":1185,"props":3027,"children":3028},{"class":1187,"line":1591},[3029,3034],{"type":21,"tag":1185,"props":3030,"children":3031},{"style":2522},[3032],{"type":27,"value":3033},"badges",{"type":21,"tag":1185,"props":3035,"children":3036},{"style":1568},[3037],{"type":27,"value":3038},": [{\n",{"type":21,"tag":1185,"props":3040,"children":3041},{"class":1187,"line":1600},[3042,3047,3051,3056],{"type":21,"tag":1185,"props":3043,"children":3044},{"style":2522},[3045],{"type":27,"value":3046},"  color",{"type":21,"tag":1185,"props":3048,"children":3049},{"style":1568},[3050],{"type":27,"value":2529},{"type":21,"tag":1185,"props":3052,"children":3053},{"style":1198},[3054],{"type":27,"value":3055},"'white'",{"type":21,"tag":1185,"props":3057,"children":3058},{"style":1568},[3059],{"type":27,"value":1695},{"type":21,"tag":1185,"props":3061,"children":3062},{"class":1187,"line":1732},[3063,3068,3072,3077],{"type":21,"tag":1185,"props":3064,"children":3065},{"style":2522},[3066],{"type":27,"value":3067},"  bg",{"type":21,"tag":1185,"props":3069,"children":3070},{"style":1568},[3071],{"type":27,"value":2529},{"type":21,"tag":1185,"props":3073,"children":3074},{"style":1198},[3075],{"type":27,"value":3076},"'rgba(0, 0, 0, 0.3)'",{"type":21,"tag":1185,"props":3078,"children":3079},{"style":1568},[3080],{"type":27,"value":1695},{"type":21,"tag":1185,"props":3082,"children":3083},{"class":1187,"line":1741},[3084,3089,3093],{"type":21,"tag":1185,"props":3085,"children":3086},{"style":2522},[3087],{"type":27,"value":3088},"  content",{"type":21,"tag":1185,"props":3090,"children":3091},{"style":1568},[3092],{"type":27,"value":2529},{"type":21,"tag":1185,"props":3094,"children":3095},{"style":1198},[3096],{"type":27,"value":3097},"'Technology'\n",{"type":21,"tag":1185,"props":3099,"children":3100},{"class":1187,"line":1750},[3101],{"type":21,"tag":1185,"props":3102,"children":3103},{"style":1568},[3104],{"type":27,"value":3105},"}]\n",{"type":21,"tag":1185,"props":3107,"children":3108},{"class":1187,"line":1767},[3109],{"type":21,"tag":1185,"props":3110,"children":3111},{"style":1568},[3112],{"type":27,"value":2516},{"type":21,"tag":1162,"props":3114,"children":3116},{"id":3115},"read-more",[3117],{"type":27,"value":3118},"Read more",{"type":21,"tag":78,"props":3120,"children":3121},{},[3122,3124,3130],{"type":27,"value":3123},"Alpine is a Nuxt theme using the Content module in ",{"type":21,"tag":1181,"props":3125,"children":3127},{"className":3126},[],[3128],{"type":27,"value":3129},"documentDriven",{"type":27,"value":3131}," mode.",{"type":21,"tag":78,"props":3133,"children":3134},{},[3135,3137,3144],{"type":27,"value":3136},"👉 Learn more in the ",{"type":21,"tag":85,"props":3138,"children":3141},{"href":3139,"rel":3140},"https://content.nuxtjs.org/",[1388],[3142],{"type":27,"value":3143},"Nuxt Content documentation",{"type":27,"value":1620},{"type":21,"tag":102,"props":3146,"children":3147},{},[3148],{"type":27,"value":1487},{"title":8,"searchDepth":1128,"depth":1128,"links":3150},[3151,3152,3153,3154,3155,3156],{"id":2446,"depth":1128,"text":2449},{"id":2612,"depth":1128,"text":2615},{"id":2770,"depth":1128,"text":2773},{"id":2860,"depth":1128,"text":2863},{"id":2973,"depth":1128,"text":2976},{"id":3115,"depth":1128,"text":3118},"content:articles:3.write-articles.md","articles/3.write-articles.md","articles/3.write-articles",{"_path":3161,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":3162,"description":3163,"cover":3164,"date":1148,"layout":1149,"body":3165,"_type":1134,"_id":3421,"_source":1136,"_file":3422,"_stem":3423,"_extension":1139},"/articles/design-tokens","Customize Alpine","Leverage the tokens.config.ts to give your identity to Alpine.","/articles/design-tokens.webp",{"type":18,"children":3166,"toc":3419},[3167,3172,3185,3199,3221,3233,3380,3402,3415],{"type":21,"tag":22,"props":3168,"children":3170},{"id":3169},"customize-alpine",[3171],{"type":27,"value":3162},{"type":21,"tag":78,"props":3173,"children":3174},{},[3175,3177,3183],{"type":27,"value":3176},"Leverage the ",{"type":21,"tag":1181,"props":3178,"children":3180},{"className":3179},[],[3181],{"type":27,"value":3182},"tokens.config.ts",{"type":27,"value":3184}," to give your identity to Alpine.",{"type":21,"tag":78,"props":3186,"children":3187},{},[3188,3190,3197],{"type":27,"value":3189},"Look at the ",{"type":21,"tag":85,"props":3191,"children":3194},{"href":3192,"rel":3193},"https://github.com/nuxt-themes/alpine/blob/main/tokens.config.ts",[1388],[3195],{"type":27,"value":3196},"default tokens config",{"type":27,"value":3198}," to check all the Alpine related Design Tokens.",{"type":21,"tag":78,"props":3200,"children":3201},{},[3202,3204,3211,3213,3220],{"type":27,"value":3203},"Alpine is also powered by ",{"type":21,"tag":85,"props":3205,"children":3208},{"href":3206,"rel":3207},"https://www.npmjs.com/package/@nuxt-themes/tokens",[1388],[3209],{"type":27,"value":3210},"@nuxt-themes/tokens",{"type":27,"value":3212},", see the ",{"type":21,"tag":85,"props":3214,"children":3217},{"href":3215,"rel":3216},"https://unpkg.com/@nuxt-themes/tokens@latest/dist/tokens.config.ts",[1388],[3218],{"type":27,"value":3219},"package tokens.config.ts",{"type":27,"value":1620},{"type":21,"tag":78,"props":3222,"children":3223},{},[3224,3226,3231],{"type":27,"value":3225},"You can configure all the theme tokens to change the apperance of Alpine by creating a ",{"type":21,"tag":1181,"props":3227,"children":3229},{"className":3228},[],[3230],{"type":27,"value":3182},{"type":27,"value":3232}," in your project:",{"type":21,"tag":1174,"props":3234,"children":3236},{"className":1540,"code":3235,"language":1542,"meta":8,"style":8},"import { defineTheme } from 'pinceau'\n\nexport default defineTheme({\n  alpine: {\n    body: {\n      // Update the background color in light & dark mode\n      backgroundColor: {\n        initial: '#0f172a',\n        dark: '#f8fafc'\n      }\n    }\n  }\n})\n",[3237],{"type":21,"tag":1181,"props":3238,"children":3239},{"__ignoreMap":8},[3240,3263,3271,3291,3298,3306,3314,3322,3339,3352,3359,3366,3373],{"type":21,"tag":1185,"props":3241,"children":3242},{"class":1187,"line":1188},[3243,3248,3253,3258],{"type":21,"tag":1185,"props":3244,"children":3245},{"style":1552},[3246],{"type":27,"value":3247},"import",{"type":21,"tag":1185,"props":3249,"children":3250},{"style":1568},[3251],{"type":27,"value":3252}," { defineTheme } ",{"type":21,"tag":1185,"props":3254,"children":3255},{"style":1552},[3256],{"type":27,"value":3257},"from",{"type":21,"tag":1185,"props":3259,"children":3260},{"style":1198},[3261],{"type":27,"value":3262}," 'pinceau'\n",{"type":21,"tag":1185,"props":3264,"children":3265},{"class":1187,"line":1128},[3266],{"type":21,"tag":1185,"props":3267,"children":3268},{"emptyLinePlaceholder":73},[3269],{"type":27,"value":3270},"\n",{"type":21,"tag":1185,"props":3272,"children":3273},{"class":1187,"line":1131},[3274,3278,3282,3287],{"type":21,"tag":1185,"props":3275,"children":3276},{"style":1552},[3277],{"type":27,"value":1555},{"type":21,"tag":1185,"props":3279,"children":3280},{"style":1552},[3281],{"type":27,"value":1560},{"type":21,"tag":1185,"props":3283,"children":3284},{"style":1192},[3285],{"type":27,"value":3286}," defineTheme",{"type":21,"tag":1185,"props":3288,"children":3289},{"style":1568},[3290],{"type":27,"value":1571},{"type":21,"tag":1185,"props":3292,"children":3293},{"class":1187,"line":1591},[3294],{"type":21,"tag":1185,"props":3295,"children":3296},{"style":1568},[3297],{"type":27,"value":1579},{"type":21,"tag":1185,"props":3299,"children":3300},{"class":1187,"line":1600},[3301],{"type":21,"tag":1185,"props":3302,"children":3303},{"style":1568},[3304],{"type":27,"value":3305},"    body: {\n",{"type":21,"tag":1185,"props":3307,"children":3308},{"class":1187,"line":1732},[3309],{"type":21,"tag":1185,"props":3310,"children":3311},{"style":1585},[3312],{"type":27,"value":3313},"      // Update the background color in light & dark mode\n",{"type":21,"tag":1185,"props":3315,"children":3316},{"class":1187,"line":1741},[3317],{"type":21,"tag":1185,"props":3318,"children":3319},{"style":1568},[3320],{"type":27,"value":3321},"      backgroundColor: {\n",{"type":21,"tag":1185,"props":3323,"children":3324},{"class":1187,"line":1750},[3325,3330,3335],{"type":21,"tag":1185,"props":3326,"children":3327},{"style":1568},[3328],{"type":27,"value":3329},"        initial: ",{"type":21,"tag":1185,"props":3331,"children":3332},{"style":1198},[3333],{"type":27,"value":3334},"'#0f172a'",{"type":21,"tag":1185,"props":3336,"children":3337},{"style":1568},[3338],{"type":27,"value":1695},{"type":21,"tag":1185,"props":3340,"children":3341},{"class":1187,"line":1767},[3342,3347],{"type":21,"tag":1185,"props":3343,"children":3344},{"style":1568},[3345],{"type":27,"value":3346},"        dark: ",{"type":21,"tag":1185,"props":3348,"children":3349},{"style":1198},[3350],{"type":27,"value":3351},"'#f8fafc'\n",{"type":21,"tag":1185,"props":3353,"children":3354},{"class":1187,"line":1785},[3355],{"type":21,"tag":1185,"props":3356,"children":3357},{"style":1568},[3358],{"type":27,"value":2076},{"type":21,"tag":1185,"props":3360,"children":3361},{"class":1187,"line":1803},[3362],{"type":21,"tag":1185,"props":3363,"children":3364},{"style":1568},[3365],{"type":27,"value":1823},{"type":21,"tag":1185,"props":3367,"children":3368},{"class":1187,"line":1817},[3369],{"type":21,"tag":1185,"props":3370,"children":3371},{"style":1568},[3372],{"type":27,"value":1597},{"type":21,"tag":1185,"props":3374,"children":3375},{"class":1187,"line":1826},[3376],{"type":21,"tag":1185,"props":3377,"children":3378},{"style":1568},[3379],{"type":27,"value":1840},{"type":21,"tag":78,"props":3381,"children":3382},{},[3383,3385,3392,3394,3400],{"type":27,"value":3384},"If you are using ",{"type":21,"tag":85,"props":3386,"children":3389},{"href":3387,"rel":3388},"https://nuxt.studio",[1388],[3390],{"type":27,"value":3391},"Nuxt Studio",{"type":27,"value":3393},", you can use an UI to update the ",{"type":21,"tag":1181,"props":3395,"children":3397},{"className":3396},[],[3398],{"type":27,"value":3399},"token.config.ts",{"type":27,"value":3401}," of your Alpine project:",{"type":21,"tag":78,"props":3403,"children":3404},{},[3405],{"type":21,"tag":85,"props":3406,"children":3408},{"href":3387,"rel":3407},[1388],[3409],{"type":21,"tag":3410,"props":3411,"children":3414},"img",{"alt":3412,"src":3413},"design-tokens-studio.png","/design-tokens-studio.png",[],{"type":21,"tag":102,"props":3416,"children":3417},{},[3418],{"type":27,"value":1487},{"title":8,"searchDepth":1128,"depth":1128,"links":3420},[],"content:articles:4.design-tokens.md","articles/4.design-tokens.md","articles/4.design-tokens",{"_path":3425,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":3426,"description":3427,"cover":3428,"author":3429,"date":1148,"layout":16,"body":3430,"_type":1134,"_id":4496,"_source":1136,"_file":4497,"_stem":4498,"_extension":1139},"/articles/messparkour-sv2","Messparkour SV2","Praxisaufgabe SS2025","https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/schaltungen/oszi.jpg?raw=true",{"name":13,"avatarUrl":14},{"type":18,"children":3431,"toc":4484},[3432,3437,3452,3468,3477,3545,3559,3578,3581,3606,3719,3722,3733,3741,3832,3842,3856,3865,3880,3900,3909,3946,3949,3959,3966,4078,4086,4107,4115,4136,4145,4153,4194,4197,4207,4284,4293,4308,4316,4341,4349,4370,4378,4408,4411,4419,4431,4466],{"type":21,"tag":22,"props":3433,"children":3435},{"id":3434},"messparkour-sv2",[3436],{"type":27,"value":3426},{"type":21,"tag":78,"props":3438,"children":3439},{},[3440,3445,3447],{"type":21,"tag":766,"props":3441,"children":3442},{},[3443],{"type":27,"value":3444},"Verantwortlicher: Marc Nauendorf",{"type":27,"value":3446}," | ",{"type":21,"tag":766,"props":3448,"children":3449},{},[3450],{"type":27,"value":3451},"Bewertung: 50 Punkte (Praxisteil) + 50 Punkte (Theorie) bei Herr Klemm",{"type":21,"tag":3453,"props":3454,"children":3455},"blockquote",{},[3456,3458],{"type":27,"value":3457},"\n  ",{"type":21,"tag":78,"props":3459,"children":3460},{},[3461,3466],{"type":21,"tag":766,"props":3462,"children":3463},{},[3464],{"type":27,"value":3465},"Beide Teile müssen bestanden",{"type":27,"value":3467}," werden um SV2 zu bestehen.",{"type":21,"tag":1162,"props":3469,"children":3471},{"id":3470},"vorwort",[3472],{"type":21,"tag":766,"props":3473,"children":3474},{},[3475],{"type":27,"value":3476},"Vorwort",{"type":21,"tag":39,"props":3478,"children":3480},{"style":3479},"display: flex; align-items: center; gap: 20px;",[3481,3537],{"type":21,"tag":39,"props":3482,"children":3483},{},[3484,3503,3513,3532],{"type":21,"tag":78,"props":3485,"children":3486},{},[3487,3489,3494,3496,3501],{"type":27,"value":3488},"In diesem ",{"type":21,"tag":766,"props":3490,"children":3491},{},[3492],{"type":27,"value":3493},"Praxisteil von Signalverarbeitung 2",{"type":27,"value":3495}," erwartet euch ein spannender Messparkour, der in ",{"type":21,"tag":766,"props":3497,"children":3498},{},[3499],{"type":27,"value":3500},"drei primären Präsenzterminen",{"type":27,"value":3502}," organisiert ist.",{"type":21,"tag":78,"props":3504,"children":3505},{},[3506,3508],{"type":27,"value":3507},"In diesen Terminen könnt ihr eigenständig eure Arbeiten durchführen, wie in den ",{"type":21,"tag":766,"props":3509,"children":3510},{},[3511],{"type":27,"value":3512},"nachfolgenden Abschnitten beschrieben.",{"type":21,"tag":78,"props":3514,"children":3515},{},[3516,3518,3523,3525,3530],{"type":27,"value":3517},"Die Labortermine sind in ",{"type":21,"tag":766,"props":3519,"children":3520},{},[3521],{"type":27,"value":3522},"erster Linie",{"type":27,"value":3524}," dazu gedacht, offene Fragen zu klären, euch während des praktischen Vorgehens zu ",{"type":21,"tag":766,"props":3526,"children":3527},{},[3528],{"type":27,"value":3529},"unterstützen",{"type":27,"value":3531}," und den Übergang von der theoretischen Vorbereitung zur praktischen Anwendung zu erleichtern.",{"type":21,"tag":78,"props":3533,"children":3534},{},[3535],{"type":27,"value":3536},"Ich freue mich auf eure engagierte Mitarbeit und wünsche euch viel Erfolg bei der Durchführung des Messparkours.",{"type":21,"tag":39,"props":3538,"children":3539},{},[3540],{"type":21,"tag":3410,"props":3541,"children":3544},{"src":3542,"alt":3543},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/gif/oszi.gif?raw=true","Oszi GIF",[],{"type":21,"tag":3453,"props":3546,"children":3547},{},[3548,3549],{"type":27,"value":3457},{"type":21,"tag":78,"props":3550,"children":3551},{},[3552,3554],{"type":27,"value":3553},"Bemerkung: Die jenigen die mit ihrem Microcontroller schon anfangen möchte, kann das gerne tun. Man kann die Arbeiten auch mit AtmelChips o.ä. bearbeiten. Wichtig: ",{"type":21,"tag":766,"props":3555,"children":3556},{},[3557],{"type":27,"value":3558},"Das Arduino Framework ist das einzige was ihr nicht nutzen dürft, sonst ist alles erlaubt.",{"type":21,"tag":78,"props":3560,"children":3561},{},[3562,3567,3569],{"type":21,"tag":766,"props":3563,"children":3564},{},[3565],{"type":27,"value":3566},"PS:",{"type":27,"value":3568}," Zugang für Labor bei ",{"type":21,"tag":766,"props":3570,"children":3571},{},[3572],{"type":21,"tag":85,"props":3573,"children":3575},{"href":3574},"https://www.hs-heilbronn.de/de/martin.ballein",[3576],{"type":27,"value":3577},"Herr Ballein",{"type":21,"tag":35,"props":3579,"children":3580},{},[],{"type":21,"tag":78,"props":3582,"children":3583},{},[3584,3589,3591,3595,3604],{"type":21,"tag":766,"props":3585,"children":3586},{},[3587],{"type":27,"value":3588},"Termine:",{"type":27,"value":3590}," ",{"type":21,"tag":3592,"props":3593,"children":3594},"br",{},[],{"type":21,"tag":766,"props":3596,"children":3597},{},[3598],{"type":21,"tag":85,"props":3599,"children":3601},{"href":3600},"https://splan.hs-heilbronn.de/",[3602],{"type":27,"value":3603},"Splan",{"type":27,"value":3605}," | Die Tage die angegeben sind, sind bei euch (SEB3) ohne Kurse.",{"type":21,"tag":3607,"props":3608,"children":3609},"table",{},[3610,3634],{"type":21,"tag":3611,"props":3612,"children":3613},"thead",{},[3614],{"type":21,"tag":3615,"props":3616,"children":3617},"tr",{},[3618,3624,3629],{"type":21,"tag":3619,"props":3620,"children":3621},"th",{},[3622],{"type":27,"value":3623},"Datum",{"type":21,"tag":3619,"props":3625,"children":3626},{},[3627],{"type":27,"value":3628},"Uhrzeit",{"type":21,"tag":3619,"props":3630,"children":3631},{},[3632],{"type":27,"value":3633},"Thema",{"type":21,"tag":3635,"props":3636,"children":3637},"tbody",{},[3638,3657,3674,3691],{"type":21,"tag":3615,"props":3639,"children":3640},{},[3641,3647,3652],{"type":21,"tag":3642,"props":3643,"children":3644},"td",{},[3645],{"type":27,"value":3646},"16.04.25",{"type":21,"tag":3642,"props":3648,"children":3649},{},[3650],{"type":27,"value":3651},"09:45 - 13:00 Uhr",{"type":21,"tag":3642,"props":3653,"children":3654},{},[3655],{"type":27,"value":3656},"Spannungsteiler & Low/High pass filter",{"type":21,"tag":3615,"props":3658,"children":3659},{},[3660,3665,3669],{"type":21,"tag":3642,"props":3661,"children":3662},{},[3663],{"type":27,"value":3664},"30.04.25",{"type":21,"tag":3642,"props":3666,"children":3667},{},[3668],{"type":27,"value":3651},{"type":21,"tag":3642,"props":3670,"children":3671},{},[3672],{"type":27,"value":3673},"I²C",{"type":21,"tag":3615,"props":3675,"children":3676},{},[3677,3682,3686],{"type":21,"tag":3642,"props":3678,"children":3679},{},[3680],{"type":27,"value":3681},"21.05.25",{"type":21,"tag":3642,"props":3683,"children":3684},{},[3685],{"type":27,"value":3651},{"type":21,"tag":3642,"props":3687,"children":3688},{},[3689],{"type":27,"value":3690},"PWM & Servo",{"type":21,"tag":3615,"props":3692,"children":3693},{},[3694,3702,3707],{"type":21,"tag":3642,"props":3695,"children":3696},{},[3697],{"type":21,"tag":766,"props":3698,"children":3699},{},[3700],{"type":27,"value":3701},"Abgabezeitpunkt",{"type":21,"tag":3642,"props":3703,"children":3704},{},[3705],{"type":27,"value":3706},"bis 01.07.2025",{"type":21,"tag":3642,"props":3708,"children":3709},{},[3710],{"type":21,"tag":766,"props":3711,"children":3712},{},[3713],{"type":21,"tag":85,"props":3714,"children":3716},{"href":3715},"https://ilias.hs-heilbronn.de/ilias.php?baseClass=ilrepositorygui&cmdNode=yc:ni&cmdClass=ilObjFolderGUI&ref_id=918744",[3717],{"type":27,"value":3718},"Hochzuladen im Ilias Kurs",{"type":21,"tag":35,"props":3720,"children":3721},{},[],{"type":21,"tag":1162,"props":3723,"children":3725},{"id":3724},"termin-1-spannungsteiler-highlowpass-filter",[3726,3728],{"type":27,"value":3727},"📅 ",{"type":21,"tag":766,"props":3729,"children":3730},{},[3731],{"type":27,"value":3732},"Termin 1: Spannungsteiler & High&LowPass Filter",{"type":21,"tag":78,"props":3734,"children":3735},{},[3736],{"type":21,"tag":766,"props":3737,"children":3738},{},[3739],{"type":27,"value":3740},"Themen:",{"type":21,"tag":3742,"props":3743,"children":3744},"ol",{},[3745,3746,3774,3775],{"type":27,"value":3457},{"type":21,"tag":1381,"props":3747,"children":3748},{},[3749,3750,3755,3756,3773],{"type":27,"value":46},{"type":21,"tag":766,"props":3751,"children":3752},{},[3753],{"type":27,"value":3754},"Spannungsteiler",{"type":27,"value":46},{"type":21,"tag":1377,"props":3757,"children":3758},{},[3759,3761,3766,3767,3772],{"type":27,"value":3760},"\n      ",{"type":21,"tag":1381,"props":3762,"children":3763},{},[3764],{"type":27,"value":3765},"Berechne verschiedene Spannungsteiler-Konfigurationen unter Verwendung von Widerständen.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":3768,"children":3769},{},[3770],{"type":27,"value":3771},"Vergleiche die theoretisch berechneten Werte mit praktischen Messungen.",{"type":27,"value":46},{"type":27,"value":3457},{"type":27,"value":3457},{"type":21,"tag":1381,"props":3776,"children":3777},{},[3778,3779,3784,3785,3831],{"type":27,"value":46},{"type":21,"tag":766,"props":3780,"children":3781},{},[3782],{"type":27,"value":3783},"Hoch- und Tiefpassfilter",{"type":27,"value":46},{"type":21,"tag":1377,"props":3786,"children":3787},{},[3788,3789,3794,3795,3800,3801,3830],{"type":27,"value":3760},{"type":21,"tag":1381,"props":3790,"children":3791},{},[3792],{"type":27,"value":3793},"Untersuche den Aufbau und die Funktionsweise von passiven Hoch- und Tiefpassfiltern.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":3796,"children":3797},{},[3798],{"type":27,"value":3799},"Berechne die Grenzfrequenz und vergleiche die Ergebnisse.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":3802,"children":3803},{},[3804,3810,3811,3820,3821],{"type":21,"tag":3805,"props":3806,"children":3807},"em",{},[3808],{"type":27,"value":3809},"Material & Referenz:",{"type":27,"value":3590},{"type":21,"tag":766,"props":3812,"children":3813},{},[3814],{"type":21,"tag":85,"props":3815,"children":3817},{"href":3816},"https://www.electronics-tutorials.ws/de/filtern/passiver-hochpassfilter.html",[3818],{"type":27,"value":3819},"Passiver Hochpassfilter",{"type":27,"value":2178},{"type":21,"tag":766,"props":3822,"children":3823},{},[3824],{"type":21,"tag":85,"props":3825,"children":3827},{"href":3826},"https://www.youtube.com/watch?v=lagfhNjMuQM",[3828],{"type":27,"value":3829},"Video Tutorial",{"type":27,"value":46},{"type":27,"value":3457},{"type":21,"tag":3833,"props":3834,"children":3836},"h4",{"id":3835},"vorbereitung",[3837],{"type":21,"tag":766,"props":3838,"children":3839},{},[3840],{"type":27,"value":3841},"Vorbereitung",{"type":21,"tag":1377,"props":3843,"children":3844},{},[3845,3846],{"type":27,"value":3457},{"type":21,"tag":1381,"props":3847,"children":3848},{},[3849,3854],{"type":21,"tag":766,"props":3850,"children":3851},{},[3852],{"type":27,"value":3853},"Selbstständiges aneignen der Themen",{"type":27,"value":3855}," High&Low Pass Filter + Spannungsteiler",{"type":21,"tag":3833,"props":3857,"children":3859},{"id":3858},"labortermin",[3860],{"type":21,"tag":766,"props":3861,"children":3862},{},[3863],{"type":27,"value":3864},"LaborTermin",{"type":21,"tag":1377,"props":3866,"children":3867},{},[3868,3869,3874,3875],{"type":27,"value":3457},{"type":21,"tag":1381,"props":3870,"children":3871},{},[3872],{"type":27,"value":3873},"Aufbauen eurer errechneten Schaltungen mit Freqenzgenerator & Netzteil",{"type":27,"value":3457},{"type":21,"tag":1381,"props":3876,"children":3877},{},[3878],{"type":27,"value":3879},"Bearbeiten der Themenfelder mit Osziloskop & Multimeter",{"type":21,"tag":3453,"props":3881,"children":3882},{},[3883,3884],{"type":27,"value":3457},{"type":21,"tag":78,"props":3885,"children":3886},{},[3887,3889,3898],{"type":27,"value":3888},"Am Ende die Ausgabe eines ",{"type":21,"tag":85,"props":3890,"children":3892},{"href":3891},"https://www.raspberrypi.com/documentation/microcontrollers/pico-series.html#pico-1-technical-specification",[3893],{"type":21,"tag":766,"props":3894,"children":3895},{},[3896],{"type":27,"value":3897},"Pi Pico´s",{"type":27,"value":3899}," mit einem I²C Bauteil",{"type":21,"tag":3833,"props":3901,"children":3903},{"id":3902},"nachbereitung",[3904],{"type":21,"tag":766,"props":3905,"children":3906},{},[3907],{"type":27,"value":3908},"Nachbereitung",{"type":21,"tag":1377,"props":3910,"children":3911},{},[3912,3913],{"type":27,"value":3457},{"type":21,"tag":1381,"props":3914,"children":3915},{},[3916,3917,3922,3923,3945],{"type":27,"value":46},{"type":21,"tag":766,"props":3918,"children":3919},{},[3920],{"type":27,"value":3921},"Dokumentation",{"type":27,"value":46},{"type":21,"tag":1377,"props":3924,"children":3925},{},[3926,3927,3932,3933,3938,3939,3944],{"type":27,"value":3760},{"type":21,"tag":1381,"props":3928,"children":3929},{},[3930],{"type":27,"value":3931},"Vergleiche gemessene Spannungswerte mit den Berechnungen.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":3934,"children":3935},{},[3936],{"type":27,"value":3937},"Analysiere, wie sich Widerstandsänderungen auf die Kondensator-Entladekurve auswirken.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":3940,"children":3941},{},[3942],{"type":27,"value":3943},"PDF o.ä. mit Berechnungen, Messdaten & Fehleranalyse.",{"type":27,"value":46},{"type":27,"value":3457},{"type":21,"tag":35,"props":3947,"children":3948},{},[],{"type":21,"tag":1162,"props":3950,"children":3952},{"id":3951},"termin-2-ic-protokoll-datenpakete",[3953,3954],{"type":27,"value":3727},{"type":21,"tag":766,"props":3955,"children":3956},{},[3957],{"type":27,"value":3958},"Termin 2: I²C Protokoll & DatenPakete",{"type":21,"tag":78,"props":3960,"children":3961},{},[3962],{"type":21,"tag":766,"props":3963,"children":3964},{},[3965],{"type":27,"value":3740},{"type":21,"tag":3742,"props":3967,"children":3968},{},[3969,3970,4019,4020],{"type":27,"value":3457},{"type":21,"tag":1381,"props":3971,"children":3972},{},[3973,3974,3979,3980,4018],{"type":27,"value":46},{"type":21,"tag":766,"props":3975,"children":3976},{},[3977],{"type":27,"value":3978},"I²C Protocoll",{"type":27,"value":46},{"type":21,"tag":1377,"props":3981,"children":3982},{},[3983,3984,3989,3990,4017],{"type":27,"value":3760},{"type":21,"tag":1381,"props":3985,"children":3986},{},[3987],{"type":27,"value":3988},"Adressierung, Clock Speed sowie Read and Write Funktionalitäten.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":3991,"children":3992},{},[3993,3997,3998,4007,4008],{"type":21,"tag":3805,"props":3994,"children":3995},{},[3996],{"type":27,"value":3809},{"type":27,"value":3590},{"type":21,"tag":766,"props":3999,"children":4000},{},[4001],{"type":21,"tag":85,"props":4002,"children":4004},{"href":4003},"https://de.wikibooks.org/wiki/C-Programmierung_mit_AVR-GCC/_I2C",[4005],{"type":27,"value":4006},"I²C-Wikibooks",{"type":27,"value":2178},{"type":21,"tag":766,"props":4009,"children":4010},{},[4011],{"type":21,"tag":85,"props":4012,"children":4014},{"href":4013},"https://www.elektronik-kompendium.de/sites/raspberry-pi/2612271.htm",[4015],{"type":27,"value":4016},"Elektronik-Kompendium",{"type":27,"value":46},{"type":27,"value":3457},{"type":27,"value":3457},{"type":21,"tag":1381,"props":4021,"children":4022},{},[4023,4024,4029,4030,4077],{"type":27,"value":46},{"type":21,"tag":766,"props":4025,"children":4026},{},[4027],{"type":27,"value":4028},"Programmieren des Mikrocontrollers",{"type":27,"value":46},{"type":21,"tag":1377,"props":4031,"children":4032},{},[4033,4034,4039,4040,4076],{"type":27,"value":3760},{"type":21,"tag":1381,"props":4035,"children":4036},{},[4037],{"type":27,"value":4038},"Das Programmieren des Mikrocontrollers : Raspberry Pi Pico zur Handhabung des I²C Protokolls.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":4041,"children":4042},{},[4043,4047,4048,4057,4058,4066,4067],{"type":21,"tag":3805,"props":4044,"children":4045},{},[4046],{"type":27,"value":3809},{"type":27,"value":3590},{"type":21,"tag":766,"props":4049,"children":4050},{},[4051],{"type":21,"tag":85,"props":4052,"children":4054},{"href":4053},"https://docs.micropython.org/en/latest/rp2/quickref.html#pwm",[4055],{"type":27,"value":4056},"MicroPython-PWM-Tutorials",{"type":27,"value":2178},{"type":21,"tag":766,"props":4059,"children":4060},{},[4061],{"type":21,"tag":85,"props":4062,"children":4063},{"href":4013},[4064],{"type":27,"value":4065},"I²C Micropython",{"type":27,"value":2178},{"type":21,"tag":766,"props":4068,"children":4069},{},[4070],{"type":21,"tag":85,"props":4071,"children":4073},{"href":4072},"https://www.youtube.com/watch?v=092xFEmAS98",[4074],{"type":27,"value":4075},"code_tutorial",{"type":27,"value":46},{"type":27,"value":3457},{"type":21,"tag":3833,"props":4079,"children":4081},{"id":4080},"vorbereitung-1",[4082],{"type":21,"tag":766,"props":4083,"children":4084},{},[4085],{"type":27,"value":3841},{"type":21,"tag":1377,"props":4087,"children":4088},{},[4089,4090,4095,4097],{"type":27,"value":3457},{"type":21,"tag":1381,"props":4091,"children":4092},{},[4093],{"type":27,"value":4094},"Selbstständiges Aneignen der theoretischen Grundlagen zu MicroPython",{"type":27,"value":4096}," \n  ",{"type":21,"tag":1381,"props":4098,"children":4099},{},[4100,4102],{"type":27,"value":4101},"I²C funktionalität herstellen ",{"type":21,"tag":766,"props":4103,"children":4104},{},[4105],{"type":27,"value":4106},"bis zum 2.ten Termin",{"type":21,"tag":3833,"props":4108,"children":4110},{"id":4109},"labortermin-1",[4111],{"type":21,"tag":766,"props":4112,"children":4113},{},[4114],{"type":27,"value":3864},{"type":21,"tag":1377,"props":4116,"children":4117},{},[4118,4119,4130,4131],{"type":27,"value":3457},{"type":21,"tag":1381,"props":4120,"children":4121},{},[4122,4124,4129],{"type":27,"value":4123},"Messtechnische Darstellung, Auslesung und Analyse der I²C Pakete ",{"type":21,"tag":766,"props":4125,"children":4126},{},[4127],{"type":27,"value":4128},"über das Oszilloskop",{"type":27,"value":1620},{"type":27,"value":3457},{"type":21,"tag":1381,"props":4132,"children":4133},{},[4134],{"type":27,"value":4135},"Identifiziere mögliche Fehlerquellen und erstelle Messbilder, die von positiven bis negativen Werten reichen.",{"type":21,"tag":3453,"props":4137,"children":4138},{},[4139,4140],{"type":27,"value":3457},{"type":21,"tag":78,"props":4141,"children":4142},{},[4143],{"type":27,"value":4144},"Am Ende die Ausgabe von einem Servo-Motor für Termin 3",{"type":21,"tag":3833,"props":4146,"children":4148},{"id":4147},"nachbereitung-1",[4149],{"type":21,"tag":766,"props":4150,"children":4151},{},[4152],{"type":27,"value":3908},{"type":21,"tag":1377,"props":4154,"children":4155},{},[4156,4157],{"type":27,"value":3457},{"type":21,"tag":1381,"props":4158,"children":4159},{},[4160,4161,4165,4166,4193],{"type":27,"value":46},{"type":21,"tag":766,"props":4162,"children":4163},{},[4164],{"type":27,"value":3921},{"type":27,"value":46},{"type":21,"tag":1377,"props":4167,"children":4168},{},[4169,4170,4175,4176,4181,4182,4192],{"type":27,"value":3760},{"type":21,"tag":1381,"props":4171,"children":4172},{},[4173],{"type":27,"value":4174},"Festhalten der Oszilloskop- und Multimetermessungen in einem Messprotokoll.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":4177,"children":4178},{},[4179],{"type":27,"value":4180},"Analyse von Oszilloskop-Screenshots der SCL- und SDA-Signale.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":4183,"children":4184},{},[4185,4187],{"type":27,"value":4186},"Zeigen und Bewerten von ",{"type":21,"tag":766,"props":4188,"children":4189},{},[4190],{"type":27,"value":4191},"Good & Bad Cases",{"type":27,"value":46},{"type":27,"value":3457},{"type":21,"tag":35,"props":4195,"children":4196},{},[],{"type":21,"tag":1162,"props":4198,"children":4200},{"id":4199},"termin-3-servomotorsteuerung-mit-pwm-abschluss",[4201,4202],{"type":27,"value":3727},{"type":21,"tag":766,"props":4203,"children":4204},{},[4205],{"type":27,"value":4206},"Termin 3: Servomotorsteuerung mit PWM (Abschluss)",{"type":21,"tag":39,"props":4208,"children":4209},{"style":3479},[4210,4276],{"type":21,"tag":39,"props":4211,"children":4212},{},[4213],{"type":21,"tag":3742,"props":4214,"children":4215},{},[4216,4217],{"type":27,"value":3457},{"type":21,"tag":1381,"props":4218,"children":4219},{},[4220,4221,4226,4227,4275],{"type":27,"value":46},{"type":21,"tag":766,"props":4222,"children":4223},{},[4224],{"type":27,"value":4225},"Schaltungsdesign und Steuerung",{"type":27,"value":46},{"type":21,"tag":1377,"props":4228,"children":4229},{},[4230,4231,4250,4251,4263,4264,4274],{"type":27,"value":3760},{"type":21,"tag":1381,"props":4232,"children":4233},{},[4234,4236,4241,4243,4248],{"type":27,"value":4235},"Ansteuerung eines ",{"type":21,"tag":766,"props":4237,"children":4238},{},[4239],{"type":27,"value":4240},"Servomotors",{"type":27,"value":4242}," mithilfe von ",{"type":21,"tag":766,"props":4244,"children":4245},{},[4246],{"type":27,"value":4247},"PWM",{"type":27,"value":4249}," auf dem Raspberry Pi Pico.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":4252,"children":4253},{},[4254,4256,4261],{"type":27,"value":4255},"Steuerung ",{"type":21,"tag":766,"props":4257,"children":4258},{},[4259],{"type":27,"value":4260},"mit Potentiometer",{"type":27,"value":4262},", um ein einstellbares Eingangssignal zu erzeugen.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":4265,"children":4266},{},[4267,4272],{"type":21,"tag":766,"props":4268,"children":4269},{},[4270],{"type":27,"value":4271},"Zusammenhang",{"type":27,"value":4273}," zwischen der Potentiometerstellung (Input) und der resultierenden Servomotorausrichtung (Output) herstellen.",{"type":27,"value":46},{"type":27,"value":3457},{"type":21,"tag":39,"props":4277,"children":4278},{},[4279],{"type":21,"tag":3410,"props":4280,"children":4283},{"src":4281,"alt":4282},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/gif/servo.gif?raw=true","Servo GIF",[],{"type":21,"tag":108,"props":4285,"children":4287},{"id":4286},"praktische-umsetzung",[4288],{"type":21,"tag":766,"props":4289,"children":4290},{},[4291],{"type":27,"value":4292},"Praktische Umsetzung",{"type":21,"tag":1377,"props":4294,"children":4295},{},[4296,4297,4302,4303],{"type":27,"value":3457},{"type":21,"tag":1381,"props":4298,"children":4299},{},[4300],{"type":27,"value":4301},"Implementiere den PWM-Ausgang, um das Steuersignal für den Servomotor zu erzeugen.",{"type":27,"value":3457},{"type":21,"tag":1381,"props":4304,"children":4305},{},[4306],{"type":27,"value":4307},"Setze den Steueralgorithmus in Verbindung mit dem Eingangssignal um, sodass der Servomotor entsprechend ausgerichtet wird.",{"type":21,"tag":3833,"props":4309,"children":4311},{"id":4310},"vorbereitung-2",[4312],{"type":21,"tag":766,"props":4313,"children":4314},{},[4315],{"type":27,"value":3841},{"type":21,"tag":1377,"props":4317,"children":4318},{},[4319,4320,4325,4326],{"type":27,"value":3457},{"type":21,"tag":1381,"props":4321,"children":4322},{},[4323],{"type":27,"value":4324},"Eigenständiges Erarbeiten des Schaltungsdesigns.",{"type":27,"value":3457},{"type":21,"tag":1381,"props":4327,"children":4328},{},[4329,4331,4339],{"type":27,"value":4330},"Aneignung der Funktionen und Steuerungslogik eines ",{"type":21,"tag":766,"props":4332,"children":4333},{},[4334],{"type":21,"tag":85,"props":4335,"children":4337},{"href":4336},"https://www.upesy.com/blogs/tutorials/esp32-servo-motor-sg90-on-micropython",[4338],{"type":27,"value":4240},{"type":27,"value":4340}," (z. B. Winkelbereich, PWM-Spezifikationen).",{"type":21,"tag":3833,"props":4342,"children":4344},{"id":4343},"labortermin-2",[4345],{"type":21,"tag":766,"props":4346,"children":4347},{},[4348],{"type":27,"value":3864},{"type":21,"tag":1377,"props":4350,"children":4351},{},[4352,4353,4358,4359,4364,4365],{"type":27,"value":3457},{"type":21,"tag":1381,"props":4354,"children":4355},{},[4356],{"type":27,"value":4357},"Aufbau der geplanten Schaltung und Integration des Spannungsteilers zur Signalerzeugung. (mit Potentiometer)",{"type":27,"value":3457},{"type":21,"tag":1381,"props":4360,"children":4361},{},[4362],{"type":27,"value":4363},"Erfassung der PWM-Signale und Überprüfung des Versuchsaufbaus.",{"type":27,"value":3457},{"type":21,"tag":1381,"props":4366,"children":4367},{},[4368],{"type":27,"value":4369},"Mapping von Potentiometer auf Grad (Servo)",{"type":21,"tag":3833,"props":4371,"children":4373},{"id":4372},"nachbereitung-2",[4374],{"type":21,"tag":766,"props":4375,"children":4376},{},[4377],{"type":27,"value":3908},{"type":21,"tag":1377,"props":4379,"children":4380},{},[4381,4382],{"type":27,"value":3457},{"type":21,"tag":1381,"props":4383,"children":4384},{},[4385,4386,4390,4391,4407],{"type":27,"value":46},{"type":21,"tag":766,"props":4387,"children":4388},{},[4389],{"type":27,"value":3921},{"type":27,"value":46},{"type":21,"tag":1377,"props":4392,"children":4393},{},[4394,4395,4400,4401,4406],{"type":27,"value":3760},{"type":21,"tag":1381,"props":4396,"children":4397},{},[4398],{"type":27,"value":4399},"Detaillierte Darstellung des Schaltplans, eingesetzten Codes und gesammelten Messdaten.",{"type":27,"value":3760},{"type":21,"tag":1381,"props":4402,"children":4403},{},[4404],{"type":27,"value":4405},"Mathematische Analyse des Zusammenhangs zwischen Eingangssignal und Servomotorposition.",{"type":27,"value":46},{"type":27,"value":3457},{"type":21,"tag":35,"props":4409,"children":4410},{},[],{"type":21,"tag":1162,"props":4412,"children":4414},{"id":4413},"dokumentation",[4415],{"type":21,"tag":766,"props":4416,"children":4417},{},[4418],{"type":27,"value":3921},{"type":21,"tag":78,"props":4420,"children":4421},{},[4422,4424,4429],{"type":27,"value":4423},"Die Dokumentation soll in ",{"type":21,"tag":766,"props":4425,"children":4426},{},[4427],{"type":27,"value":4428},"maximal 10 DIN A4 Seiten",{"type":27,"value":4430}," gehalten werden und umfasst insbesondere folgende Elemente:",{"type":21,"tag":78,"props":4432,"children":4433},{},[4434,4436,4441,4443,4446,4448,4453,4455,4458,4459,4464],{"type":27,"value":4435},"• ",{"type":21,"tag":766,"props":4437,"children":4438},{},[4439],{"type":27,"value":4440},"Messprotokolle",{"type":27,"value":4442},", in denen alle relevanten Messdaten, Beobachtungen und Praxisergebnisse festgehalten werden.",{"type":21,"tag":3592,"props":4444,"children":4445},{},[],{"type":27,"value":4447},"\n• ",{"type":21,"tag":766,"props":4449,"children":4450},{},[4451],{"type":27,"value":4452},"Detaillierte Beschreibungen",{"type":27,"value":4454}," der Versuchsaufbauten, einschließlich der verwendeten Materialien, Schaltungen und angewandten Methoden.",{"type":21,"tag":3592,"props":4456,"children":4457},{},[],{"type":27,"value":4447},{"type":21,"tag":766,"props":4460,"children":4461},{},[4462],{"type":27,"value":4463},"Erkenntnisse und Analysen",{"type":27,"value":4465},", welche die Zusammenhänge zwischen den theoretischen Grundlagen und den praktischen Ergebnissen verdeutlichen.",{"type":21,"tag":78,"props":4467,"children":4468},{},[4469,4474,4476],{"type":21,"tag":766,"props":4470,"children":4471},{},[4472],{"type":27,"value":4473},"Der Abgabezeitpunkt",{"type":27,"value":4475}," | bis 01.07.2025 | ",{"type":21,"tag":766,"props":4477,"children":4478},{},[4479],{"type":21,"tag":85,"props":4480,"children":4481},{"href":3715},[4482],{"type":27,"value":4483},"Hochzuladen hier im Ilias Kurs",{"title":8,"searchDepth":1128,"depth":1128,"links":4485},[4486,4487,4489,4491,4495],{"id":3470,"depth":1128,"text":3476},{"id":3724,"depth":1128,"text":4488},"📅 Termin 1: Spannungsteiler & High&LowPass Filter",{"id":3951,"depth":1128,"text":4490},"📅 Termin 2: I²C Protokoll & DatenPakete",{"id":4199,"depth":1128,"text":4492,"children":4493},"📅 Termin 3: Servomotorsteuerung mit PWM (Abschluss)",[4494],{"id":4286,"depth":1131,"text":4292},{"id":4413,"depth":1128,"text":3921},"content:articles:messparkour-Sv2.md","articles/messparkour-Sv2.md","articles/messparkour-Sv2",1745092580641]