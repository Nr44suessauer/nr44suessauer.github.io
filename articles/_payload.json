[{"data":1,"prerenderedAt":4960},["ShallowReactive",2],{"articles":3},[4,1140,1607,1967,2891,3624,3887],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"cover":11,"author":12,"date":15,"layout":16,"body":17,"_type":1134,"_id":1135,"_source":1136,"_file":1137,"_stem":1138,"_extension":1139},"/articles/algo-vertretung-14-04-25","articles",false,"","Traveling Salesman Problem (TSP)","Brute-Force, Nearest Neighbor, and christofilf algorithm | Traveling Salesman Problem (TSP)","https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/Presentation_with_marp/Pics/Gothic3Map%20-%20Zahlen%20-%20NN.PNG?raw=true",{"name":13,"avatarUrl":14},"Marc Nauendorf","https://pbs.twimg.com/profile_images/1042510623962275840/1Iw_Mvud_400x400.jpg","2025-04-23T00:00:00.000Z","page",{"type":18,"children":19,"toc":1127},"root",[20,28,34,38,95,101,107,114,433,472,476,480,486,800,841,844,847,853,1082,1121],{"type":21,"tag":22,"props":23,"children":25},"element","h1",{"id":24},"traveling-salesman-problem-tsp",[26],{"type":27,"value":9},"text",{"type":21,"tag":29,"props":30,"children":33},"iframe",{"src":31,"style":32},"https://docs.google.com/viewer?url=https://github.com/Nr44suessauer/nr44suessauer.github.io/raw/main/nuxt-app/assets/Presentation_with_marp/Algo_14.04.2025.pdf&embedded=true","width:100%; height:500px; border:none;",[],{"type":21,"tag":35,"props":36,"children":37},"hr",{},[],{"type":21,"tag":39,"props":40,"children":44},"div",{"className":41,"style":43},[42],"notebook-container","margin-top: 20px; margin-bottom: 20px;",[45,47],{"type":27,"value":46},"\n    ",{"type":21,"tag":48,"props":49,"children":50},"details",{},[51,53,60,61,94],{"type":27,"value":52},"\n        ",{"type":21,"tag":54,"props":55,"children":57},"summary",{"style":56},"cursor: pointer; font-weight: bold; padding: 10px; background-color: #f0f0f0; border: 1px solid #ccc; border-radius: 5px;",[58],{"type":27,"value":59},"\n            Jupyter Notebook: SalesMan Problem Neuste & Complete Version (Click to Show/Hide)\n        ",{"type":27,"value":52},{"type":21,"tag":39,"props":62,"children":64},{"style":63},"border: 1px solid #ddd; padding: 15px; margin-top: 10px; background-color: #f9f9f9;",[65,67,76,77,93],{"type":27,"value":66},"\n            ",{"type":21,"tag":29,"props":68,"children":74},{"src":69,"width":70,"height":71,"style":72,"allowFullScreen":73},"https://nbviewer.org/github/Nr44suessauer/SalesMan/blob/main/SalesMan_Problem.ipynb","100%",800,"border: none;",true,[75],{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":78,"props":79,"children":81},"p",{"style":80},"text-align: center; margin-top: 10px;",[82,84,92],{"type":27,"value":83},"\n                ",{"type":21,"tag":85,"props":86,"children":89},"a",{"href":87,"target":88},"https://github.com/Nr44suessauer/SalesMan/blob/main/SalesMan_Problem.ipynb","_blank",[90],{"type":27,"value":91},"\n                    Open Notebook on GitHub\n                ",{"type":27,"value":66},{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":96,"props":97,"children":98},"title",{},[99],{"type":27,"value":100},"Algorithm Animations",{"type":21,"tag":102,"props":103,"children":104},"style",{},[105],{"type":27,"value":106},"\n        /* Common styles */\n        canvas {\n            border: 1px solid black;\n            display: block;\n        }   \n        /* Christofides styles */\n        .container {\n            display: flex;\n        }\n        .animation-container {\n            flex: 1;\n        }\n        #infoPanel {\n            flex: 0 0 500px;\n            margin-left: 20px;\n            background: #f2f2f2;\n            padding: 10px;\n            font-family: sans-serif;\n            font-size: 14px;\n            overflow-y: auto;\n            max-height: 900px;\n        }\n        .controls > div {\n            margin: 10px 0;\n        }\n        .controls > div > * {\n            margin-right: 10px;\n        }\n        #speedSlider,\n        #numPoints {\n            transform: scale(1);\n            transform-origin: left center;\n        }     \n        /* Nearest Neighbor styles */\n        .nn-container {\n            display: flex;\n        }\n        .nn-animation-container {\n            flex: 1;\n        }\n        #nnInfoPanel {\n            flex: 0 0 500px;\n            margin-left: 20px;\n            background: #f2f2f2;\n            padding: 10px;\n            font-family: sans-serif;\n            font-size: 14px;\n            overflow-y: auto;\n            max-height: 900px;\n        }\n        #nnCanvas {\n            border: 1px solid black;\n            display: block;\n        }\n        .nn-controls > div {\n            margin: 10px 0;\n        }\n        .nn-controls > div > * {\n            margin-right: 10px;\n        }\n        .selection-table {\n            width: 100%;\n            border-collapse: collapse;\n            margin: 10px 0;\n        }\n        .selection-table th, .selection-table td {\n            border: 1px solid #ddd;\n            padding: 4px;\n            text-align: center;\n        }\n        .selection-table .selected {\n            background-color: #d4ffd4;\n            font-weight: bold;\n        }\n        /* Dark Mode anpassungen für Tabellen */\n        @media (prefers-color-scheme: dark) {\n            .selection-table th, .selection-table td {\n                border-color: #555;\n            }\n            .selection-table .selected {\n                background-color: #2a472a;\n                font-weight: bold;\n            }\n            /* Verbesserte Sichtbarkeit für den Haken im Dark Mode */\n            .selection-table td:last-child {\n                color: #fff;\n            }\n            /* Hervorgehobene Markierung für den kürzesten Pfad */\n            .selection-table .selected td:last-child {\n                color: #4CAF50;\n                font-size: 1.2em;\n                font-weight: bold;\n            }\n            /* Verbesserte Sichtbarkeit für die Jupyter Notebook Buttons im Dark Mode */\n            .notebook-container details summary, \n            details.notebook-details summary, \n            body.dark-mode .notebook-container details summary,\n            body.dark-theme .notebook-container details summary {\n                background-color: #444 !important;\n                color: #fff !important;\n                border-color: #666 !important;\n            }\n        }\n        /* Brute Force styles */\n        .bf-container {\n            display: flex;\n        }\n        .bf-animation-container {\n            flex: 1;\n        }\n        #bfInfoPanel {\n            flex: 0 0 500px;\n            margin-left: 20px;\n            background: #f2f2f2;\n            padding: 10px;\n            font-family: sans-serif;\n            font-size: 14px;\n            overflow-y: auto;\n            max-height: 900px;\n        }\n        #bfCanvas {\n            border: 1px solid black;\n            display: block;\n        }\n        .bf-controls > div {\n            margin: 10px 0;\n        }\n        .bf-controls > div > * {\n            margin-right: 10px;\n        }\n    ",{"type":21,"tag":108,"props":109,"children":111},"h3",{"id":110},"brute-force-algorithm",[112],{"type":27,"value":113},"Brute Force Algorithm",{"type":21,"tag":39,"props":115,"children":118},{"className":116},[117],"bf-container",[119,120,400,401,432],{"type":27,"value":52},{"type":21,"tag":39,"props":121,"children":124},{"className":122},[123],"bf-animation-container",[125,126,392,393,399],{"type":27,"value":66},{"type":21,"tag":39,"props":127,"children":130},{"className":128},[129],"bf-controls",[131,132,176,177,391],{"type":27,"value":83},{"type":21,"tag":39,"props":133,"children":134},{},[135,137,143,144,150,151,156,157,165,166,175],{"type":27,"value":136},"\n                    ",{"type":21,"tag":138,"props":139,"children":140},"button",{},[141],{"type":27,"value":142},"Next Step",{"type":27,"value":136},{"type":21,"tag":138,"props":145,"children":147},{"style":146},"background-color: #ff5555; color: white;",[148],{"type":27,"value":149},"Reset",{"type":27,"value":136},{"type":21,"tag":138,"props":152,"children":153},{},[154],{"type":27,"value":155},"Start/Stop Animation",{"type":27,"value":136},{"type":21,"tag":158,"props":159,"children":162},"label",{"htmlFor":160},[161],"bfSpeedSlider",[163],{"type":27,"value":164},"Speed:",{"type":27,"value":136},{"type":21,"tag":167,"props":168,"children":174},"input",{"type":169,"id":161,"min":170,"max":171,"step":172,"value":173},"range","50","4000","1","300",[],{"type":27,"value":83},{"type":27,"value":83},{"type":21,"tag":39,"props":178,"children":179},{},[180,181,188,189,197,198,203,204,209,210,215,216,223,224,229,230,235,236,384,385,390],{"type":27,"value":136},{"type":21,"tag":158,"props":182,"children":185},{"htmlFor":183},[184],"bfNumPoints",[186],{"type":27,"value":187},"Number of points:",{"type":27,"value":136},{"type":21,"tag":167,"props":190,"children":196},{"type":191,"id":184,"min":192,"max":193,"value":194,"style":195},"number","3","25","4","width:50px; height:30px;",[],{"type":27,"value":136},{"type":21,"tag":138,"props":199,"children":200},{},[201],{"type":27,"value":202},"Random Points",{"type":27,"value":136},{"type":21,"tag":138,"props":205,"children":206},{},[207],{"type":27,"value":208},"Import Christofides Points",{"type":27,"value":136},{"type":21,"tag":138,"props":211,"children":212},{},[213],{"type":27,"value":214},"Import NN-Points",{"type":27,"value":136},{"type":21,"tag":158,"props":217,"children":220},{"htmlFor":218},[219],"bfStartPoint",[221],{"type":27,"value":222},"Start point:",{"type":27,"value":136},{"type":21,"tag":167,"props":225,"children":228},{"type":191,"id":219,"min":226,"max":227,"value":226,"style":195},"0","24",[],{"type":27,"value":136},{"type":21,"tag":138,"props":231,"children":232},{},[233],{"type":27,"value":234},"Set Start Point",{"type":27,"value":136},{"type":21,"tag":237,"props":238,"children":241},"select",{"id":239,"style":240},"bfConstellationSelect","height:30px;",[242,244,250,251,257,258,264,265,271,272,278,279,285,286,292,293,299,300,306,307,313,314,320,321,327,328,334,335,341,342,348,349,355,356,362,363,369,370,376,377,383],{"type":27,"value":243},"\n                        ",{"type":21,"tag":245,"props":246,"children":247},"option",{"value":8},[248],{"type":27,"value":249},"Choose constellation...",{"type":27,"value":243},{"type":21,"tag":245,"props":252,"children":254},{"value":253},"libra",[255],{"type":27,"value":256},"Libra - 10 points",{"type":27,"value":243},{"type":21,"tag":245,"props":259,"children":261},{"value":260},"orion",[262],{"type":27,"value":263},"Orion - 10 points",{"type":27,"value":243},{"type":21,"tag":245,"props":266,"children":268},{"value":267},"ursa_minor",[269],{"type":27,"value":270},"Ursa Minor - 7 points",{"type":27,"value":243},{"type":21,"tag":245,"props":273,"children":275},{"value":274},"cassiopeia",[276],{"type":27,"value":277},"Cassiopeia - 5 points",{"type":27,"value":243},{"type":21,"tag":245,"props":280,"children":282},{"value":281},"cygnus",[283],{"type":27,"value":284},"Cygnus - 9 points",{"type":27,"value":243},{"type":21,"tag":245,"props":287,"children":289},{"value":288},"ursa_major",[290],{"type":27,"value":291},"Ursa Major - 7 points",{"type":27,"value":243},{"type":21,"tag":245,"props":294,"children":296},{"value":295},"leo",[297],{"type":27,"value":298},"Leo - 9 points",{"type":27,"value":243},{"type":21,"tag":245,"props":301,"children":303},{"value":302},"draco",[304],{"type":27,"value":305},"Draco - 11 points",{"type":27,"value":243},{"type":21,"tag":245,"props":308,"children":310},{"value":309},"gemini",[311],{"type":27,"value":312},"Gemini - 9 points",{"type":27,"value":243},{"type":21,"tag":245,"props":315,"children":317},{"value":316},"southern_cross",[318],{"type":27,"value":319},"Southern Cross - 4 points",{"type":27,"value":243},{"type":21,"tag":245,"props":322,"children":324},{"value":323},"pegasus",[325],{"type":27,"value":326},"Pegasus - 5 points",{"type":27,"value":243},{"type":21,"tag":245,"props":329,"children":331},{"value":330},"andromeda",[332],{"type":27,"value":333},"Andromeda - 7 points",{"type":27,"value":243},{"type":21,"tag":245,"props":336,"children":338},{"value":337},"sagittarius",[339],{"type":27,"value":340},"Sagittarius - 8 points",{"type":27,"value":243},{"type":21,"tag":245,"props":343,"children":345},{"value":344},"scorpius",[346],{"type":27,"value":347},"Scorpius - 10 points",{"type":27,"value":243},{"type":21,"tag":245,"props":350,"children":352},{"value":351},"cancer",[353],{"type":27,"value":354},"Cancer - 6 points",{"type":27,"value":243},{"type":21,"tag":245,"props":357,"children":359},{"value":358},"pisces",[360],{"type":27,"value":361},"Pisces - 11 points",{"type":27,"value":243},{"type":21,"tag":245,"props":364,"children":366},{"value":365},"aquila",[367],{"type":27,"value":368},"Aquila - 7 points",{"type":27,"value":243},{"type":21,"tag":245,"props":371,"children":373},{"value":372},"hercules",[374],{"type":27,"value":375},"Hercules - 8 points",{"type":27,"value":243},{"type":21,"tag":245,"props":378,"children":380},{"value":379},"myrtana",[381],{"type":27,"value":382},"Myrtana - 5 Punkte",{"type":27,"value":136},{"type":27,"value":136},{"type":21,"tag":138,"props":386,"children":387},{},[388],{"type":27,"value":389},"Download Graph",{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":394,"props":395,"children":398},"canvas",{"id":396,"width":71,"height":397},"bfCanvas",600,[],{"type":27,"value":52},{"type":27,"value":52},{"type":21,"tag":39,"props":402,"children":404},{"id":403},"bfInfoPanel",[405,406,412,413,419,420,425,426,431],{"type":27,"value":66},{"type":21,"tag":108,"props":407,"children":409},{"id":408},"brute-force-data",[410],{"type":27,"value":411},"Brute Force Data",{"type":27,"value":66},{"type":21,"tag":39,"props":414,"children":416},{"id":415},"bfDataOutput",[417],{"type":27,"value":418},"Waiting for the first step...",{"type":27,"value":66},{"type":21,"tag":138,"props":421,"children":422},{},[423],{"type":27,"value":424},"Show/Hide Table",{"type":27,"value":66},{"type":21,"tag":39,"props":427,"children":430},{"id":428,"style":429},"bfFullTable","display: none; margin-top: 20px;",[],{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":434,"children":436},{"className":435,"style":43},[42],[437,438,471],{"type":27,"value":52},{"type":21,"tag":48,"props":439,"children":440},{},[441,442,447,448,470],{"type":27,"value":66},{"type":21,"tag":54,"props":443,"children":444},{"style":56},[445],{"type":27,"value":446},"\n                Jupyter Notebook: Brute Force TSP Implementation (Click to Show/Hide)\n            ",{"type":27,"value":66},{"type":21,"tag":39,"props":449,"children":450},{"style":63},[451,452,457,458,469],{"type":27,"value":83},{"type":21,"tag":29,"props":453,"children":455},{"src":454,"width":70,"height":71,"style":72,"allowFullScreen":73},"https://nbviewer.org/github/Nr44suessauer/SalesMan/blob/main/BruteForce_TSP.ipynb",[456],{"type":27,"value":83},{"type":27,"value":83},{"type":21,"tag":78,"props":459,"children":460},{"style":80},[461,462,468],{"type":27,"value":136},{"type":21,"tag":85,"props":463,"children":465},{"href":464,"target":88},"https://github.com/Nr44suessauer/SalesMan/blob/main/BruteForce_TSP.ipynb",[466],{"type":27,"value":467},"\n                        Open Notebook on GitHub\n                    ",{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":473,"children":475},{"style":474},"display: flex; align-items: center; margin-top: 30px;",[],{"type":21,"tag":39,"props":477,"children":479},{"style":478},"display: flex; align-items: center; margin-top: 10px;",[],{"type":21,"tag":108,"props":481,"children":483},{"id":482},"nearest-neighbor-algorithm",[484],{"type":27,"value":485},"Nearest Neighbor Algorithm",{"type":21,"tag":39,"props":487,"children":490},{"className":488},[489],"nn-container",[491,492,736,737,799],{"type":27,"value":52},{"type":21,"tag":39,"props":493,"children":496},{"className":494},[495],"nn-animation-container",[497,498,730,731,735],{"type":27,"value":66},{"type":21,"tag":39,"props":499,"children":502},{"className":500},[501],"nn-controls",[503,504,537,538,729],{"type":27,"value":83},{"type":21,"tag":39,"props":505,"children":506},{},[507,508,513,514,518,519,524,525,532,533,536],{"type":27,"value":136},{"type":21,"tag":138,"props":509,"children":510},{},[511],{"type":27,"value":512},"Nächster Schritt",{"type":27,"value":136},{"type":21,"tag":138,"props":515,"children":516},{"style":146},[517],{"type":27,"value":149},{"type":27,"value":136},{"type":21,"tag":138,"props":520,"children":521},{},[522],{"type":27,"value":523},"Animation Start/Stop",{"type":27,"value":136},{"type":21,"tag":158,"props":526,"children":529},{"htmlFor":527},[528],"nnSpeedSlider",[530],{"type":27,"value":531},"Geschwindigkeit:",{"type":27,"value":136},{"type":21,"tag":167,"props":534,"children":535},{"type":169,"id":528,"min":170,"max":171,"step":172,"value":173},[],{"type":27,"value":83},{"type":27,"value":83},{"type":21,"tag":39,"props":539,"children":540},{},[541,542,549,550,553,554,559,560,565,566,571,572,579,580,583,584,589,590,596,597,598,722,723,728],{"type":27,"value":136},{"type":21,"tag":158,"props":543,"children":546},{"htmlFor":544},[545],"nnNumPoints",[547],{"type":27,"value":548},"Anzahl der Punkte:",{"type":27,"value":136},{"type":21,"tag":167,"props":551,"children":552},{"type":191,"id":545,"min":192,"max":193,"value":194,"style":195},[],{"type":27,"value":136},{"type":21,"tag":138,"props":555,"children":556},{},[557],{"type":27,"value":558},"Zufällige Punkte",{"type":27,"value":136},{"type":21,"tag":138,"props":561,"children":562},{},[563],{"type":27,"value":564},"Christofides Punkte importieren",{"type":27,"value":136},{"type":21,"tag":138,"props":567,"children":568},{},[569],{"type":27,"value":570},"BF-Punkte importieren",{"type":27,"value":136},{"type":21,"tag":158,"props":573,"children":576},{"htmlFor":574},[575],"nnStartPoint",[577],{"type":27,"value":578},"Startpunkt:",{"type":27,"value":136},{"type":21,"tag":167,"props":581,"children":582},{"type":191,"id":575,"min":226,"max":227,"value":226,"style":195},[],{"type":27,"value":136},{"type":21,"tag":138,"props":585,"children":586},{},[587],{"type":27,"value":588},"Startpunkt setzen",{"type":27,"value":136},{"type":21,"tag":138,"props":591,"children":593},{"style":592},"background-color: #4CAF50; color: white;",[594],{"type":27,"value":595},"Besten Startpunkt finden",{"type":27,"value":136},{"type":27,"value":136},{"type":21,"tag":237,"props":599,"children":601},{"id":600,"style":240},"nnConstellationSelect",[602,603,608,609,614,615,620,621,626,627,632,633,638,639,644,645,650,651,656,657,662,663,668,669,674,675,680,681,686,687,692,693,698,699,704,705,710,711,716,717,721],{"type":27,"value":243},{"type":21,"tag":245,"props":604,"children":605},{"value":8},[606],{"type":27,"value":607},"Sternenbild wählen...",{"type":27,"value":243},{"type":21,"tag":245,"props":610,"children":611},{"value":253},[612],{"type":27,"value":613},"Waage (Libra) - 10 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":616,"children":617},{"value":260},[618],{"type":27,"value":619},"Orion - 10 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":622,"children":623},{"value":267},[624],{"type":27,"value":625},"Kleiner Bär - 7 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":628,"children":629},{"value":274},[630],{"type":27,"value":631},"Kassiopeia - 5 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":634,"children":635},{"value":281},[636],{"type":27,"value":637},"Schwan - 9 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":640,"children":641},{"value":288},[642],{"type":27,"value":643},"Großer Bär - 7 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":646,"children":647},{"value":295},[648],{"type":27,"value":649},"Löwe - 9 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":652,"children":653},{"value":302},[654],{"type":27,"value":655},"Drache - 11 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":658,"children":659},{"value":309},[660],{"type":27,"value":661},"Zwillinge - 9 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":664,"children":665},{"value":316},[666],{"type":27,"value":667},"Kreuz des Südens - 4 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":670,"children":671},{"value":323},[672],{"type":27,"value":673},"Pegasus - 5 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":676,"children":677},{"value":330},[678],{"type":27,"value":679},"Andromeda - 7 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":682,"children":683},{"value":337},[684],{"type":27,"value":685},"Schütze - 8 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":688,"children":689},{"value":344},[690],{"type":27,"value":691},"Skorpion - 10 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":694,"children":695},{"value":351},[696],{"type":27,"value":697},"Krebs - 6 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":700,"children":701},{"value":358},[702],{"type":27,"value":703},"Fische - 11 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":706,"children":707},{"value":365},[708],{"type":27,"value":709},"Adler - 7 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":712,"children":713},{"value":372},[714],{"type":27,"value":715},"Herkules - 8 Punkte",{"type":27,"value":243},{"type":21,"tag":245,"props":718,"children":719},{"value":379},[720],{"type":27,"value":382},{"type":27,"value":136},{"type":27,"value":136},{"type":21,"tag":138,"props":724,"children":725},{},[726],{"type":27,"value":727},"Graph herunterladen",{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":394,"props":732,"children":734},{"id":733,"width":71,"height":397},"nnCanvas",[],{"type":27,"value":52},{"type":27,"value":52},{"type":21,"tag":39,"props":738,"children":740},{"id":739},"nnInfoPanel",[741,742,748,749,755,756,759,760,771,772,782,783,788,789,793,794,798],{"type":27,"value":66},{"type":21,"tag":108,"props":743,"children":745},{"id":744},"nearest-neighbor-daten",[746],{"type":27,"value":747},"Nearest Neighbor Daten",{"type":27,"value":66},{"type":21,"tag":39,"props":750,"children":752},{"id":751},"nnDataOutput",[753],{"type":27,"value":754},"Warte auf den ersten Schritt...",{"type":27,"value":66},{"type":21,"tag":35,"props":757,"children":758},{},[],{"type":27,"value":66},{"type":21,"tag":158,"props":761,"children":764},{"htmlFor":762},[763],"nnStepDropdown",[765],{"type":21,"tag":766,"props":767,"children":768},"strong",{},[769],{"type":27,"value":770},"Schritte:",{"type":27,"value":66},{"type":21,"tag":237,"props":773,"children":774},{"id":763},[775,776,781],{"type":27,"value":83},{"type":21,"tag":245,"props":777,"children":778},{"value":8},[779],{"type":27,"value":780},"Schritt auswählen...",{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":138,"props":784,"children":785},{},[786],{"type":27,"value":787},"Tabelle ein-/ausblenden",{"type":27,"value":66},{"type":21,"tag":39,"props":790,"children":792},{"id":791},"nnStepDetails",[],{"type":27,"value":66},{"type":21,"tag":39,"props":795,"children":797},{"id":796,"style":429},"nnFullTable",[],{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":801,"children":803},{"className":802,"style":43},[42],[804,805,840],{"type":27,"value":52},{"type":21,"tag":48,"props":806,"children":807},{},[808,809,814,815,826,828,839],{"type":27,"value":66},{"type":21,"tag":54,"props":810,"children":811},{"style":56},[812],{"type":27,"value":813},"\n                Jupyter Notebook: Nearest Neighbor TSP Implementation (Klicken zum Anzeigen/Ausblenden)\n            ",{"type":27,"value":66},{"type":21,"tag":39,"props":816,"children":818},{"style":817},"border: 1px solid #ddd; padding: 15px; margin-top: 10px; background-color: #f9f9f9; width: 100%;",[819,820,825],{"type":27,"value":83},{"type":21,"tag":29,"props":821,"children":823},{"src":822,"width":70,"height":71,"style":72,"allowFullScreen":73},"https://nbviewer.org/github/Nr44suessauer/SalesMan/blob/main/NearestNeighbor_TSP.ipynb",[824],{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":827},"     ",{"type":21,"tag":78,"props":829,"children":830},{"style":80},[831,832,838],{"type":27,"value":136},{"type":21,"tag":85,"props":833,"children":835},{"href":834,"target":88},"https://github.com/Nr44suessauer/SalesMan/blob/main/NearestNeighbor_TSP.ipynb",[836],{"type":27,"value":837},"\n                        Notebook auf GitHub öffnen\n                    ",{"type":27,"value":83},{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":842,"children":843},{"style":474},[],{"type":21,"tag":39,"props":845,"children":846},{"style":478},[],{"type":21,"tag":108,"props":848,"children":850},{"id":849},"christofides-algorithm",[851],{"type":27,"value":852},"Christofides Algorithm",{"type":21,"tag":39,"props":854,"children":857},{"className":855},[856],"container",[858,859,1062,1063,1081],{"type":27,"value":52},{"type":21,"tag":39,"props":860,"children":863},{"className":861},[862],"animation-container",[864,865,1057,1058,1061],{"type":27,"value":66},{"type":21,"tag":39,"props":866,"children":869},{"className":867},[868],"controls",[870,871,901,902,1056],{"type":27,"value":83},{"type":21,"tag":39,"props":872,"children":873},{},[874,875,879,880,884,885,889,890,896,897,900],{"type":27,"value":136},{"type":21,"tag":138,"props":876,"children":877},{},[878],{"type":27,"value":512},{"type":27,"value":136},{"type":21,"tag":138,"props":881,"children":882},{"style":146},[883],{"type":27,"value":149},{"type":27,"value":136},{"type":21,"tag":138,"props":886,"children":887},{},[888],{"type":27,"value":523},{"type":27,"value":136},{"type":21,"tag":158,"props":891,"children":894},{"htmlFor":892},[893],"speedSlider",[895],{"type":27,"value":531},{"type":27,"value":136},{"type":21,"tag":167,"props":898,"children":899},{"type":169,"id":893,"min":170,"max":171,"step":172,"value":173},[],{"type":27,"value":83},{"type":27,"value":83},{"type":21,"tag":39,"props":903,"children":904},{},[905,906,912,913,916,917,921,922,927,928,932,933,939,940,943,944,948,949,950,1050,1051,1055],{"type":27,"value":136},{"type":21,"tag":158,"props":907,"children":910},{"htmlFor":908},[909],"numPoints",[911],{"type":27,"value":548},{"type":27,"value":136},{"type":21,"tag":167,"props":914,"children":915},{"type":191,"id":909,"min":192,"max":193,"value":194,"style":195},[],{"type":27,"value":136},{"type":21,"tag":138,"props":918,"children":919},{},[920],{"type":27,"value":558},{"type":27,"value":136},{"type":21,"tag":138,"props":923,"children":924},{},[925],{"type":27,"value":926},"NN-Punkte importieren",{"type":27,"value":136},{"type":21,"tag":138,"props":929,"children":930},{},[931],{"type":27,"value":570},{"type":27,"value":136},{"type":21,"tag":158,"props":934,"children":937},{"htmlFor":935},[936],"startPointChristofides",[938],{"type":27,"value":578},{"type":27,"value":136},{"type":21,"tag":167,"props":941,"children":942},{"type":191,"id":936,"min":226,"max":227,"value":226,"style":195},[],{"type":27,"value":136},{"type":21,"tag":138,"props":945,"children":946},{},[947],{"type":27,"value":588},{"type":27,"value":136},{"type":27,"value":136},{"type":21,"tag":237,"props":951,"children":953},{"id":952,"style":240},"constellationSelect",[954,955,959,960,964,965,969,970,974,975,979,980,984,985,989,990,994,995,999,1000,1004,1005,1009,1010,1014,1015,1019,1020,1024,1025,1029,1030,1034,1035,1039,1040,1044,1045,1049],{"type":27,"value":243},{"type":21,"tag":245,"props":956,"children":957},{"value":8},[958],{"type":27,"value":607},{"type":27,"value":243},{"type":21,"tag":245,"props":961,"children":962},{"value":253},[963],{"type":27,"value":613},{"type":27,"value":243},{"type":21,"tag":245,"props":966,"children":967},{"value":260},[968],{"type":27,"value":619},{"type":27,"value":243},{"type":21,"tag":245,"props":971,"children":972},{"value":274},[973],{"type":27,"value":631},{"type":27,"value":243},{"type":21,"tag":245,"props":976,"children":977},{"value":281},[978],{"type":27,"value":637},{"type":27,"value":243},{"type":21,"tag":245,"props":981,"children":982},{"value":288},[983],{"type":27,"value":643},{"type":27,"value":243},{"type":21,"tag":245,"props":986,"children":987},{"value":295},[988],{"type":27,"value":649},{"type":27,"value":243},{"type":21,"tag":245,"props":991,"children":992},{"value":302},[993],{"type":27,"value":655},{"type":27,"value":243},{"type":21,"tag":245,"props":996,"children":997},{"value":309},[998],{"type":27,"value":661},{"type":27,"value":243},{"type":21,"tag":245,"props":1001,"children":1002},{"value":316},[1003],{"type":27,"value":667},{"type":27,"value":243},{"type":21,"tag":245,"props":1006,"children":1007},{"value":323},[1008],{"type":27,"value":673},{"type":27,"value":243},{"type":21,"tag":245,"props":1011,"children":1012},{"value":330},[1013],{"type":27,"value":679},{"type":27,"value":243},{"type":21,"tag":245,"props":1016,"children":1017},{"value":337},[1018],{"type":27,"value":685},{"type":27,"value":243},{"type":21,"tag":245,"props":1021,"children":1022},{"value":344},[1023],{"type":27,"value":691},{"type":27,"value":243},{"type":21,"tag":245,"props":1026,"children":1027},{"value":351},[1028],{"type":27,"value":697},{"type":27,"value":243},{"type":21,"tag":245,"props":1031,"children":1032},{"value":358},[1033],{"type":27,"value":703},{"type":27,"value":243},{"type":21,"tag":245,"props":1036,"children":1037},{"value":365},[1038],{"type":27,"value":709},{"type":27,"value":243},{"type":21,"tag":245,"props":1041,"children":1042},{"value":372},[1043],{"type":27,"value":715},{"type":27,"value":243},{"type":21,"tag":245,"props":1046,"children":1047},{"value":379},[1048],{"type":27,"value":382},{"type":27,"value":136},{"type":27,"value":136},{"type":21,"tag":138,"props":1052,"children":1053},{},[1054],{"type":27,"value":727},{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":394,"props":1059,"children":1060},{"id":394,"width":71,"height":397},[],{"type":27,"value":52},{"type":27,"value":52},{"type":21,"tag":39,"props":1064,"children":1066},{"id":1065},"infoPanel",[1067,1068,1074,1075,1080],{"type":27,"value":66},{"type":21,"tag":108,"props":1069,"children":1071},{"id":1070},"christofides-algorithm-daten",[1072],{"type":27,"value":1073},"Christofides Algorithm Daten",{"type":27,"value":66},{"type":21,"tag":39,"props":1076,"children":1078},{"id":1077},"dataOutput",[1079],{"type":27,"value":754},{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":1083,"children":1085},{"className":1084,"style":43},[42],[1086,1087,1120],{"type":27,"value":52},{"type":21,"tag":48,"props":1088,"children":1089},{},[1090,1091,1096,1097,1107,1108,1119],{"type":27,"value":66},{"type":21,"tag":54,"props":1092,"children":1093},{"style":56},[1094],{"type":27,"value":1095},"\n                Jupyter Notebook: Christofides TSP Implementation (Klicken zum Anzeigen/Ausblenden)\n            ",{"type":27,"value":66},{"type":21,"tag":39,"props":1098,"children":1099},{"style":817},[1100,1101,1106],{"type":27,"value":83},{"type":21,"tag":29,"props":1102,"children":1104},{"src":1103,"width":70,"height":71,"style":72,"allowFullScreen":73},"https://nbviewer.org/github/Nr44suessauer/SalesMan/blob/main/Christofides_TSP.ipynb",[1105],{"type":27,"value":83},{"type":27,"value":66},{"type":27,"value":66},{"type":21,"tag":78,"props":1109,"children":1110},{"style":80},[1111,1112,1118],{"type":27,"value":83},{"type":21,"tag":85,"props":1113,"children":1115},{"href":1114,"target":88},"https://github.com/Nr44suessauer/SalesMan/blob/main/Christofides_TSP.ipynb",[1116],{"type":27,"value":1117},"\n                    Notebook auf GitHub öffnen\n                ",{"type":27,"value":66},{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":1122,"props":1123,"children":1124},"script",{},[1125],{"type":27,"value":1126},"\n    // Funktion zur Erkennung des Dark Mode\n    function isDarkMode() {\n        return document.documentElement.getAttribute('data-theme-setting') === \"dark\" ||\n            (document.documentElement.getAttribute('data-theme-setting') === null && \n             window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\n    }\n// Funktion zur Bestimmung der Koordinatensystemfarbe basierend auf dem Theme\n\n// Funktion zur Bestimmung der Koordinatensystemfarbe basierend auf dem Theme\nfunction getGridColor() {\n    // Im Light Mode die Standardfarbe verwenden\n    return isDarkMode() ? \"#999\" : \"#ccc\";\n}\n\n// Funktion zur Bestimmung der Textfarbe basierend auf dem Theme\nfunction getTextColor() {\n    // Im Light Mode die Standardfarbe \"black\" verwenden\n    return isDarkMode() ? \"#fff\" : \"black\";\n}\n\n// Funktion zur Bestimmung der Punktfarbe basierend auf dem Theme\nfunction getPointColor() {\n    // Explizit schwarz im Light Mode, weiß im Dark Mode\n    return isDarkMode() ? \"#ffffff\" : \"#000000\";\n}\n\n// Funktion zur Anpassung der Info-Panels basierend auf dem Theme\nfunction updateInfoPanelsStyle() {\n    const isDark = isDarkMode();\n    const panels = [\n        document.getElementById('infoPanel'),\n        document.getElementById('nnInfoPanel'),\n        document.getElementById('bfInfoPanel')\n    ];\n    \n    panels.forEach(panel => {\n        if (panel) {\n            if (isDark) {\n                // Im Dark Mode dunklerer Hintergrund und heller Text\n                panel.style.backgroundColor = \"#222\";\n                panel.style.color = \"#fff\";\n                // Tabellenfarben im Dark Mode anpassen\n                const tables = panel.querySelectorAll('table');\n                tables.forEach(table => {\n                    table.style.borderColor = \"#555\";\n                    const cells = table.querySelectorAll('td, th');\n                    cells.forEach(cell => {\n                        cell.style.borderColor = \"#555\";\n                    });\n                });\n            } else {\n                // Im Light Mode heller Hintergrund und dunkler Text\n                panel.style.backgroundColor = \"#f2f2f2\";\n                panel.style.color = \"#000\"; \n                // Standardstile für Tabellen wiederherstellen\n                const tables = panel.querySelectorAll('table');\n                tables.forEach(table => {\n                    table.style.borderColor = \"#ddd\";\n                    const cells = table.querySelectorAll('td, th');\n                    cells.forEach(cell => {\n                        cell.style.borderColor = \"#ddd\";\n                    });\n                });\n            }\n            \n            // Sicherstellen, dass die Änderungen übernommen werden\n            panel.style.transition = \"background-color 0.3s, color 0.3s\";\n        }\n    });\n}\n\n// Direkte Ausführung nach dem Laden - außerhalb des DOMContentLoaded-Events\n(function immediateStyleUpdate() {\n    // Sofortige Ausführung der Stilanpassungen\n    setTimeout(function() {\n        updateInfoPanelsStyle();\n        \n        // Stellen Sie sicher, dass die Canvas-Elemente korrekt gezeichnet werden\n        if (animation) {\n            animation.ctx.clearRect(0, 0, 100, 50);\n            animation.drawNodes(true);\n        }\n        if (nnAnimation) {\n            nnAnimation.ctx.clearRect(0, 0, 100, 50);\n            nnAnimation.drawNodes(true);\n        }\n        if (bfAnimation) {\n            bfAnimation.ctx.clearRect(0, 0, 50, 50);\n            bfAnimation.drawNodes(true);\n        }\n    }, 100);\n})();\n\n// Theme-Anpassungen beim Laden der Seite und bei Änderungen durchführen\ndocument.addEventListener('DOMContentLoaded', function() {\n    updateInfoPanelsStyle();\n    \n    // Beobachte Theme-Änderungen\n    if (window.matchMedia) {\n        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function() {\n            updateInfoPanelsStyle();\n            \n            // Nach Änderung des Themes neu zeichnen\n            if (animation) {\n                animation.ctx.clearRect(0, 0, 100, 50);\n                animation.drawNodes(true);\n            }\n            if (nnAnimation) {\n                nnAnimation.ctx.clearRect(0, 0, 100, 50);\n                nnAnimation.drawNodes(true);\n            }\n            if (bfAnimation) {\n                bfAnimation.ctx.clearRect(0, 0, 50, 50);\n                bfAnimation.drawNodes(true);\n            }\n        });\n    }\n});\n\n// Gemeinsame Konstante für die Sternbildkoordinaten\nconst CONSTELLATIONS = {\n    // Waage (Libra)\n    libra: [\n        { x: 21, y: 5 },\n        { x: 13, y: 13 },\n        { x: 5, y: 21 },\n        { x: 13, y: 29 },\n        { x: 21, y: 29 },\n        { x: 29, y: 29 },\n        { x: 37, y: 21 },\n        { x: 29, y: 13 },\n        { x: 21, y: 21 },\n        { x: 29, y: 37 }\n    ],\n    // Orion (Der Jäger)\n    orion: [\n        { x: 21, y: 5 },\n        { x: 13, y: 13 },\n        { x: 5, y: 21 },\n        { x: 13, y: 29 },\n        { x: 21, y: 29 },\n        { x: 29, y: 29 },\n        { x: 37, y: 21 },\n        { x: 29, y: 13 },\n        { x: 21, y: 37 },\n        { x: 21, y: 45 }\n    ],\n    // Kleiner Wagen (Ursa Minor)\n    ursa_minor: [\n        { x: 15, y: 15 },\n        { x: 13, y: 25 },\n        { x: 21, y: 29 },\n        { x: 25, y: 35 },\n        { x: 35, y: 39 },\n        { x: 45, y: 45 },\n        { x: 39, y: 25 }\n    ],\n    // Kassiopeia (W-Form)\n    cassiopeia: [\n        { x: 7, y: 10 },\n        { x: 13, y: 25 },\n        { x: 21, y: 10 },\n        { x: 33, y: 25 },\n        { x: 43, y: 10 }\n    ],\n    // Schwan (Cygnus/Nördliches Kreuz)\n    cygnus: [\n        { x: 25, y: 5 },\n        { x: 25, y: 13 },\n        { x: 25, y: 21 },\n        { x: 25, y: 29 },\n        { x: 25, y: 45 },\n        { x: 5, y: 21 },\n        { x: 13, y: 21 },\n        { x: 37, y: 21 },\n        { x: 45, y: 21 }\n    ],\n    // Großer Wagen (Ursa Major)\n    ursa_major: [\n        { x: 5, y: 5 },\n        { x: 13, y: 15 },\n        { x: 21, y: 20 },\n        { x: 30, y: 25 },\n        { x: 35, y: 35 },\n        { x: 40, y: 45 }\n    ],\n    // Löwe (Leo)\n    leo: [\n        { x: 10, y: 10 },\n        { x: 15, y: 15 },\n        { x: 25, y: 20 },\n        { x: 35, y: 25 },\n        { x: 45, y: 30 },\n        { x: 35, y: 35 },\n        { x: 25, y: 30 },\n        { x: 15, y: 25 },\n        { x: 10, y: 10 }\n    ],\n    // Drache (Draco)\n    draco: [\n        { x: 5, y: 45 },\n        { x: 10, y: 35 },\n        { x: 15, y: 30 },\n        { x: 20, y: 25 },\n        { x: 25, y: 20 },\n        { x: 30, y: 15 },\n        { x: 35, y: 10 },\n        { x: 30, y: 5 },\n        { x: 20, y: 5 },\n        { x: 10, y: 10 },\n        { x: 5, y: 15 }\n    ],\n    // Zwillinge (Gemini)\n    gemini: [\n        { x: 10, y: 10 },\n        { x: 15, y: 15 },\n        { x: 20, y: 20 },\n        { x: 25, y: 25 },\n        { x: 30, y: 30 },\n        { x: 35, y: 25 },\n        { x: 40, y: 20 },\n        { x: 35, y: 15 },\n        { x: 30, y: 10 }\n    ],\n    // Kreuz des Südens (Southern Cross)\n    southern_cross: [\n        { x: 25, y: 5 },\n        { x: 25, y: 25 },\n        { x: 15, y: 15 },\n        { x: 35, y: 15 }\n    ],\n    // Pegasus (Quadrat)\n    pegasus: [\n        { x: 10, y: 10 },\n        { x: 10, y: 40 },\n        { x: 40, y: 40 },\n        { x: 40, y: 10 },\n        { x: 10, y: 10 }\n    ],\n    // Andromeda\n    andromeda: [\n        { x: 5, y: 10 },\n        { x: 15, y: 15 },\n        { x: 25, y: 17 },\n        { x: 35, y: 15 },\n        { x: 40, y: 5 },\n        { x: 42, y: 12 },\n        { x: 45, y: 20 }\n    ],\n    // Schütze (Sagittarius)\n    sagittarius: [\n        { x: 10, y: 40 },\n        { x: 20, y: 30 },\n        { x: 30, y: 25 },\n        { x: 40, y: 27 },\n        { x: 45, y: 35 },\n        { x: 35, y: 20 },\n        { x: 25, y: 15 },\n        { x: 15, y: 15 }\n    ],\n    // Skorpion (Scorpius)\n    scorpius: [\n        { x: 10, y: 35 },\n        { x: 15, y: 30 },\n        { x: 20, y: 25 },\n        { x: 25, y: 20 },\n        { x: 30, y: 15 },\n        { x: 35, y: 10 },\n        { x: 35, y: 15 },\n        { x: 40, y: 15 },\n        { x: 45, y: 10 },\n        { x: 45, y: 5 }\n    ],\n    // Krebs (Cancer)\n        cancer: [\n            { x: 25, y: 5 },\n            { x: 20, y: 15 },\n            { x: 30, y: 15 },\n            { x: 15, y: 25 },\n            { x: 35, y: 25 },\n            { x: 25, y: 35 }\n        ],     // Fische (Pisces)\n    pisces: [\n        { x: 5, y: 15 },\n        { x: 10, y: 10 },\n        { x: 15, y: 15 },\n        { x: 20, y: 20 },\n        { x: 25, y: 25 },\n        { x: 30, y: 30 },\n        { x: 35, y: 35 },\n        { x: 40, y: 30 },\n        { x: 45, y: 25 },\n        { x: 40, y: 20 },\n        { x: 35, y: 15 }\n    ],\n    // Adler (Aquila)\n    aquila: [\n        { x: 25, y: 5 },\n        { x: 20, y: 15 },\n        { x: 15, y: 25 },\n        { x: 25, y: 20 },\n        { x: 35, y: 25 },\n        { x: 30, y: 15 },\n        { x: 25, y: 5 }\n    ],\n    // Herkules\n    hercules: [\n        { x: 10, y: 10 },\n        { x: 15, y: 25 },\n        { x: 25, y: 30 },\n        { x: 35, y: 25 },\n        { x: 40, y: 10 },\n        { x: 30, y: 15 },\n        { x: 20, y: 15 },\n        { x: 10, y: 10 }\n    ],\n    myrtana: [\n        { x: 40, y: 20 },\n        { x: 36, y: 32 },\n        { x: 25, y: 20 },\n        { x: 10, y: 35 },\n        { x: 18, y: 10 },\n    ]\n};\n// Funktion zur Erstellung von Sternbild-Knoten für beide Algorithmen\nfunction createConstellationNodes(selectedType, count) {\n    const baseNodes = CONSTELLATIONS[selectedType];\n    if (!baseNodes) return [];     \n    let nodes = [];     \n    if (count === baseNodes.length || count \u003C= 0) {\n        // Wenn die Anzahl gleich ist oder keine Anzahl angegeben wurde, \n        // verwenden wir alle Punkte des Sternbilds\n        nodes = baseNodes.map((pt, i) => ({ ...pt, id: i }));\n    } else {\n        // Interpolation für andere Anzahlen\n        const totalSegments = baseNodes.length - 1;\n        for (let i = 0; i \u003C count; i++) {\n            const t = i / (count - 1);\n            const segment = Math.min(Math.floor(t * totalSegments), totalSegments - 1);\n            const localT = (t * totalSegments) - segment;\n            const p0 = baseNodes[segment];\n            const p1 = baseNodes[segment + 1];\n            const x = p0.x + (p1.x - p0.x) * localT;\n            const y = p0.y + (p1.y - p0.y) * localT;\n            nodes.push({ x: Math.round(x), y: Math.round(y), id: i });\n        }\n    }       \n    return nodes;\n}\n// ================ CHRISTOFIDES ALGORITHMUS ================  \n// Christofides Animation Klasse\nclass ChristofidesAnimation {\n    constructor(canvas, numNodes = 4, startNode = 0) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.ctx.scale(canvas.width / 50, canvas.height / 50);\n        this.numNodes = numNodes;\n        this.startNode = startNode;\n        this.nodes = [];\n        this.mstEdges = [];\n        this.oddNodes = [];\n        this.matchingEdges = [];\n        this.eulerianCircuit = [];\n        this.tspPath = [];\n        this.phase = 'mst';\n        this.lastPhase = null;  \n        this.currentMSTIndex = 0;\n        this.currentMatchingIndex = 0;\n        this.currentEulerIndex = 1; \n        this.currentTSPIndex = 1;\n        this.drawnEdges = new Map();\n        this.init();\n        this.drawNodes(true);\n    }\n    // Zeichnet ein Koordinatensystem als Raster\n    drawCoordinateSystem() {\n        this.ctx.strokeStyle = getGridColor();\n        this.ctx.lineWidth = 0.1;\n        for (let x = 0; x \u003C= 50; x += 5) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(x, 0);\n            this.ctx.lineTo(x, 50);\n            this.ctx.stroke();\n        }\n        for (let y = 0; y \u003C= 50; y += 5) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(0, y);\n            this.ctx.lineTo(50, y);\n            this.ctx.stroke();\n        }\n    }       \n    init() {\n        this.generateNodes();\n        this.computeMST();\n        this.findOddNodes();\n        this.computeMatching();\n        this.computeEulerianCircuit();\n        this.computeTSPPath();\n    }     \n    generateNodes() {\n        for (let i = 0; i \u003C this.numNodes; i++) {\n            this.nodes.push({\n                x: Math.floor(Math.random() * (40 - 5 + 1)) + 5,\n                y: Math.floor(Math.random() * (40 - 5 + 1)) + 5,\n                id: i\n            });\n        }\n    }    \n    distance(a, b) {\n        return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n    }      \n      computeMST() {\n        const inTree = new Set([this.startNode]);\n        this.mstEdges = [];\n        while (inTree.size \u003C this.numNodes) {\n            let minEdge = null;\n            for (const node of inTree) {\n                for (let i = 0; i \u003C this.numNodes; i++) {\n                    if (!inTree.has(i)) {\n                        const distance = this.distance(this.nodes[node], this.nodes[i]);\n                        if (!minEdge || distance \u003C minEdge.distance) {\n                            minEdge = { from: node, to: i, distance };\n                        }\n                    }\n                }\n            }\n            if (minEdge) {\n                this.mstEdges.push(minEdge);\n                inTree.add(minEdge.to);\n            }\n        }\n    }   \n    findOddNodes() {\n        const degrees = new Array(this.numNodes).fill(0);\n        for (const edge of this.mstEdges) {\n            degrees[edge.from]++;\n            degrees[edge.to]++;\n        }\n        this.oddNodes = degrees.reduce((acc, d, i) => (d % 2 ? [...acc, i] : acc), []);\n    }  \n    computeMatching() {\n        const matchings = this.generateAllMatchings([...this.oddNodes]);\n        let minMatching = null;\n        let minDistance = Infinity;\n        for (const matching of matchings) {\n            const total = matching.reduce((sum, [a, b]) =>\n                sum + this.distance(this.nodes[a], this.nodes[b]), 0);\n            if (total \u003C minDistance) {\n                minDistance = total;\n                minMatching = matching;\n            }\n        }\n        this.matchingEdges = minMatching.map(([a, b]) => ({\n            from: a,\n            to: b,\n            distance: this.distance(this.nodes[a], this.nodes[b])\n        }));\n    }    \n    generateAllMatchings(nodes) {\n        if (nodes.length === 0) return [[]];\n        const [first, ...rest] = nodes;\n        return rest.flatMap((node, i) => {\n            const newRest = rest.filter((_, j) => j !== i);\n            return this.generateAllMatchings(newRest).map(match => [[first, node], ...match]);\n        });\n    }   \n    computeEulerianCircuit() {\n        const adj = new Map();\n        const addEdge = (from, to) => {\n            if (!adj.has(from)) adj.set(from, []);\n            adj.get(from).push(to);\n        };\n        [...this.mstEdges, ...this.matchingEdges].forEach(edge => {\n            addEdge(edge.from, edge.to);\n            addEdge(edge.to, edge.from);\n        });\n        const stack = [this.startNode];\n        const circuit = [];\n        while (stack.length) {\n            let current = stack[stack.length - 1];\n            if (adj.get(current)?.length) {\n                const next = adj.get(current).pop();\n                stack.push(next);\n            } else {\n                circuit.push(stack.pop());\n            }\n        }\n        this.eulerianCircuit = circuit.reverse();\n    }  \n    computeTSPPath() {\n        const visited = new Set();\n        this.tspPath = [];\n        for (const node of this.eulerianCircuit) {\n            if (!visited.has(node)) {\n                visited.add(node);\n                this.tspPath.push(node);\n            }\n        }\n        this.tspPath.push(this.tspPath[0]);\n    } \n    drawNodes(showCoordinateSystem = false) {\n        if (showCoordinateSystem) {\n            this.drawCoordinateSystem();\n        }\n        this.nodes.forEach(node => {\n            this.ctx.beginPath();\n            this.ctx.arc(node.x, node.y, 0.5, 0, Math.PI * 2);\n            this.ctx.fillStyle = getPointColor();\n            this.ctx.fill();\n            this.ctx.font = \"1.5px sans-serif\";\n            this.ctx.fillStyle = getTextColor();\n            this.ctx.textAlign = \"center\";\n            const label = `P${node.id}`;\n            this.ctx.fillText(label, node.x, node.y - 1.2);\n        });\n    }\n    drawEdges(edges, color) {\n        edges.forEach(edge => {\n            const key = [Math.min(edge.from, edge.to), Math.max(edge.from, edge.to)].join('-');\n            let useColor = color;\n            if (this.drawnEdges.has(key) && this.drawnEdges.get(key) === color) {\n                useColor = this.getComplementaryColor(color);\n            }\n            this.ctx.strokeStyle = useColor;\n            this.ctx.lineWidth = 0.3;\n            const from = this.nodes[edge.from];\n            const to = this.nodes[edge.to];\n            this.ctx.beginPath();\n            this.ctx.moveTo(from.x, from.y);\n            this.ctx.lineTo(to.x, to.y);\n            this.ctx.stroke();\n            this.drawnEdges.set(key, useColor);\n        });\n    }   \n    getComplementaryColor(color) {\n        const comp = {\n            \"blue\": \"orange\",\n            \"green\": \"magenta\",\n            \"purple\": \"yellow\",\n            \"orange\": \"blue\"\n        };\n        return comp[color] || \"black\";\n    } \n    highlightOddNodes() {\n        this.oddNodes.forEach(id => {\n            const node = this.nodes[id];\n            this.ctx.beginPath();\n            this.ctx.arc(node.x, node.y, 0.8, 0, Math.PI * 2);\n            this.ctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n            this.ctx.fill();\n        });\n    }  \n    drawEulerEdge(index) {\n        if (index \u003C= 0 || index >= this.eulerianCircuit.length) return;\n        const from = this.nodes[this.eulerianCircuit[index - 1]];\n        const to = this.nodes[this.eulerianCircuit[index]];\n        this.drawEdges([{ from: this.eulerianCircuit[index - 1], to: this.eulerianCircuit[index] }], 'purple');\n    }   \n    drawTSPPath(index) {\n        if (index \u003C= 0 || index >= this.tspPath.length) return;\n        this.ctx.strokeStyle = 'orange';\n        this.ctx.lineWidth = 0.5;\n        this.ctx.beginPath();\n        const startNode = this.nodes[this.tspPath[0]];\n        this.ctx.moveTo(startNode.x, startNode.y);\n        for (let i = 1; i \u003C= index; i++) {\n            const node = this.nodes[this.tspPath[i]];\n            this.ctx.lineTo(node.x, node.y);\n        }\n        this.ctx.stroke();\n    }   \n    nextStep() {\n        if (this.phase === 'mst') {\n            const edge = this.mstEdges[this.currentMSTIndex];\n            if (edge) {\n                this.drawEdges([edge], 'blue');\n                this.currentMSTIndex++;\n            }\n            if (this.currentMSTIndex >= this.mstEdges.length) {\n                this.phase = 'odd';\n            }\n        }\n        else if (this.phase === 'odd') {\n            this.highlightOddNodes();\n            this.ctx.clearRect(0, 0, 100, 50);\n            this.drawnEdges.clear();\n            this.drawNodes(false);\n            this.highlightOddNodes();\n            this.phase = 'matching';\n        }\n        else if (this.phase === 'matching') {\n            const edge = this.matchingEdges[this.currentMatchingIndex];\n            if (edge) {\n                this.drawEdges([edge], 'green');\n                this.currentMatchingIndex++;\n            }\n            if (this.currentMatchingIndex >= this.matchingEdges.length) {\n                this.phase = 'euler';\n                this.currentEulerIndex = 1;\n            }\n        }\n        else if (this.phase === 'euler') {\n            this.drawEulerEdge(this.currentEulerIndex);\n            this.currentEulerIndex++;\n            if (this.currentEulerIndex >= this.eulerianCircuit.length) {\n                this.phase = 'eulerComplete';\n            }\n        }\n        else if (this.phase === 'eulerComplete') {\n            this.ctx.clearRect(0, 0, 100, 50);\n            this.drawnEdges.clear();\n            this.drawNodes(false);\n            this.highlightOddNodes();\n            this.phase = 'tsp';\n            this.currentTSPIndex = 1;\n        }\n        else if (this.phase === 'tsp') {\n            this.drawTSPPath(this.currentTSPIndex);\n            this.currentTSPIndex++;\n            if (this.currentTSPIndex >= this.tspPath.length) {\n                // Das Koordinatensystem neu zeichnen, wenn die Animation fertig ist\n                this.ctx.clearRect(0, 0, 100, 50);\n                this.drawNodes(true); // true als Parameter, um das Koordinatensystem zu zeichnen\n                this.drawTSPPath(this.tspPath.length - 1); // Finalen Pfad zeichnen\n                stopAutoAnimation();\n            }\n        }\n        updateInfoPanel();\n    }\n} \n// Globale Variablen für Christofides\nlet animation = new ChristofidesAnimation(document.getElementById('canvas'), 4, 0);\nlet autoIntervalId = null; \n// Christofides Funktionen\nfunction updateInfoPanel() {\n    const dataOutput = document.getElementById('dataOutput'); \n    // Aktuelle Phase\n    let html = \"\u003Cstrong>Aktuelle Phase:\u003C/strong> \";\n    const phases = {\n        'mst': 'Minimum Spanning Tree (MST)',\n        'odd': 'Identifikation ungerader Knoten',\n        'matching': 'Minimales perfektes Matching',\n        'euler': 'Euler-Kreis im Multigraphen',\n        'eulerComplete': 'Euler-Kreis komplett',\n        'tsp': 'Hamilton-Kreis durch Shortcutting'\n    };\n    html += phases[animation.phase] || animation.phase.toUpperCase();\n    html += \"\u003Chr>\";     \n    // Punkte\n    html += \"\u003Cstrong>Generierte Punkte:\u003C/strong>\u003Cbr>\";\n    html += animation.nodes.map(node => \"P\" + node.id + \": (\" + node.x + \", \" + node.y + \")\").join(\"\u003Cbr>\") + \"\u003Chr>\"; \n    // MST Kanten\n    html += \"\u003Cstrong>MST Kanten:\u003C/strong>\u003Cbr>\";\n    if (animation.currentMSTIndex === 0) {\n        html += \"Noch keine MST-Kanten gezeichnet\";\n    } else {\n        html += animation.mstEdges.slice(0, animation.currentMSTIndex)\n            .map(e => \"Von \" + e.from + \" nach \" + e.to + \" (Distanz: \" + e.distance.toFixed(2) + \")\")\n            .join(\"\u003Cbr>\");\n    }\n    html += \"\u003Chr>\";   \n    // Ungerade Knoten\n    html += \"\u003Cstrong>Ungerade Knoten:\u003C/strong>\u003Cbr>\";\n    if (animation.phase === 'mst' && animation.currentMSTIndex \u003C animation.mstEdges.length) {\n        html += \"Wird nach Fertigstellung des MST berechnet\";\n    } else {\n        html += animation.oddNodes.join(\", \");\n    }\n    html += \"\u003Chr>\"; \n    // Matching Kanten\n    html += \"\u003Cstrong>Matching Kanten:\u003C/strong>\u003Cbr>\";\n    if (animation.phase === 'mst' || animation.phase === 'odd') {\n        html += \"Wird nach Identifikation ungerader Knoten berechnet\";\n    } else if (animation.currentMatchingIndex === 0) {\n        html += \"Noch keine Matching-Kanten gezeichnet\";\n    } else {\n        html += animation.matchingEdges.slice(0, animation.currentMatchingIndex)\n            .map(e => \"Von \" + e.from + \" nach \" + e.to + \" (Distanz: \" + e.distance.toFixed(2) + \")\")\n            .join(\"\u003Cbr>\");\n    }\n    html += \"\u003Chr>\";  \n    // Eulerischer Pfad\n    html += \"\u003Cstrong>Eulerischer Pfad:\u003C/strong>\u003Cbr>\";\n    if (animation.phase === 'mst' || animation.phase === 'odd' || animation.phase === 'matching') {\n        html += \"Wird nach Abschluss des Matchings berechnet\";\n    } else if (animation.currentEulerIndex \u003C= 1 && animation.phase === 'euler') {\n        html += animation.eulerianCircuit[0];\n    } else {\n        html += animation.eulerianCircuit.slice(0, \n            animation.phase === 'eulerComplete' || animation.phase === 'tsp' ? \n            animation.eulerianCircuit.length : animation.currentEulerIndex).join(\" → \");\n    }\n    html += \"\u003Chr>\"; \n    // TSP Pfad\n    html += \"\u003Cstrong>TSP Pfad:\u003C/strong>\u003Cbr>\";\n    if (animation.phase !== 'tsp') {\n        html += \"Wird im letzten Schritt berechnet\";\n    } else if (animation.currentTSPIndex \u003C= 1) {\n        html += animation.tspPath[0];\n    } else {\n        let path = animation.tspPath.slice(0, animation.currentTSPIndex).join(\" → \");\n        if (animation.currentTSPIndex >= animation.tspPath.length) {\n            let totalLength = 0;\n            for (let i = 1; i \u003C animation.tspPath.length; i++) {\n                totalLength += animation.distance(animation.nodes[animation.tspPath[i-1]], animation.nodes[animation.tspPath[i]]);\n            }\n            path += \"\u003Cbr>\u003Cbr>\u003Cspan style='font-size: 1.2em;'>\u003Cstrong>Gesamtlänge: \" + totalLength.toFixed(2) + \"\u003C/strong>\u003C/span>\";\n        }\n        html += path;\n    }\n    dataOutput.innerHTML = html;\n}\nfunction nextStep() {\n    if (!animation) return;\n    animation.nextStep();\n}\nfunction startAutoAnimation() {\n    if (autoIntervalId) return;\n    const slider = document.getElementById('speedSlider');\n    const percent = parseInt(slider.value);\n    const speed = 1000 * (100 / percent);\n    autoIntervalId = setInterval(() => {\n        animation.nextStep();\n    }, speed);\n}\nfunction toggleAutoAnimation() {\n    if (autoIntervalId) {\n        stopAutoAnimation();\n    } else {\n        startAutoAnimation();\n    }\n}\nfunction stopAutoAnimation() {\n    if (autoIntervalId) {\n        clearInterval(autoIntervalId);\n        autoIntervalId = null;\n    }\n}\nfunction resetAnimation() {\n    stopAutoAnimation();\n    if (animation) {\n        animation.ctx.clearRect(0, 0, 100, 50);\n        animation.phase = 'mst';\n        animation.lastPhase = null;\n        animation.currentMSTIndex = 0;\n        animation.currentMatchingIndex = 0;\n        animation.currentEulerIndex = 1;\n        animation.currentTSPIndex = 1;\n        animation.drawnEdges.clear();\n        animation.drawNodes(true);\n        updateInfoPanel();\n    }\n}\nfunction updateNumPoints() {\n    stopAutoAnimation();\n    const numPoints = parseInt(document.getElementById('numPoints').value);\n    const startPoint = parseInt(document.getElementById('startPointChristofides').value);\n    animation = new ChristofidesAnimation(document.getElementById('canvas'), numPoints, startPoint);\n    animation.ctx.clearRect(0, 0, 100, 50);\n    animation.drawNodes(true);\n    updateInfoPanel();\n}\nfunction updateStartPoint() {\n    stopAutoAnimation();\n    const startPoint = parseInt(document.getElementById('startPointChristofides').value);       \n    // Prüfen ob der Startpunkt gültig ist\n    if (isNaN(startPoint) || startPoint \u003C 0 || startPoint >= animation.nodes.length) {\n        alert(`Bitte geben Sie einen gültigen Startpunkt zwischen 0 und ${animation.nodes.length - 1} ein.`);\n        return;\n    }      \n    // Speichern der aktuellen Knoten\n    const currentNodes = JSON.parse(JSON.stringify(animation.nodes));     \n    // Erstellen einer neuen Animation mit dem neuen Startpunkt aber den bestehenden Knoten\n    animation = new ChristofidesAnimation(document.getElementById('canvas'), animation.numNodes, startPoint);\n    animation.nodes = currentNodes; // Bestehende Knoten übernehmen     \n    // Berechnen der neuen Pfade mit dem aktuellen Startpunkt\n    animation.mstEdges = [];\n    animation.oddNodes = [];\n    animation.matchingEdges = [];\n    animation.eulerianCircuit = [];\n    animation.tspPath = [];\n    animation.drawnEdges.clear();      \n    // Neuberechnung basierend auf den vorhandenen Knoten\n    animation.computeMST();\n    animation.findOddNodes();\n    animation.computeMatching();\n    animation.computeEulerianCircuit();\n    animation.computeTSPPath();       \n    animation.ctx.clearRect(0, 0, 100, 50);\n    animation.drawNodes(true);\n    updateInfoPanel();\n}\nfunction toggleConstellation(selectedType) {\n    stopAutoAnimation();      \n    if (!selectedType) return; // Wenn keine Auswahl getroffen wurde        \n    animation = new ChristofidesAnimation(document.getElementById('canvas'), 0); // 0, wird überschrieben       \n    // Nutze die gemeinsame Funktion, um die Sternbildknoten zu erstellen\n    // Mit 0 als count werden alle Originalpunkte des Sternbildes verwendet\n    animation.nodes = createConstellationNodes(selectedType, 0);\n    animation.numNodes = animation.nodes.length;        \n    animation.mstEdges = [];\n    animation.oddNodes = [];\n    animation.matchingEdges = [];\n    animation.eulerianCircuit = [];\n    animation.tspPath = [];\n    animation.drawnEdges.clear();       \n    // Neuberechnung\n    animation.computeMST();\n    animation.findOddNodes();\n    animation.computeMatching();\n    animation.computeEulerianCircuit();\n    animation.computeTSPPath();       \n    animation.ctx.clearRect(0, 0, 100, 50);\n    animation.drawNodes(true);\n    updateInfoPanel();       \n    // Aktualisiere das Zahlenfeld mit der tatsächlichen Punktanzahl\n    document.getElementById('numPoints').value = animation.nodes.length;\n}\nfunction downloadGraph() {\n    const canvas = document.getElementById('canvas');\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = canvas.width;\n    tmpCanvas.height = canvas.height;\n    const tmpCtx = tmpCanvas.getContext('2d');\n    tmpCtx.fillStyle = 'white';\n    tmpCtx.fillRect(0, 0, tmpCanvas.width, tmpCanvas.height);\n    tmpCtx.drawImage(canvas, 0, 0);\n    const link = document.createElement('a');\n    link.download = 'graph.png';\n    link.href = tmpCanvas.toDataURL('image/png');\n    link.click();\n}\nfunction drawGraphData() {\n    const dataCanvas = document.getElementById('dataCanvas');\n    if (dataCanvas) {\n        const ctx = dataCanvas.getContext('2d');\n        ctx.clearRect(0, 0, dataCanvas.width, dataCanvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, dataCanvas.width, dataCanvas.height);\n        ctx.fillStyle = \"black\";\n        ctx.font = \"14px sans-serif\";\n        const lineHeight = 18;\n        let y = lineHeight;\n        ctx.fillText(\"Graph Daten:\", 10, y);\n        y += lineHeight * 1.5;\n        ctx.fillText(\"Knoten:\", 10, y);\n        y += lineHeight;\n        animation.nodes.forEach(node => {\n            ctx.fillText(`P${node.id}: (${node.x}, ${node.y})`, 10, y);\n            y += lineHeight;\n        });\n    } else {  \n        const canvas = document.getElementById('canvas');\n        const ctx = canvas.getContext('2d');\n        ctx.save();\n        const textBoxX = canvas.width - 250;\n        const textBoxY = 0;\n        const textBoxWidth = 250;\n        const textBoxHeight = canvas.height;\n        ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n        ctx.fillRect(textBoxX, textBoxY, textBoxWidth, textBoxHeight);\n        ctx.fillStyle = \"black\";\n        ctx.font = \"14px sans-serif\";\n        const lineHeight = 18;\n        let y = textBoxY + lineHeight;\n        ctx.fillText(\"Graph Daten:\", textBoxX + 10, y);\n        y += lineHeight * 1.5;\n        ctx.fillText(\"Knoten:\", textBoxX + 10, y);\n        y += lineHeight;\n        animation.nodes.forEach(node => {\n            ctx.fillText(`P${node.id}: (${node.x}, ${node.y})`, textBoxX + 10, y);\n            y += lineHeight;\n        });\n        ctx.restore();\n    }\n}\nfunction importNNPoints() {\n    if (typeof nnAnimation !== 'undefined' && nnAnimation && nnAnimation.nodes) {\n        stopAutoAnimation();\n        const numPoints = nnAnimation.nodes.length;\n        const startPoint = parseInt(document.getElementById('startPointChristofides').value);\n        animation = new ChristofidesAnimation(document.getElementById('canvas'), numPoints, startPoint);\n        animation.nodes = JSON.parse(JSON.stringify(nnAnimation.nodes));\n        animation.mstEdges = [];\n        animation.oddNodes = [];\n        animation.matchingEdges = [];\n        animation.eulerianCircuit = [];\n        animation.tspPath = [];\n        animation.phase = 'mst';\n        animation.lastPhase = null;\n        animation.currentMSTIndex = 0;\n        animation.currentMatchingIndex = 0;\n        animation.currentEulerIndex = 1;\n        animation.currentTSPIndex = 1;\n        animation.drawnEdges.clear();\n        animation.computeMST();\n        animation.findOddNodes();\n        animation.computeMatching();\n        animation.computeEulerianCircuit();\n        animation.computeTSPPath();\n        animation.ctx.clearRect(0, 0, 100, 50);\n        animation.drawNodes(true);\n        updateInfoPanel();\n    } else {\n        console.log(\"NN-Animation nicht gefunden oder keine Punkte verfügbar\");\n    }\n}\nfunction importBFPoints() {\n    if (typeof bfAnimation !== 'undefined' && bfAnimation && bfAnimation.nodes) {\n        stopAutoAnimation();\n        const numPoints = bfAnimation.nodes.length;\n        const startPoint = parseInt(document.getElementById('startPointChristofides').value);\n        animation = new ChristofidesAnimation(document.getElementById('canvas'), numPoints, startPoint);\n        animation.nodes = JSON.parse(JSON.stringify(bfAnimation.nodes));\n        animation.mstEdges = [];\n        animation.oddNodes = [];\n        animation.matchingEdges = [];\n        animation.eulerianCircuit = [];\n        animation.tspPath = [];\n        animation.phase = 'mst';\n        animation.lastPhase = null;\n        animation.currentMSTIndex = 0;\n        animation.currentMatchingIndex = 0;\n        animation.currentEulerIndex = 1;\n        animation.currentTSPIndex = 1;\n        animation.drawnEdges.clear();\n        animation.computeMST();\n        animation.findOddNodes();\n        animation.computeMatching();\n        animation.computeEulerianCircuit();\n        animation.computeTSPPath();\n        animation.ctx.clearRect(0, 0, 100, 50);\n        animation.drawNodes(true);\n        updateInfoPanel();\n    } else {\n        console.log(\"BF-Animation nicht gefunden oder keine Punkte verfügbar\");\n    }\n}\n// Event-Listener\ndocument.getElementById('speedSlider').addEventListener('input', function() {\n    if (autoIntervalId) {\n        clearInterval(autoIntervalId);\n        const percent = parseInt(this.value);\n        const speed = 1000 * (100 / percent);\n        autoIntervalId = setInterval(() => {\n            animation.nextStep();\n        }, speed);\n    }\n});\n// ================ NEAREST NEIGHBOR ALGORITHMUS ================ \n// Nearest Neighbor Animation Klasse\nclass NearestNeighborAnimation {\n    constructor(canvas, numNodes = 4, startNode = 0) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.ctx.scale(canvas.width / 50, canvas.height / 50);\n        this.numNodes = numNodes;\n        this.startNode = startNode;\n        this.nodes = [];\n        this.nnPath = [];\n        this.selectionSteps = []; \n        this.currentPathIndex = 0;    \n        this.init();\n        this.drawNodes(true);\n    }    \n    drawCoordinateSystem() {\n        this.ctx.strokeStyle = getGridColor();\n        this.ctx.lineWidth = 0.1;   \n        for (let x = 0; x \u003C= 100; x += 10) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(x, 0);\n            this.ctx.lineTo(x, 50);\n            this.ctx.stroke();\n        }  \n        for (let y = 0; y \u003C= 50; y += 5) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(0, y);\n            this.ctx.lineTo(100, y);\n            this.ctx.stroke();\n        }\n    }     \n    init() {\n        this.generateNodes();\n        this.computeNearestNeighborPath();\n    }      \n    generateNodes() {\n        for (let i = 0; i \u003C this.numNodes; i++) {\n            this.nodes.push({\n                x: Math.floor(Math.random() * (40 - 5 + 1)) + 5,\n                y: Math.floor(Math.random() * (40 - 5 + 1)) + 5,\n                id: i\n            });\n        }\n    }     \n    distance(a, b) {\n        return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n    }       \n    computeNearestNeighborPath() {\n        const visited = new Set([this.startNode]);\n        this.nnPath = [this.startNode]; \n        this.selectionSteps = [];\n        let current = this.startNode;\n        while (visited.size \u003C this.numNodes) {\n            let nearest = null;\n            let minDistance = Infinity;\n            const currentStep = {\n                current: current,\n                candidates: []\n            };\n            for (let i = 0; i \u003C this.numNodes; i++) {\n                if (!visited.has(i)) {\n                    const dist = this.distance(this.nodes[current], this.nodes[i]);\n                    currentStep.candidates.push({\n                        node: i,\n                        distance: dist,\n                        isNearest: false\n                    });\n                    if (dist \u003C minDistance) {\n                        minDistance = dist;\n                        nearest = i;\n                    }\n                }\n            }\n            const nearestCandidate = currentStep.candidates.find(c => c.node === nearest);\n            if (nearestCandidate) {\n                nearestCandidate.isNearest = true;\n            }\n            this.selectionSteps.push(currentStep);\n            current = nearest;\n            visited.add(current);\n            this.nnPath.push(current);\n        } \n        this.nnPath.push(this.startNode);\n    }        \n    drawNodes(showCoordinateSystem = false) {\n        if (showCoordinateSystem) {\n            this.drawCoordinateSystem();\n        }   \n        this.nodes.forEach(node => {\n            this.ctx.beginPath();\n            this.ctx.arc(node.x, node.y, 0.5, 0, Math.PI * 2);\n            this.ctx.fillStyle = getPointColor();\n            this.ctx.fill();\n            this.ctx.font = \"1.5px sans-serif\";\n            this.ctx.fillStyle = getTextColor();\n            this.ctx.textAlign = \"center\";\n            const label = `P${node.id}`;\n            this.ctx.fillText(label, node.x, node.y - 1.2);\n        });\n    }     \n    drawPath(steps) {\n        if (steps \u003C= 0) return;   \n        const pathSegments = Math.min(steps, this.nnPath.length - 1);\n        this.ctx.strokeStyle = 'red';\n        this.ctx.lineWidth = 0.5;\n        this.ctx.beginPath();  \n        const startNode = this.nodes[this.nnPath[0]];\n        this.ctx.moveTo(startNode.x, startNode.y);  \n        for (let i = 1; i \u003C= pathSegments; i++) {\n            const node = this.nodes[this.nnPath[i]];\n            this.ctx.lineTo(node.x, node.y);\n        }  \n        this.ctx.stroke();\n    }     \n    drawSelectionStep(stepIndex) {\n        if (stepIndex \u003C 0 || stepIndex >= this.selectionSteps.length) return;\n        const step = this.selectionSteps[stepIndex];\n        const currentNode = this.nodes[step.current];\n        this.ctx.beginPath();\n        this.ctx.arc(currentNode.x, currentNode.y, 0.8, 0, Math.PI * 2);\n        this.ctx.fillStyle = 'rgba(0, 128, 255, 0.6)';\n        this.ctx.fill();\n        step.candidates.forEach(candidate => {\n            const candidateNode = this.nodes[candidate.node];\n            this.ctx.strokeStyle = candidate.isNearest ? 'green' : 'blue';\n            this.ctx.lineWidth = candidate.isNearest ? 0.3 : 0.1;\n            this.ctx.setLineDash(candidate.isNearest ? [] : [0.2, 0.2]);\n            this.ctx.beginPath();\n            this.ctx.moveTo(currentNode.x, currentNode.y);\n            this.ctx.lineTo(candidateNode.x, candidateNode.y);\n            this.ctx.stroke();\n            this.ctx.setLineDash([]);\n            if (candidate.isNearest) {\n                this.ctx.beginPath();\n                this.ctx.arc(candidateNode.x, candidateNode.y, 0.8, 0, Math.PI * 2);\n                this.ctx.fillStyle = 'rgba(0, 255, 0, 0.6)';\n                this.ctx.fill();\n            }\n        });\n    }      \n    nextStep() {\n        this.ctx.clearRect(0, 0, 100, 50);\n        this.drawNodes(true);\n        if (this.currentPathIndex \u003C this.selectionSteps.length) {\n            this.drawSelectionStep(this.currentPathIndex);\n            this.drawPath(this.currentPathIndex);\n            this.currentPathIndex++;\n        } else if (this.currentPathIndex === this.selectionSteps.length) {\n            this.drawPath(this.nnPath.length - 1);\n            this.currentPathIndex++;\n        } else {\n            nnStopAutoAnimation();\n        }\n    }   \n    importChristofidesPoints() {\n        if (typeof animation !== 'undefined' && animation && animation.nodes) {\n            this.nodes = JSON.parse(JSON.stringify(animation.nodes));\n            this.numNodes = this.nodes.length;\n            this.computeNearestNeighborPath();\n            this.ctx.clearRect(0, 0, 100, 50);\n            this.currentPathIndex = 0;\n            this.drawNodes(true);\n        }\n    }\n    importBFPoints() {\n        if (typeof bfAnimation !== 'undefined' && bfAnimation && bfAnimation.nodes) {\n            this.nodes = JSON.parse(JSON.stringify(bfAnimation.nodes));\n            this.numNodes = this.nodes.length;\n            this.computeNearestNeighborPath();\n            this.ctx.clearRect(0, 0, 100, 50);\n            this.currentPathIndex = 0;\n            this.drawNodes(true);\n        }\n    }\n} \n// Globale Variablen für Nearest Neighbor\nlet nnAnimation = null;\nlet nnAutoIntervalId = null;   \n// Nearest Neighbor Funktionen\nfunction nnUpdateInfoPanel() {\n    const dataOutput = document.getElementById('nnDataOutput');\n    const stepDropdown = document.getElementById('nnStepDropdown');\n    const stepDetails = document.getElementById('nnStepDetails');\n    const fullTable = document.getElementById('nnFullTable');       \n    if (!dataOutput || !stepDropdown || !nnAnimation) return;        \n    let html = \"\u003Cstrong>Algorithmus:\u003C/strong> Nearest Neighbor\u003Cbr>\";\n    html += \"\u003Chr>\";\n    html += \"\u003Cstrong>Punkte:\u003C/strong>\u003Cbr>\";\n    html += nnAnimation.nodes.map(node => \"P\" + node.id + \": (\" + node.x + \", \" + node.y + \")\").join(\"\u003Cbr>\");\n    html += \"\u003Chr>\";       \n    const pathLength = Math.min(nnAnimation.currentPathIndex + 1, nnAnimation.nnPath.length);\n    let path = nnAnimation.nnPath.slice(0, pathLength).map(node => \"P\" + node).join(\" → \");       \n    if (nnAnimation.currentPathIndex >= nnAnimation.selectionSteps.length) {\n        let totalLength = 0;\n        for (let i = 1; i \u003C nnAnimation.nnPath.length; i++) {\n            totalLength += nnAnimation.distance(\n                nnAnimation.nodes[nnAnimation.nnPath[i - 1]], \n                nnAnimation.nodes[nnAnimation.nnPath[i]]\n            );\n        }\n        path += `\u003Cbr>\u003Cbr>\u003Cspan style='font-size: 1.2em;'>\u003Cstrong>Gesamtlänge: ${totalLength.toFixed(2)}\u003C/strong>\u003C/span>`;\n        // Anzeige des aktuellen Startpunkts\n        path += `\u003Cbr>\u003Cstrong>Aktueller Startpunkt:\u003C/strong> P${nnAnimation.startNode}`;\n    }       \n    html += `\u003Cstrong>Aktueller Pfad:\u003C/strong>\u003Cbr>${path}`;\n    dataOutput.innerHTML = html;        \n    stepDropdown.innerHTML = '\u003Coption value=\"\">Schritt auswählen...\u003C/option>';\n    nnAnimation.selectionSteps.forEach((step, stepIndex) => {\n        stepDropdown.innerHTML += `\u003Coption value=\"${stepIndex}\">Schritt ${stepIndex + 1}: P${step.current}\u003C/option>`;\n    });        \n    stepDetails.innerHTML = \"\";        \n    fullTable.style.display = \"none\";\n    fullTable.innerHTML = \"\";\n    \n    // Manuelle Anwendung der Textfarbe für nnDataOutput im Dark Mode\n    if (isDarkMode()) {\n        dataOutput.style.color = getTextColor();\n        const elements = dataOutput.querySelectorAll('*');\n        elements.forEach(el => {\n            if (!el.style.color || el.style.color === \"\") {\n                el.style.color = getTextColor();\n            }\n        });\n    }\n}\nfunction nnShowStepDetails() {\n    const stepDropdown = document.getElementById('nnStepDropdown');\n    const stepDetails = document.getElementById('nnStepDetails');\n    if (!stepDropdown || !stepDetails || !nnAnimation) return;\n    const stepIndex = parseInt(stepDropdown.value);\n    if (isNaN(stepIndex) || stepIndex \u003C 0 || stepIndex >= nnAnimation.selectionSteps.length) {\n        stepDetails.innerHTML = \"\";\n        return;\n    }\n    const step = nnAnimation.selectionSteps[stepIndex];\n    let html = `\u003Cstrong>Schritt ${stepIndex + 1}:\u003C/strong>\u003Cbr>`;\n    html += `\u003Cstrong>Aktueller Knoten:\u003C/strong> P${step.current}\u003Cbr>`;\n    html += \"\u003Cstrong>Kandidaten:\u003C/strong>\u003Cbr>\";\n    html += \"\u003Cul>\";\n    step.candidates.forEach(candidate => {\n        html += `\u003Cli>P${candidate.node}: Entfernung = ${candidate.distance.toFixed(2)} ${\n            candidate.isNearest ? \"(Ausgewählt)\" : \"\"\n        }\u003C/li>`;\n    });\n    html += \"\u003C/ul>\";\n    stepDetails.innerHTML = html;\n}\nfunction nnShowFullTable() {\n    const fullTableDiv = document.getElementById('nnFullTable');\n    if (!fullTableDiv || !nnAnimation) return;\n    let html = \"\u003Ch4>\u003C/h4>\";\n    html += \"\u003Ctable class='selection-table' style='width: 100%; border-collapse: collapse;'>\";\n    html += \"\u003Ctr>\u003Cth>Schritt\u003C/th>\u003Cth>Aktueller Knoten\u003C/th>\u003Cth>Kandidat\u003C/th>\u003Cth>Entfernung\u003C/th>\u003Cth>Ausgewählt\u003C/th>\u003C/tr>\";   \n    nnAnimation.selectionSteps.forEach((step, stepIndex) => {\n        step.candidates.forEach(candidate => {\n            html += candidate.isNearest ? \"\u003Ctr class='selected'>\" : \"\u003Ctr>\";\n            html += `\u003Ctd style=\"border: 1px solid #ddd; padding: 4px; text-align: center;\">${stepIndex + 1}\u003C/td>`;\n            html += `\u003Ctd style=\"border: 1px solid #ddd; padding: 4px; text-align: center;\">P${step.current}\u003C/td>`;\n            html += `\u003Ctd style=\"border: 1px solid #ddd; padding: 4px; text-align: center;\">P${candidate.node}\u003C/td>`;\n            html += `\u003Ctd style=\"border: 1px solid #ddd; padding: 4px; text-align: center;\">${candidate.distance.toFixed(2)}\u003C/td>`;\n            html += `\u003Ctd style=\"border: 1px solid #ddd; padding: 4px; text-align: center;\">${candidate.isNearest ? \"✓\" : \"\"}\u003C/td>`;\n            html += \"\u003C/tr>\";\n        });\n    });  \n    html += \"\u003C/table>\";      \n    fullTableDiv.innerHTML = html;\n    fullTableDiv.style.display = 'block';\n}\nfunction nnToggleFullTable() {\n    const fullTableDiv = document.getElementById('nnFullTable');\n    if (!fullTableDiv) return;\n    if (fullTableDiv.style.display === 'none' || !fullTableDiv.innerHTML.trim()) {\n        nnShowFullTable();\n    } else {\n        fullTableDiv.style.display = 'none';\n    }\n}\nfunction nnNextStep() {\n    if (!nnAnimation) return;   \n    if (nnAnimation.currentPathIndex > nnAnimation.selectionSteps.length) {\n        nnAnimation.ctx.clearRect(0, 0, 100, 50);\n        nnAnimation.drawNodes(true);\n        nnAnimation.drawPath(nnAnimation.nnPath.length - 1);\n        return;\n    }  \n    nnAnimation.nextStep();   \n    nnUpdateInfoPanel();     \n    if (nnAnimation.currentPathIndex > nnAnimation.selectionSteps.length) {\n        nnAnimation.ctx.clearRect(0, 0, 100, 50);\n        nnAnimation.drawNodes(true);\n        nnAnimation.drawPath(nnAnimation.nnPath.length - 1);       \n        let totalLength = 0;\n        for (let i = 1; i \u003C nnAnimation.nnPath.length; i++) {\n            totalLength += nnAnimation.distance(\n                nnAnimation.nodes[nnAnimation.nnPath[i - 1]], \n                nnAnimation.nodes[nnAnimation.nnPath[i]]\n            );\n        }    \n        nnUpdateInfoPanel();        \n        nnStopAutoAnimation();\n    }\n}\nfunction nnResetAnimation() {\n    nnStopAutoAnimation();\n    if (nnAnimation) {\n        nnAnimation.ctx.clearRect(0, 0, 100, 50);\n        nnAnimation.currentPathIndex = 0;\n        nnAnimation.drawNodes(true);\n        nnUpdateInfoPanel();\n    }\n}\nfunction nnToggleAutoAnimation() {\n    if (nnAutoIntervalId) {\n        nnStopAutoAnimation();\n    } else {\n        nnStartAutoAnimation();\n    }\n}\nfunction nnStartAutoAnimation() {\n    if (nnAutoIntervalId) return;\n    const slider = document.getElementById('nnSpeedSlider');\n    if (!slider) return;\n    const percent = parseInt(slider.value);\n    const speed = 1000 * (100 / percent);\n    nnAutoIntervalId = setInterval(() => {\n        nnNextStep();\n    }, speed);\n}\nfunction nnStopAutoAnimation() {\n    if (nnAutoIntervalId) {\n        clearInterval(nnAutoIntervalId);\n        nnAutoIntervalId = null;\n    }\n}\nfunction nnUpdateNumPoints() {\n    nnStopAutoAnimation();\n    const numPoints = parseInt(document.getElementById('nnNumPoints').value);    \n    if (isNaN(numPoints) || numPoints \u003C 3 || numPoints > 25) {\n        alert(\"Bitte geben Sie eine gültige Anzahl von Punkten zwischen 3 und 25 ein.\");\n        return;\n    }       \n    const startPoint = parseInt(document.getElementById('nnStartPoint').value);\n    nnAnimation = new NearestNeighborAnimation(document.getElementById('nnCanvas'), numPoints, startPoint);    \n    nnAnimation.ctx.clearRect(0, 0, 100, 50);\n    nnAnimation.drawNodes(true);     \n    nnUpdateInfoPanel();\n}\nfunction nnUpdateStartPoint() {\n    nnStopAutoAnimation();\n    const startPoint = parseInt(document.getElementById('nnStartPoint').value);    \n    // Prüfen ob der Startpunkt gültig ist\n    if (isNaN(startPoint) || startPoint \u003C 0 || startPoint >= nnAnimation.nodes.length) {\n        alert(`Bitte geben Sie einen gültigen Startpunkt zwischen 0 und ${nnAnimation.nodes.length - 1} ein.`);\n        return;\n    } \n    // Speichern der aktuellen Knoten\n    const currentNodes = JSON.parse(JSON.stringify(nnAnimation.nodes));     \n    // Erstellen einer neuen Animation mit dem neuen Startpunkt aber den bestehenden Knoten\n    nnAnimation = new NearestNeighborAnimation(document.getElementById('nnCanvas'), nnAnimation.numNodes, startPoint);\n    nnAnimation.nodes = currentNodes; // Bestehende Knoten übernehmen  \n    // Neuberechnung des Nearest-Neighbor-Pfades mit dem neuen Startpunkt\n    nnAnimation.computeNearestNeighborPath(); \n    nnAnimation.ctx.clearRect(0, 0, 100, 50);\n    nnAnimation.drawNodes(true);\n    nnUpdateInfoPanel();\n}\nfunction nnImportPoints() {\n    if (typeof animation !== 'undefined' && animation && animation.nodes) {\n        if (nnAnimation) {\n            nnAnimation.importChristofidesPoints();\n            nnResetAnimation();\n            nnUpdateInfoPanel();\n        }\n    } else {\n        console.log(\"Christofides-Animation nicht gefunden oder keine Punkte verfügbar\");\n    }\n}\nfunction nnImportBFPoints() {\n    if (typeof bfAnimation !== 'undefined' && bfAnimation && bfAnimation.nodes) {\n        if (nnAnimation) {\n            nnAnimation.importBFPoints();\n            nnResetAnimation();\n            nnUpdateInfoPanel();\n        }\n    } else {\n        console.log(\"BF-Animation nicht gefunden oder keine Punkte verfügbar\");\n    }\n}\nfunction nnToggleConstellation(selectedType) {\n    console.log(\"nnToggleConstellation aufgerufen mit:\", selectedType);\n    nnStopAutoAnimation();    \n    if (!selectedType) {\n        console.log(\"Kein Sternenbild ausgewählt\");\n        return;\n    } \n    try {\n        const startPoint = parseInt(document.getElementById('nnStartPoint').value);\n        nnAnimation = new NearestNeighborAnimation(document.getElementById('nnCanvas'), 0, startPoint);\n        console.log(\"Animation erstellt\");\n        nnAnimation.nodes = createConstellationNodes(selectedType, 0);\n        console.log(\"Knoten erzeugt:\", nnAnimation.nodes.length);\n        nnAnimation.numNodes = nnAnimation.nodes.length;\n        nnAnimation.computeNearestNeighborPath();\n        console.log(\"Pfad berechnet\"); \n        nnAnimation.currentPathIndex = 0;\n        nnAnimation.ctx.clearRect(0, 0, 100, 50);\n        nnAnimation.drawNodes(true); \n        nnUpdateInfoPanel();\n        console.log(\"UI aktualisiert\");  \n        document.getElementById('nnNumPoints').value = nnAnimation.nodes.length;\n    } catch (error) {\n        console.error(\"Fehler in nnToggleConstellation:\", error);\n    }\n}\nfunction nnGenerateRandomPoints() {\n    nnStopAutoAnimation();  \n    // Die Anzahl der Punkte aus dem Eingabefeld lesen\n    const numPoints = parseInt(document.getElementById('nnNumPoints').value);\n    // Startpunkt aus dem Eingabefeld lesen\n    const startPoint = parseInt(document.getElementById('nnStartPoint').value);  \n    // Prüfen ob die Anzahl der Punkte gültig ist\n    if (isNaN(numPoints) || numPoints \u003C 3 || numPoints > 25) {\n        alert(\"Bitte geben Sie eine gültige Anzahl von Punkten zwischen 3 und 25 ein.\");\n        return;\n    }   \n    // Neue Animation mit den angegebenen Parametern erstellen\n    nnAnimation = new NearestNeighborAnimation(document.getElementById('nnCanvas'), numPoints, startPoint); \n    // Canvas löschen und neu zeichnen\n    nnAnimation.ctx.clearRect(0, 0, 100, 50);\n    nnAnimation.drawNodes(true);  \n    // Infopanel aktualisieren\n    nnUpdateInfoPanel();\n}\nfunction nnDownloadGraph() {\n    const canvas = document.getElementById('nnCanvas');\n    if (!canvas) return;  \n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = canvas.width;\n    tmpCanvas.height = canvas.height;\n    const tmpCtx = tmpCanvas.getContext('2d'); \n    tmpCtx.fillStyle = 'white';\n    tmpCtx.fillRect(0, 0, tmpCanvas.width, tmpCanvas.height);  \n    tmpCtx.drawImage(canvas, 0, 0);  \n    const link = document.createElement('a');\n    link.download = 'nearest-neighbor-graph.png';\n    link.href = tmpCanvas.toDataURL('image/png');\n    link.click();\n} \nfunction nnFindBestStartPoint() {\n    if (!nnAnimation || !nnAnimation.nodes || nnAnimation.nodes.length \u003C 2) return; \n    nnStopAutoAnimation();  \n    // Speichern der aktuellen Knoten\n    const currentNodes = JSON.parse(JSON.stringify(nnAnimation.nodes));\n    const numNodes = currentNodes.length;   \n    // Für jeden möglichen Startpunkt die Tourlänge berechnen\n    let bestStartPoint = 0;\n    let shortestDistance = Infinity;\n    const results = [];   \n    for (let startPoint = 0; startPoint \u003C numNodes; startPoint++) {\n        // Nearest Neighbor Pfad für diesen Startpunkt berechnen\n        const visited = new Set([startPoint]);\n        const path = [startPoint];\n        let current = startPoint;       \n        while (visited.size \u003C numNodes) {\n            let nearest = null;\n            let minDistance = Infinity;\n            \n            for (let i = 0; i \u003C numNodes; i++) {\n                if (!visited.has(i)) {\n                    const dist = nnAnimation.distance(currentNodes[current], currentNodes[i]);\n                    if (dist \u003C minDistance) {\n                        minDistance = dist;\n                        nearest = i;\n                    }\n                }\n            }\n            \n            current = nearest;\n            visited.add(current);\n            path.push(current);\n        }\n        \n        // Gesamtpfadlänge berechnen (einschließlich Rückweg zum Startpunkt)\n        let totalDistance = 0;\n        for (let i = 0; i \u003C path.length - 1; i++) {\n            totalDistance += nnAnimation.distance(\n                currentNodes[path[i]], \n                currentNodes[path[i + 1]]\n            );\n        }\n        // Rückweg zum Startpunkt\n        totalDistance += nnAnimation.distance(\n            currentNodes[path[path.length - 1]], \n            currentNodes[startPoint]\n        );\n        \n        // Pfad und Distanz speichern\n        results.push({\n            startPoint: startPoint,\n            distance: totalDistance,\n            path: [...path, startPoint]\n        });\n        \n        // Prüfen, ob dieser Startpunkt besser ist\n        if (totalDistance \u003C shortestDistance) {\n            shortestDistance = totalDistance;\n            bestStartPoint = startPoint;\n        }\n    }\n    \n    // Sortiere die Ergebnisse nach Pfadlänge\n    results.sort((a, b) => a.distance - b.distance);\n    \n    // Theme-abhängige Farben\n    const isDark = isDarkMode();\n    const bgColor = isDark ? \"#1e3b1e\" : \"#e8ffe8\";\n    const borderColor = isDark ? \"#4CAF50\" : \"#4CAF50\";\n    const textColor = isDark ? \"#fff\" : \"#2E7D32\";\n    const tableHeaderBgColor = isDark ? \"#2a472a\" : \"#d4ffd4\";\n    \n    // Ergebnisanzeige im Panel\n    const dataOutput = document.getElementById('nnDataOutput');\n    if (dataOutput) {\n        let resultHTML = `\n            \u003Cdiv style=\"margin: 15px 0; padding: 15px; background-color: ${bgColor}; border: 2px solid ${borderColor}; border-radius: 5px;\">\n                \u003Ch4 style=\"margin-top: 0; color: ${textColor};\">Optimaler Startpunkt gefunden!\u003C/h4>\n                \u003Cp>\u003Cstrong>Bester Startpunkt:\u003C/strong> P${bestStartPoint}\u003C/p>\n                \u003Cp>\u003Cstrong>Pfadlänge:\u003C/strong> ${shortestDistance.toFixed(2)}\u003C/p>\n                \u003Cp>\u003Cstrong>Optimaler Pfad:\u003C/strong> ${results[0].path.map(p => `P${p}`).join(' → ')}\u003C/p>\n                \u003Chr>\n                \u003Ch5>Alle Startpunkte im Vergleich:\u003C/h5>\n                \u003Ctable class=\"selection-table\" style=\"width: 100%; margin-top: 10px; ${isDark ? 'color: ' + textColor + ';' : ''}\">\n                    \u003Ctr>\n                        \u003Cth>Rang\u003C/th>\n                        \u003Cth>Startpunkt\u003C/th>\n                        \u003Cth>Pfadlänge\u003C/th>\n                        \u003Cth>Vergleich zum Optimum\u003C/th>\n                    \u003C/tr>\n        `;\n        \n        // Füge alle Ergebnisse in die Tabelle ein\n        results.forEach((result, index) => {\n            const difference = ((result.distance / shortestDistance - 1) * 100).toFixed(2);\n            const rowClass = result.startPoint === bestStartPoint ? 'selected' : '';\n            const rowStyle = result.startPoint === bestStartPoint && isDark ? \n                `background-color: ${tableHeaderBgColor};` : '';\n            \n            resultHTML += `\n                \u003Ctr class=\"${rowClass}\" style=\"${rowStyle}\">\n                    \u003Ctd style=\"text-align: center;\">${index + 1}\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">P${result.startPoint}\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">${result.distance.toFixed(2)}\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">${index === 0 ? 'Optimum' : '+' + difference + '%'}\u003C/td>\n                \u003C/tr>\n            `;\n        });\n        \n        resultHTML += `\n                \u003C/table>\n            \u003C/div>\n        `;\n        \n        dataOutput.innerHTML = resultHTML;\n        \n        // Sicherstellen, dass die Textfarbe im Dark Mode korrekt ist\n        if (isDark) {\n            const resultDiv = dataOutput.querySelector('div');\n            if (resultDiv) {\n                // Alle Text-Elemente in der Tabelle auf die richtige Farbe setzen\n                const textElements = resultDiv.querySelectorAll('p, td, th, h5');\n                textElements.forEach(el => {\n                    if (!el.style.color) {\n                        el.style.color = getTextColor();\n                    }\n                });\n            }\n        }\n    }\n    \n    // Besten Startpunkt in das Eingabefeld setzen\n    document.getElementById('nnStartPoint').value = bestStartPoint;\n    \n    // Animation mit dem besten Startpunkt neu starten\n    nnAnimation = new NearestNeighborAnimation(document.getElementById('nnCanvas'), numNodes, bestStartPoint);\n    nnAnimation.nodes = currentNodes; // Bestehende Knoten übernehmen\n    nnAnimation.computeNearestNeighborPath();\n    nnAnimation.ctx.clearRect(0, 0, 100, 50);\n    nnAnimation.drawNodes(true);\n    nnAnimation.drawPath(nnAnimation.nnPath.length - 1); // Zeige sofort den kompletten optimalen Pfad\n    \n    // Aktualisiere den Fortschritt der Animation, um den vollständigen Pfad anzuzeigen\n    nnAnimation.currentPathIndex = nnAnimation.selectionSteps.length + 1;\n    \n    // Erneut das Theme anwenden für sicheren Dark Mode-Support\n    updateInfoPanelsStyle();\n}\n// Event-Listener\ndocument.getElementById('nnSpeedSlider')?.addEventListener('input', function() {\n    if (nnAutoIntervalId) {\n        clearInterval(nnAutoIntervalId);\n        const percent = parseInt(this.value);\n        const speed = 1000 * (100 / percent);\n        nnAutoIntervalId = setInterval(() => {\n            nnNextStep();\n        }, speed);\n    }\n});\n// Initialisierung beim Laden der Seite\ndocument.addEventListener('DOMContentLoaded', function() {\n    const canvas = document.getElementById('nnCanvas');\n    if (canvas) {\n        nnAnimation = new NearestNeighborAnimation(canvas, 4, 0);\n        nnAnimation.drawNodes(true);\n        nnUpdateInfoPanel();\n    }\n    \n    // Brute Force Animation initialisieren und Info-Panel aktualisieren\n    const bfCanvas = document.getElementById('bfCanvas');\n    if (bfCanvas) {\n        if (bfAnimation) {\n            bfAnimation.updateInfoPanel();\n        } else {\n            bfAnimation = new BruteForceAnimation(bfCanvas, 4, 0);\n            bfAnimation.updateInfoPanel();\n        }\n    }\n});\n// ================ BRUTE FORCE ALGORITHMUS ================\n// Brute Force Animation Klasse\nclass BruteForceAnimation {\n    constructor(canvas, numNodes = 4, startNode = 0) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.ctx.scale(canvas.width / 50, canvas.height / 50);\n        this.numNodes = numNodes;\n        this.startNode = startNode;\n        this.nodes = [];\n        this.permutations = [];\n        this.currentPermutationIndex = 0;\n        this.shortestPath = null;\n        this.shortestDistance = Infinity;\n        this.init();\n        this.drawNodes(true);\n        this.updateInfoPanel(); // Info-Panel beim Initialisieren aktualisieren\n    }\n    drawCoordinateSystem() {\n        this.ctx.strokeStyle = getGridColor();\n        this.ctx.lineWidth = 0.1;\n        for (let x = 0; x \u003C= 50; x += 5) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(x, 0);\n            this.ctx.lineTo(x, 50);\n            this.ctx.stroke();\n        }\n        for (let y = 0; y \u003C= 50; y += 5) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(0, y);\n            this.ctx.lineTo(50, y);\n            this.ctx.stroke();\n        }\n    }\n    init() {\n        this.generateNodes();\n        this.permutations = this.generatePermutations([...Array(this.numNodes).keys()]);\n    }\n    generateNodes() {\n        for (let i = 0; i \u003C this.numNodes; i++) {\n            this.nodes.push({\n                x: Math.floor(Math.random() * 40) + 5,\n                y: Math.floor(Math.random() * 40) + 5,\n                id: i\n            });\n        }\n    }\n    generatePermutations(array) {\n        // Wenn ein Startknoten festgelegt ist, generieren wir nur Permutationen, die mit dem Startknoten beginnen\n        const permutations = [];     \n        // Wir fixieren den Startknoten\n        const startNode = this.startNode;       \n        // Entferne den Startknoten aus dem Array\n        const remainingNodes = array.filter(node => node !== startNode);         \n        // Generiere alle Permutationen für die verbleibenden Knoten\n        if (remainingNodes.length === 0) {\n            return [[startNode]];\n        } else if (remainingNodes.length === 1) {\n            return [[startNode, remainingNodes[0]]];\n        }        \n        const restPerms = this.generateAllPermutations(remainingNodes);         \n        // Füge den Startknoten am Anfang jeder Permutation hinzu\n        for (const perm of restPerms) {\n            permutations.push([startNode, ...perm]);\n        }        \n        return permutations;\n    }\n       // Hilfsfunktion zum Generieren aller Permutationen ohne festen Startpunkt\n    generateAllPermutations(array) {\n        if (array.length === 1) return [array];\n        const perms = [];\n        for (let i = 0; i \u003C array.length; i++) {\n            const rest = [...array.slice(0, i), ...array.slice(i + 1)];\n            const restPerms = this.generateAllPermutations(rest);\n            for (const perm of restPerms) {\n                perms.push([array[i], ...perm]);\n            }\n        }\n        return perms;\n    }\n    distance(a, b) {\n        return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n    }\n    calculatePathDistance(path) {\n        let distance = 0;\n        for (let i = 0; i \u003C path.length - 1; i++) {\n            distance += this.distance(this.nodes[path[i]], this.nodes[path[i + 1]]);\n        }\n        distance += this.distance(this.nodes[path[path.length - 1]], this.nodes[path[0]]);\n        return distance;\n    }\n    drawNodes(showCoordinateSystem = false) {\n        if (showCoordinateSystem) {\n            this.drawCoordinateSystem();\n        }\n        this.nodes.forEach(node => {\n            this.ctx.beginPath();\n            this.ctx.arc(node.x, node.y, 0.5, 0, Math.PI * 2);\n            this.ctx.fillStyle = getPointColor();\n            this.ctx.fill();\n            this.ctx.font = \"1.5px sans-serif\";\n            this.ctx.fillStyle = getTextColor();\n            this.ctx.textAlign = \"center\";\n            const label = `P${node.id}`;\n            this.ctx.fillText(label, node.x, node.y - 1.2);\n        });\n    }\n    drawPath(path, color = 'blue') {\n        this.ctx.strokeStyle = color;\n        this.ctx.lineWidth = 0.3;\n        this.ctx.beginPath();\n        const startNode = this.nodes[path[0]];\n        this.ctx.moveTo(startNode.x, startNode.y);\n        for (let i = 1; i \u003C path.length; i++) {\n            const node = this.nodes[path[i]];\n            this.ctx.lineTo(node.x, node.y);\n        }\n        this.ctx.lineTo(startNode.x, startNode.y);\n        this.ctx.stroke();\n    }\n    nextStep() {\n        if (this.currentPermutationIndex >= this.permutations.length) {\n            // Wenn alle Permutationen getestet wurden, lösche alle roten Geraden\n            this.ctx.clearRect(0, 0, 50, 50);\n            this.drawNodes(true);\n            // Zeichne nur den kürzesten Pfad in grün\n            if (this.shortestPath) {\n                this.drawPath(this.shortestPath, 'green');\n            }            \n            // Die Punkte und Parameter werden durch die updateInfoPanel-Methode angezeigt\n            this.updateInfoPanel(true);\n            return;\n        }\n        const currentPath = this.permutations[this.currentPermutationIndex];\n        const currentDistance = this.calculatePathDistance(currentPath);\n        if (currentDistance \u003C this.shortestDistance) {\n            this.shortestDistance = currentDistance;\n            this.shortestPath = currentPath;\n        }\n        this.ctx.clearRect(0, 0, 50, 50);\n        this.drawNodes(true);\n        this.drawPath(currentPath, 'red');\n        if (this.shortestPath) {\n            this.drawPath(this.shortestPath, 'green');\n        }\n        this.currentPermutationIndex++;\n        this.updateInfoPanel();\n    }\n    updateInfoPanel(isFinished = false) {\n        const dataOutput = document.getElementById('bfDataOutput');\n        let html = `\u003Cstrong>Punkte:\u003C/strong>\u003Cbr>`;\n        html += this.nodes.map(node => \"P\" + node.id + \": (\" + node.x + \", \" + node.y + \")\").join(\"\u003Cbr>\");\n        html += \"\u003Chr>\";      \n        html += `\u003Cstrong>Anzahl der Permutationen:\u003C/strong> ${this.permutations.length}\u003Cbr>`;        \n        if (!isFinished) {\n            html += `\u003Cstrong>Aktuelle Permutation:\u003C/strong> ${this.currentPermutationIndex} von ${this.permutations.length}\u003Cbr>\u003Chr>`;         \n            if (this.currentPermutationIndex \u003C this.permutations.length) {\n                html += `\u003Cstrong>Aktueller Pfad:\u003C/strong> ${this.permutations[this.currentPermutationIndex].map(p => `P${p}`).join(' → ')}\u003Cbr>`;\n                html += `\u003Cstrong>Distanz der aktuellen Permutation:\u003C/strong> ${this.calculatePathDistance(this.permutations[this.currentPermutationIndex]).toFixed(2)}\u003Cbr>`;\n            } else {\n                html += \"\u003Cstrong>Alle Permutationen geprüft\u003C/strong>\u003Cbr>\";\n            }\n        } else {\n            html += `\u003Cstrong>Alle Permutationen geprüft:\u003C/strong> ${this.permutations.length} von ${this.permutations.length}\u003Cbr>\u003Chr>`;\n        }          \n        html += `\u003Chr>\u003Cstrong>Kürzeste Distanz:\u003C/strong> ${this.shortestDistance !== Infinity ? this.shortestDistance.toFixed(2) : \"Noch nicht gefunden\"}\u003Cbr>`;           \n        if (this.shortestPath) {\n            html += `\u003Cstrong>Kürzester Pfad:\u003C/strong> ${this.shortestPath.map(p => `P${p}`).join(' → ')}\u003Cbr>`;        \n            // Zeige detaillierte Ergebnisse an, wenn alle Permutationen geprüft wurden\n            if (isFinished || this.currentPermutationIndex >= this.permutations.length) {\n                html += `\u003Chr>\u003Ch4>Ergebnisanalyse:\u003C/h4>`;  \n                // Berechne Faktoriell für Vergleich\n                const factorial = n => n \u003C= 1 ? 1 : n * factorial(n - 1);\n                const totalPermsWithoutFix = factorial(this.numNodes);\n                const totalPermsWithFix = factorial(this.numNodes - 1);     \n                html += `\u003Cstrong>Geprüfte Permutationen:\u003C/strong> ${this.permutations.length}\u003Cbr>`;\n                html += `\u003Cstrong>Gesamtpermutationen ohne festen Startpunkt:\u003C/strong> ${totalPermsWithoutFix}\u003Cbr>`;\n                html += `\u003Cstrong>Ersparnis durch festen Startpunkt:\u003C/strong> ${totalPermsWithoutFix - totalPermsWithFix} Permutationen (${Math.round((1 - totalPermsWithFix/totalPermsWithoutFix) * 100)}%)\u003Cbr>\u003Cbr>`;      \n                html += `\u003Cstrong style=\"font-size: 1.2em;\">Gefundener optimaler Pfad:\u003C/strong>\u003Cbr>`;\n                html += `\u003Cspan style=\"font-size: 1.1em;\">${this.shortestPath.map(p => `P${p}`).join(' → ')} → P${this.shortestPath[0]}\u003C/span>\u003Cbr>`;\n                html += `\u003Cstrong>Gesamtlänge:\u003C/strong> \u003Cspan style=\"color: green; font-weight: bold;\">${this.shortestDistance.toFixed(2)}\u003C/span>\u003Cbr>`;\n                // Einzelne Wegstücke mit Distanzen anzeigen\n                html += `\u003Cbr>\u003Cstrong>Einzelne Abschnitte:\u003C/strong>\u003Cbr>`;\n                html += `\u003Ctable class=\"selection-table\" style=\"width: 100%;\">`;\n                html += `\u003Ctr>\u003Cth>Von\u003C/th>\u003Cth>Nach\u003C/th>\u003Cth>Distanz\u003C/th>\u003C/tr>`;\n                // Füge alle Segmente des kürzesten Pfades hinzu\n                for (let i = 0; i \u003C this.shortestPath.length - 1; i++) {\n                    const from = this.shortestPath[i];\n                    const to = this.shortestPath[i + 1];\n                    const dist = this.distance(this.nodes[from], this.nodes[to]);\n                    html += `\u003Ctr>\n                        \u003Ctd style=\"text-align: center;\">P${from}\u003C/td>\n                        \u003Ctd style=\"text-align: center;\">P${to}\u003C/td>\n                        \u003Ctd style=\"text-align: center;\">${dist.toFixed(2)}\u003C/td>\n                    \u003C/tr>`;\n                }  \n                // Füge den Rückweg zum Startpunkt hinzu\n                const from = this.shortestPath[this.shortestPath.length - 1];\n                const to = this.shortestPath[0];\n                const dist = this.distance(this.nodes[from], this.nodes[to]);\n                html += `\u003Ctr>\n                    \u003Ctd style=\"text-align: center;\">P${from}\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">P${to}\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">${dist.toFixed(2)}\u003C/td>\n                \u003C/tr>`;     \n                html += `\u003Ctr style=\"font-weight: bold;\">\n                    \u003Ctd colspan=\"2\" style=\"text-align: right;\">Gesamtlänge:\u003C/td>\n                    \u003Ctd style=\"text-align: center;\">${this.shortestDistance.toFixed(2)}\u003C/td>\n                \u003C/tr>`;\n                html += `\u003C/table>`;\n            }\n        } else {\n            html += \"\u003Cstrong>Kürzester Pfad:\u003C/strong> Noch nicht gefunden\";\n        }        \n        dataOutput.innerHTML = html;\n    }\n    reset() {\n        this.currentPermutationIndex = 0;\n        this.shortestPath = null;\n        this.shortestDistance = Infinity;\n        this.ctx.clearRect(0, 0, 50, 50);\n        this.drawNodes(true);\n        this.updateInfoPanel();\n    }\n    importChristofidesPoints() {\n        if (typeof animation !== 'undefined' && animation && animation.nodes) {\n            this.nodes = JSON.parse(JSON.stringify(animation.nodes));\n            this.numNodes = this.nodes.length;\n            this.permutations = this.generatePermutations([...Array(this.numNodes).keys()]);\n            this.reset();\n        }\n    }\n    importNNPoints() {\n        if (typeof nnAnimation !== 'undefined' && nnAnimation && nnAnimation.nodes) {\n            this.nodes = JSON.parse(JSON.stringify(nnAnimation.nodes));\n            this.numNodes = this.nodes.length;\n            this.permutations = this.generatePermutations([...Array(this.numNodes).keys()]);\n            this.reset();\n        }\n    }\n}\nlet bfAnimation = new BruteForceAnimation(document.getElementById('bfCanvas'), 4, 0);\nlet bfAutoIntervalId = null;\nfunction bfNextStep() {\n    if (!bfAnimation) return;\n    bfAnimation.nextStep();\n}\nfunction bfStartAutoAnimation() {\n    if (bfAutoIntervalId) return;\n    const slider = document.getElementById('bfSpeedSlider');\n    const percent = parseInt(slider.value);\n    const speed = 1000 * (100 / percent);\n    bfAutoIntervalId = setInterval(() => {\n        bfAnimation.nextStep();\n    }, speed);\n}\nfunction bfToggleAutoAnimation() {\n    if (bfAutoIntervalId) {\n        bfStopAutoAnimation();\n    } else {\n        bfStartAutoAnimation();\n    }\n}\nfunction bfStopAutoAnimation() {\n    if (bfAutoIntervalId) {\n        clearInterval(bfAutoIntervalId);\n        bfAutoIntervalId = null;\n    }\n}\nfunction bfResetAnimation() {\n    bfStopAutoAnimation();\n    if (bfAnimation) {\n        bfAnimation.reset();\n    }\n}\nfunction bfUpdateNumPoints() {\n    const numPoints = parseInt(document.getElementById('bfNumPoints').value, 10);\n    const startPoint = parseInt(document.getElementById('bfStartPoint').value, 10);\n    if (isNaN(numPoints) || numPoints \u003C 3 || numPoints > 25) {\n        alert(\"Bitte eine gültige Anzahl zwischen 3 und 25 eingeben\");\n        return;\n    }\n    bfAnimation = new BruteForceAnimation(document.getElementById('bfCanvas'), numPoints, startPoint);\n    bfAnimation.reset();\n}\nfunction bfUpdateStartPoint() {\n    bfStopAutoAnimation();\n    const startPoint = parseInt(document.getElementById('bfStartPoint').value);   \n    // Prüfen ob der Startpunkt gültig ist\n    if (isNaN(startPoint) || startPoint \u003C 0 || startPoint >= bfAnimation.nodes.length) {\n        alert(`Bitte geben Sie einen gültigen Startpunkt zwischen 0 und ${bfAnimation.nodes.length - 1} ein.`);\n        return;\n    }    \n    // Speichern der aktuellen Knoten\n    const currentNodes = JSON.parse(JSON.stringify(bfAnimation.nodes));      \n    // Neue Animation mit dem neuen Startpunkt erstellen\n    bfAnimation = new BruteForceAnimation(document.getElementById('bfCanvas'), bfAnimation.numNodes, startPoint);       \n    // Bestehende Knoten übernehmen\n    bfAnimation.nodes = currentNodes;    \n    // Permutationen neu berechnen\n    bfAnimation.permutations = bfAnimation.generatePermutations([...Array(bfAnimation.numNodes).keys()]);     \n    // Animation zurücksetzen\n    bfAnimation.reset();\n}\nfunction bfImportChristofidesPoints() {\n    if (bfAnimation) {\n        bfAnimation.importChristofidesPoints();\n    }\n}\nfunction bfImportNNPoints() {\n    if (bfAnimation) {\n        bfAnimation.importNNPoints();\n    }\n}\nfunction bfToggleConstellation(selectedType) {\n    if (!selectedType) return;\n    // Erstelle eine neue BruteForceAnimation-Instanz\n    bfAnimation = new BruteForceAnimation(document.getElementById('bfCanvas'), 0);\n    // Setze die Knoten basierend auf dem ausgewählten Sternbild\n    bfAnimation.nodes = createConstellationNodes(selectedType, 0);\n    bfAnimation.numNodes = bfAnimation.nodes.length;\n    // Initialisiere die Permutationen und setze die Animation zurück\n    bfAnimation.permutations = bfAnimation.generatePermutations([...Array(bfAnimation.numNodes).keys()]);\n    bfAnimation.reset();\n}\nfunction bfDownloadGraph() {\n    const canvas = document.getElementById('bfCanvas');\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = canvas.width;\n    tmpCanvas.height = canvas.height;\n    const tmpCtx = tmpCanvas.getContext('2d');\n    tmpCtx.fillStyle = 'white';\n    tmpCtx.fillRect(0, 0, tmpCanvas.width, tmpCanvas.height);\n    tmpCtx.drawImage(canvas, 0, 0);\n    const link = document.createElement('a');\n    link.download = 'brute-force-graph.png';\n    link.href = tmpCanvas.toDataURL('image/png');\n    link.click();\n}\nfunction bfShowFullTable() {\n    const fullTableDiv = document.getElementById('bfFullTable');\n    if (!fullTableDiv || !bfAnimation) return;\n    \n    // Theme-abhängige Farben\n    const isDark = isDarkMode();\n    const bgColor = isDark ? \"#2a472a\" : \"#d4ffd4\";\n    const textColor = isDark ? \"#fff\" : \"#000\";\n    const highlightTextColor = isDark ? \"#4CAF50\" : \"#006400\";\n    \n    let html = \"\u003Ch4>Alle getesteten Pfade\u003C/h4>\";\n    html += \"\u003Ctable class='selection-table' style='width: 100%; border-collapse: collapse;'>\";\n    html += \"\u003Ctr>\u003Cth>Pfad\u003C/th>\u003Cth>Distanz\u003C/th>\u003Cth>Kürzester Pfad\u003C/th>\u003C/tr>\";\n    \n    bfAnimation.permutations.forEach((path, index) => {\n        const distance = bfAnimation.calculatePathDistance(path).toFixed(2);\n        const isShortest = bfAnimation.shortestPath && bfAnimation.shortestPath.join(',') === path.join(',');\n        \n        // Verbesserte Stilisierung für den kürzesten Pfad\n        const rowStyle = isShortest ? \n            `background-color: ${bgColor}; font-weight: bold;` : '';\n            \n        const checkmarkStyle = isShortest ? \n            `color: ${highlightTextColor}; font-size: 1.2em; font-weight: bold;` : '';\n            \n        html += `\u003Ctr style=\"${rowStyle}\" class=\"${isShortest ? 'selected' : ''}\">`;\n        html += `\u003Ctd style='border: 1px solid #ddd; padding: 4px; text-align: center;'>${path.map(p => `P${p}`).join(' → ')}\u003C/td>`;\n        html += `\u003Ctd style='border: 1px solid #ddd; padding: 4px; text-align: center;'>${distance}\u003C/td>`;\n        html += `\u003Ctd style='border: 1px solid #ddd; padding: 4px; text-align: center; ${checkmarkStyle}'>${isShortest ? \"✓\" : \"\"}\u003C/td>`;\n        html += \"\u003C/tr>\";\n    });\n    \n    html += \"\u003C/table>\";\n    fullTableDiv.innerHTML = html;\n    fullTableDiv.style.display = 'block';\n    \n    // Stelle sicher, dass die Tabellenborden im Dark Mode richtig angezeigt werden\n    if (isDark) {\n        const tableCells = fullTableDiv.querySelectorAll('td, th');\n        tableCells.forEach(cell => {\n            cell.style.borderColor = \"#555\";\n        });\n    }\n}\nfunction bfToggleFullTable() {\n    const fullTableDiv = document.getElementById('bfFullTable');\n    if (!fullTableDiv) return;\n    if (fullTableDiv.style.display === 'none' || !fullTableDiv.innerHTML.trim()) {\n        bfShowFullTable();\n    } else {\n        fullTableDiv.style.display = 'none';\n    }\n}\n\u003C/script>\n",{"title":8,"searchDepth":1128,"depth":1128,"links":1129},2,[1130,1132,1133],{"id":110,"depth":1131,"text":113},3,{"id":482,"depth":1131,"text":485},{"id":849,"depth":1131,"text":852},"markdown","content:articles:5.Algo-vertretung-14-04-25.md","content","articles/5.Algo-vertretung-14-04-25.md","articles/5.Algo-vertretung-14-04-25","md",{"_path":1141,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":1142,"description":1143,"cover":1144,"author":1145,"date":15,"layout":16,"tags":1146,"body":1151,"_type":1134,"_id":1604,"_source":1136,"_file":1605,"_stem":1606,"_extension":1139},"/articles/neural-style-transfer","Neural Style Transfer","Deep Learning Assignment with TensorFlow","https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/jupyter/generated_creation%20of%20adam_with_mosaik.jpg?raw=true",{"name":13,"avatarUrl":14},[1147,1148,1149,1150],"jupyter_notebook","TensorFlow","DeepLearning","SEM",{"type":18,"children":1152,"toc":1597},[1153,1217,1221,1310,1314,1322,1375,1379,1388,1393,1403,1415,1419,1428,1529,1533,1542,1561,1565,1574,1587],{"type":21,"tag":39,"props":1154,"children":1156},{"style":1155},"display: flex; align-items: center;",[1157,1158,1202,1203],{"type":27,"value":46},{"type":21,"tag":39,"props":1159,"children":1161},{"style":1160},"flex: 1; padding-right: 20px;",[1162,1163,1181,1182,1201],{"type":27,"value":52},{"type":21,"tag":78,"props":1164,"children":1165},{},[1166,1168,1173,1175],{"type":27,"value":1167},"This one of my assignments for Deep Learning. In this project, we are tasked with implementing our ",{"type":21,"tag":766,"props":1169,"children":1170},{},[1171],{"type":27,"value":1172},"own version based on the Neural Style Transfer tutorial from TensorFlow",{"type":27,"value":1174},". ",{"type":21,"tag":85,"props":1176,"children":1178},{"href":1177},"https://www.tensorflow.org/tutorials/generative/style_transfer",[1179],{"type":27,"value":1180},"tutorial",{"type":27,"value":52},{"type":21,"tag":78,"props":1183,"children":1184},{},[1185,1187,1192,1194,1199],{"type":27,"value":1186},"My ",{"type":21,"tag":766,"props":1188,"children":1189},{},[1190],{"type":27,"value":1191},"primary objective is to generate mosaic windows",{"type":27,"value":1193}," featuring unique motifs that ",{"type":21,"tag":766,"props":1195,"children":1196},{},[1197],{"type":27,"value":1198},"influenced by modern elements",{"type":27,"value":1200},", ",{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":39,"props":1204,"children":1206},{"style":1205},"flex: 0 0 auto; margin-left: 20px; width: 25%;",[1207,1208,1215,1216],{"type":27,"value":52},{"type":21,"tag":1209,"props":1210,"children":1214},"img",{"src":1211,"alt":1212,"style":1213},"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Kirchenfenster_Wasser.JPG/960px-Kirchenfenster_Wasser.JPG","Kirchenfenster","width: 100%; height: auto;",[],{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":1218,"children":1219},{"style":474},[1220],{"type":27,"value":52},{"type":21,"tag":39,"props":1222,"children":1224},{"style":1223},"display: flex; align-items: flex-start;",[1225,1226,1238,1239],{"type":27,"value":46},{"type":21,"tag":39,"props":1227,"children":1229},{"style":1228},"flex: 0 0 30%; text-align: center;",[1230,1231,1237],{"type":27,"value":52},{"type":21,"tag":1209,"props":1232,"children":1236},{"src":1233,"alt":1234,"style":1235},"https://raw.githubusercontent.com/Nr44suessauer/nr44suessauer.github.io/7c2c25b5f8ff496ce9876de4ca38563947168868/nuxt-app/assets/pictures/svg/1717856636_BraveHearth.jpg.svg","Inverted SVG of BraveHeart","width: 100%; max-width: 225px; height: auto; border: 1px solid #ddd; border-radius: 0px; filter: invert(1);",[],{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":39,"props":1240,"children":1242},{"style":1241},"flex: 1; padding-left: 20px;",[1243,1244,1287,1288,1297,1298,1309],{"type":27,"value":52},{"type":21,"tag":78,"props":1245,"children":1246},{},[1247,1249,1254,1256,1262,1264,1270,1272,1278,1280,1285],{"type":27,"value":1248},"The Future is then to ",{"type":21,"tag":766,"props":1250,"children":1251},{},[1252],{"type":27,"value":1253},"convert these generated images into SVG files",{"type":27,"value":1255},". These ",{"type":21,"tag":85,"props":1257,"children":1259},{"href":1258},"https://en.wikipedia.org/wiki/SVG",[1260],{"type":27,"value":1261},"SVGs",{"type":27,"value":1263}," can later be used in applications like ",{"type":21,"tag":85,"props":1265,"children":1267},{"href":1266},"https://www.autodesk.com/de/products/fusion-360/overview?term=1-YEAR&tab=subscription#top",[1268],{"type":27,"value":1269},"Fusion 360",{"type":27,"value":1271}," ",{"type":21,"tag":85,"props":1273,"children":1275},{"href":1274},"https://de.wikipedia.org/wiki/Liste_von_CAD-Programmen",[1276],{"type":27,"value":1277},"(or similar software)",{"type":27,"value":1279}," to extrude the designs, thereby creating files that ",{"type":21,"tag":766,"props":1281,"children":1282},{},[1283],{"type":27,"value":1284},"can be 3D printed, laser cut, or manufactured by other means",{"type":27,"value":1286},".",{"type":27,"value":52},{"type":21,"tag":78,"props":1289,"children":1290},{},[1291],{"type":21,"tag":85,"props":1292,"children":1294},{"href":1293},"https://convertio.co/de/jpg-svg/",[1295],{"type":27,"value":1296},"Online Converter",{"type":27,"value":52},{"type":21,"tag":1299,"props":1300,"children":1301},"blockquote",{},[1302,1303,1308],{"type":27,"value":66},{"type":21,"tag":78,"props":1304,"children":1305},{},[1306],{"type":27,"value":1307},"Note: A Fusion 360 student account is provided free of charge.",{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":1311,"children":1312},{"style":474},[1313],{"type":27,"value":52},{"type":21,"tag":108,"props":1315,"children":1317},{"id":1316},"neural-style-transfer",[1318],{"type":21,"tag":766,"props":1319,"children":1320},{},[1321],{"type":27,"value":1142},{"type":21,"tag":39,"props":1323,"children":1324},{"style":1223},[1325,1326,1363,1364],{"type":27,"value":46},{"type":21,"tag":39,"props":1327,"children":1328},{"style":1160},[1329,1330,1349,1350,1362],{"type":27,"value":52},{"type":21,"tag":78,"props":1331,"children":1332},{},[1333,1335,1340,1342,1348],{"type":27,"value":1334},"This upcoming version is still a ",{"type":21,"tag":766,"props":1336,"children":1337},{},[1338],{"type":27,"value":1339},"work in progress",{"type":27,"value":1341}," and currently meets the basic requirement of the assignment by focusing on the implementation aspect. ",{"type":21,"tag":85,"props":1343,"children":1345},{"href":1344},"https://github.com/Nr44suessauer/DeepLearning_assignment2/tree/main/DeepLearning_assignment3",[1346],{"type":27,"value":1347},"git project",{"type":27,"value":1286},{"type":27,"value":52},{"type":21,"tag":78,"props":1351,"children":1352},{},[1353,1355,1360],{"type":27,"value":1354},"Colors are not really necessary for my model. However, if you aim to create this mosaic window, a colorful vision might be appreciated. The ",{"type":21,"tag":766,"props":1356,"children":1357},{},[1358],{"type":27,"value":1359},"next step",{"type":27,"value":1361}," will involve combining black-and-white mosaic images with colored content images to focus on the essentials. For later, with 1(B&W) instead of 3 dimensions(RGB)",{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":39,"props":1365,"children":1367},{"style":1366},"flex: 0 0 auto; margin-left: 20px; width: 35%;",[1368,1369,1374],{"type":27,"value":52},{"type":21,"tag":1209,"props":1370,"children":1373},{"src":1371,"alt":1372,"style":1213},"https://github.com/Nr44suessauer/DeepLearning_assignment2/blob/main/DeepLearning_assignment3/generated_creation%20of%20adam_with_mosaik.jpg?raw=true","Neural Style Mosaic",[],{"type":27,"value":46},{"type":21,"tag":39,"props":1376,"children":1377},{"style":478},[1378],{"type":27,"value":52},{"type":21,"tag":108,"props":1380,"children":1382},{"id":1381},"how-to-use",[1383],{"type":21,"tag":766,"props":1384,"children":1385},{},[1386],{"type":27,"value":1387},"How to Use",{"type":21,"tag":78,"props":1389,"children":1390},{},[1391],{"type":27,"value":1392},"The Jupyter Notebook can be downloaded and, once all required libraries are installed, executed without issues.",{"type":21,"tag":78,"props":1394,"children":1395},{},[1396,1401],{"type":21,"tag":766,"props":1397,"children":1398},{},[1399],{"type":27,"value":1400},"To update the images, simply specify a different path in the configuration.",{"type":27,"value":1402}," The comments serve as both documentation and explanation of the code. You can also modify other configuration settings as needed.",{"type":21,"tag":78,"props":1404,"children":1405},{},[1406,1408,1414],{"type":27,"value":1407},"Please note that if you plan to push this further, it is recommended to use a GPU. If you're using Nvidia hardware, refer to this link for more details: ",{"type":21,"tag":85,"props":1409,"children":1411},{"href":1410},"https://developer.nvidia.com/cuda-toolkit",[1412],{"type":27,"value":1413},"Nvidia CUDA Toolkit",{"type":27,"value":1286},{"type":21,"tag":39,"props":1416,"children":1417},{"style":474},[1418],{"type":27,"value":52},{"type":21,"tag":108,"props":1420,"children":1422},{"id":1421},"examples",[1423],{"type":21,"tag":766,"props":1424,"children":1425},{},[1426],{"type":27,"value":1427},"Examples",{"type":21,"tag":39,"props":1429,"children":1431},{"style":1430},"display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;",[1432,1433,1445,1446,1457,1458,1469,1470,1481,1482,1493,1494,1505,1506,1517,1518],{"type":27,"value":46},{"type":21,"tag":39,"props":1434,"children":1436},{"style":1435},"flex: 0 1 45%; max-width: 45%;",[1437,1438,1443,1444],{"type":27,"value":52},{"type":21,"tag":1209,"props":1439,"children":1442},{"src":1440,"alt":1441,"style":1213},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/jupyter/generated/BraveHeart.png?raw=true","Best Result",[],{"type":27,"value":52},{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":39,"props":1447,"children":1448},{"style":1435},[1449,1450,1455,1456],{"type":27,"value":52},{"type":21,"tag":1209,"props":1451,"children":1454},{"src":1452,"alt":1453,"style":1213},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/jupyter/generated/Generated_revan.png?raw=true","Chobi 10 Steps",[],{"type":27,"value":52},{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":39,"props":1459,"children":1460},{"style":1435},[1461,1462,1467,1468],{"type":27,"value":52},{"type":21,"tag":1209,"props":1463,"children":1466},{"src":1464,"alt":1465,"style":1213},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/jupyter/generated/MyHeroGenerated.png?raw=true","Composition 7 with Red",[],{"type":27,"value":52},{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":39,"props":1471,"children":1472},{"style":1435},[1473,1474,1479,1480],{"type":27,"value":52},{"type":21,"tag":1209,"props":1475,"children":1478},{"src":1476,"alt":1477,"style":1213},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/jupyter/generated/spongebob_generated.png?raw=true","Great Wave at Kanagawa",[],{"type":27,"value":52},{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":39,"props":1483,"children":1484},{"style":1435},[1485,1486,1491,1492],{"type":27,"value":52},{"type":21,"tag":1209,"props":1487,"children":1490},{"src":1488,"alt":1489,"style":1213},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/jupyter/generated/starwars_generated.png?raw=true","Creation of Adam with Mosaic",[],{"type":27,"value":52},{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":39,"props":1495,"children":1496},{"style":1435},[1497,1498,1503,1504],{"type":27,"value":52},{"type":21,"tag":1209,"props":1499,"children":1502},{"src":1500,"alt":1501,"style":1213},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/jupyter/generated/torfin_generated.png?raw=true","Mona Lisa with Mosaic",[],{"type":27,"value":52},{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":39,"props":1507,"children":1508},{"style":1435},[1509,1510,1515,1516],{"type":27,"value":52},{"type":21,"tag":1209,"props":1511,"children":1514},{"src":1512,"alt":1513,"style":1213},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/jupyter/generated/vader.png?raw=true","Starry Night",[],{"type":27,"value":52},{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":39,"props":1519,"children":1520},{"style":1435},[1521,1522,1527,1528],{"type":27,"value":52},{"type":21,"tag":1209,"props":1523,"children":1526},{"src":1524,"alt":1525,"style":1213},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/jupyter/generated/vader2.png?raw=true","Tubingen with Starry Night",[],{"type":27,"value":52},{"type":27,"value":46},{"type":21,"tag":39,"props":1530,"children":1531},{"style":474},[1532],{"type":27,"value":52},{"type":21,"tag":108,"props":1534,"children":1536},{"id":1535},"conclusion-for-my-goal",[1537],{"type":21,"tag":766,"props":1538,"children":1539},{},[1540],{"type":27,"value":1541},"Conclusion for my Goal",{"type":21,"tag":78,"props":1543,"children":1544},{},[1545,1547,1552,1554,1559],{"type":27,"value":1546},"To create mosaic windows, I first tried a direct approach with my Configurator. However, I believe it would be ",{"type":21,"tag":766,"props":1548,"children":1549},{},[1550],{"type":27,"value":1551},"more effective to apply filters or algorithms that adjust the edges to form intuitive shapes.",{"type":27,"value":1553}," This method will ",{"type":21,"tag":766,"props":1555,"children":1556},{},[1557],{"type":27,"value":1558},"separately detect outlines",{"type":27,"value":1560}," and use them as a grid to build the mosaic.",{"type":21,"tag":39,"props":1562,"children":1563},{"style":474},[1564],{"type":27,"value":52},{"type":21,"tag":108,"props":1566,"children":1568},{"id":1567},"jupyter-notebook-implementation",[1569],{"type":21,"tag":766,"props":1570,"children":1571},{},[1572],{"type":27,"value":1573},"Jupyter Notebook Implementation",{"type":21,"tag":39,"props":1575,"children":1577},{"style":1576},"margin-top: 20px; margin-bottom: 30px;",[1578,1579,1586],{"type":27,"value":46},{"type":21,"tag":29,"props":1580,"children":1584},{"src":1581,"width":70,"height":1582,"style":1583},"https://nbviewer.org/github/Nr44suessauer/DeepLearning_assignment2/blob/main/DeepLearning_assignment3/Assignment_3_mnauendo.ipynb","800px","border: 1px solid #ddd; border-radius: 5px; overflow: hidden;",[1585],{"type":27,"value":46},{"type":27,"value":46},{"type":21,"tag":78,"props":1588,"children":1589},{},[1590],{"type":21,"tag":85,"props":1591,"children":1594},{"href":1344,"rel":1592},[1593],"nofollow",[1595],{"type":27,"value":1596},"Code on Github",{"title":8,"searchDepth":1128,"depth":1128,"links":1598},[1599,1600,1601,1602,1603],{"id":1316,"depth":1131,"text":1142},{"id":1381,"depth":1131,"text":1387},{"id":1421,"depth":1131,"text":1427},{"id":1535,"depth":1131,"text":1541},{"id":1567,"depth":1131,"text":1573},"content:articles:6.Neural-Style-Transfer.md","articles/6.Neural-Style-Transfer.md","articles/6.Neural-Style-Transfer",{"_path":1608,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":1609,"description":1610,"cover":1611,"author":1612,"date":1615,"layout":1616,"body":1617,"_type":1134,"_id":1964,"_source":1136,"_file":1965,"_stem":1966,"_extension":1139},"/articles/get-started","Get started with Alpine","Creating a blog with Alpine is a command away, as well as deploying to many platforms.","/articles/get-started.webp",{"name":1613,"avatarUrl":14,"link":1614},"Sébastien Chopin","https://twitter.com/atinux","2022-08-23T00:00:00.000Z","article",{"type":18,"children":1618,"toc":1954},[1619,1624,1628,1635,1640,1685,1691,1704,1724,1730,1735,1759,1772,1778,1784,1789,1812,1825,1831,1843,1878,1884,1889,1912,1924,1929,1949],{"type":21,"tag":22,"props":1620,"children":1622},{"id":1621},"get-started-with-alpine",[1623],{"type":27,"value":1609},{"type":21,"tag":78,"props":1625,"children":1626},{},[1627],{"type":27,"value":1610},{"type":21,"tag":1629,"props":1630,"children":1632},"h2",{"id":1631},"create-a-blog",[1633],{"type":27,"value":1634},"Create a blog",{"type":21,"tag":78,"props":1636,"children":1637},{},[1638],{"type":27,"value":1639},"Open a terminal an run the following command:",{"type":21,"tag":1641,"props":1642,"children":1646},"pre",{"className":1643,"code":1644,"language":1645,"meta":8,"style":8},"language-bash shiki shiki-themes github-light github-dark","npx nuxi@latest init -t themes/alpine\n","bash",[1647],{"type":21,"tag":1648,"props":1649,"children":1650},"code",{"__ignoreMap":8},[1651],{"type":21,"tag":1652,"props":1653,"children":1656},"span",{"class":1654,"line":1655},"line",1,[1657,1663,1669,1674,1680],{"type":21,"tag":1652,"props":1658,"children":1660},{"style":1659},"--shiki-default:#6F42C1;--shiki-dark:#B392F0",[1661],{"type":27,"value":1662},"npx",{"type":21,"tag":1652,"props":1664,"children":1666},{"style":1665},"--shiki-default:#032F62;--shiki-dark:#9ECBFF",[1667],{"type":27,"value":1668}," nuxi@latest",{"type":21,"tag":1652,"props":1670,"children":1671},{"style":1665},[1672],{"type":27,"value":1673}," init",{"type":21,"tag":1652,"props":1675,"children":1677},{"style":1676},"--shiki-default:#005CC5;--shiki-dark:#79B8FF",[1678],{"type":27,"value":1679}," -t",{"type":21,"tag":1652,"props":1681,"children":1682},{"style":1665},[1683],{"type":27,"value":1684}," themes/alpine\n",{"type":21,"tag":1629,"props":1686,"children":1688},{"id":1687},"dependencies",[1689],{"type":27,"value":1690},"Dependencies",{"type":21,"tag":78,"props":1692,"children":1693},{},[1694,1696,1702],{"type":27,"value":1695},"Next, go to to ",{"type":21,"tag":1648,"props":1697,"children":1699},{"className":1698},[],[1700],{"type":27,"value":1701},"my-blog/",{"type":27,"value":1703}," directory and install the dependencies:",{"type":21,"tag":1641,"props":1705,"children":1707},{"className":1643,"code":1706,"language":1645,"meta":8,"style":8},"npm install\n",[1708],{"type":21,"tag":1648,"props":1709,"children":1710},{"__ignoreMap":8},[1711],{"type":21,"tag":1652,"props":1712,"children":1713},{"class":1654,"line":1655},[1714,1719],{"type":21,"tag":1652,"props":1715,"children":1716},{"style":1659},[1717],{"type":27,"value":1718},"npm",{"type":21,"tag":1652,"props":1720,"children":1721},{"style":1665},[1722],{"type":27,"value":1723}," install\n",{"type":21,"tag":1629,"props":1725,"children":1727},{"id":1726},"development",[1728],{"type":27,"value":1729},"Development",{"type":21,"tag":78,"props":1731,"children":1732},{},[1733],{"type":27,"value":1734},"Start the development server on port 3000:",{"type":21,"tag":1641,"props":1736,"children":1738},{"className":1643,"code":1737,"language":1645,"meta":8,"style":8},"npm run dev\n",[1739],{"type":21,"tag":1648,"props":1740,"children":1741},{"__ignoreMap":8},[1742],{"type":21,"tag":1652,"props":1743,"children":1744},{"class":1654,"line":1655},[1745,1749,1754],{"type":21,"tag":1652,"props":1746,"children":1747},{"style":1659},[1748],{"type":27,"value":1718},{"type":21,"tag":1652,"props":1750,"children":1751},{"style":1665},[1752],{"type":27,"value":1753}," run",{"type":21,"tag":1652,"props":1755,"children":1756},{"style":1665},[1757],{"type":27,"value":1758}," dev\n",{"type":21,"tag":78,"props":1760,"children":1761},{},[1762,1764,1770],{"type":27,"value":1763},"Next, you can start creating your content in Markdown in the ",{"type":21,"tag":1648,"props":1765,"children":1767},{"className":1766},[],[1768],{"type":27,"value":1769},"content/",{"type":27,"value":1771}," directory.",{"type":21,"tag":1629,"props":1773,"children":1775},{"id":1774},"deploy",[1776],{"type":27,"value":1777},"Deploy",{"type":21,"tag":108,"props":1779,"children":1781},{"id":1780},"static-hosting",[1782],{"type":27,"value":1783},"Static hosting",{"type":21,"tag":78,"props":1785,"children":1786},{},[1787],{"type":27,"value":1788},"You can deploy Alpine to any static hosting by running the following command:",{"type":21,"tag":1641,"props":1790,"children":1792},{"className":1643,"code":1791,"language":1645,"meta":8,"style":8},"npm run generate\n",[1793],{"type":21,"tag":1648,"props":1794,"children":1795},{"__ignoreMap":8},[1796],{"type":21,"tag":1652,"props":1797,"children":1798},{"class":1654,"line":1655},[1799,1803,1807],{"type":21,"tag":1652,"props":1800,"children":1801},{"style":1659},[1802],{"type":27,"value":1718},{"type":21,"tag":1652,"props":1804,"children":1805},{"style":1665},[1806],{"type":27,"value":1753},{"type":21,"tag":1652,"props":1808,"children":1809},{"style":1665},[1810],{"type":27,"value":1811}," generate\n",{"type":21,"tag":78,"props":1813,"children":1814},{},[1815,1817,1823],{"type":27,"value":1816},"This command will create a ",{"type":21,"tag":1648,"props":1818,"children":1820},{"className":1819},[],[1821],{"type":27,"value":1822},"dist/",{"type":27,"value":1824}," directory with the compiled files ready to be uploaded to any static hosting.",{"type":21,"tag":108,"props":1826,"children":1828},{"id":1827},"edge-platforms",[1829],{"type":27,"value":1830},"Edge platforms",{"type":21,"tag":78,"props":1832,"children":1833},{},[1834,1836,1841],{"type":27,"value":1835},"Alpine supports deploying to the following platforms with ",{"type":21,"tag":766,"props":1837,"children":1838},{},[1839],{"type":27,"value":1840},"zero configuration",{"type":27,"value":1842},":",{"type":21,"tag":1844,"props":1845,"children":1846},"ul",{},[1847,1858,1868],{"type":21,"tag":1848,"props":1849,"children":1850},"li",{},[1851],{"type":21,"tag":85,"props":1852,"children":1855},{"href":1853,"rel":1854},"https://vercel.com",[1593],[1856],{"type":27,"value":1857},"Vercel",{"type":21,"tag":1848,"props":1859,"children":1860},{},[1861],{"type":21,"tag":85,"props":1862,"children":1865},{"href":1863,"rel":1864},"https://netlify.com",[1593],[1866],{"type":27,"value":1867},"Netlify",{"type":21,"tag":1848,"props":1869,"children":1870},{},[1871],{"type":21,"tag":85,"props":1872,"children":1875},{"href":1873,"rel":1874},"https://v3.nuxtjs.org/guide/deploy/presets#supported-hosting-providers",[1593],[1876],{"type":27,"value":1877},"and more...",{"type":21,"tag":108,"props":1879,"children":1881},{"id":1880},"node-server",[1882],{"type":27,"value":1883},"Node server",{"type":21,"tag":78,"props":1885,"children":1886},{},[1887],{"type":27,"value":1888},"You can deploy Alpine to a Node server by running the following command:",{"type":21,"tag":1641,"props":1890,"children":1892},{"className":1643,"code":1891,"language":1645,"meta":8,"style":8},"npm run build\n",[1893],{"type":21,"tag":1648,"props":1894,"children":1895},{"__ignoreMap":8},[1896],{"type":21,"tag":1652,"props":1897,"children":1898},{"class":1654,"line":1655},[1899,1903,1907],{"type":21,"tag":1652,"props":1900,"children":1901},{"style":1659},[1902],{"type":27,"value":1718},{"type":21,"tag":1652,"props":1904,"children":1905},{"style":1665},[1906],{"type":27,"value":1753},{"type":21,"tag":1652,"props":1908,"children":1909},{"style":1665},[1910],{"type":27,"value":1911}," build\n",{"type":21,"tag":78,"props":1913,"children":1914},{},[1915,1916,1922],{"type":27,"value":1816},{"type":21,"tag":1648,"props":1917,"children":1919},{"className":1918},[],[1920],{"type":27,"value":1921},".output/",{"type":27,"value":1923}," directory with the compiled files ready to be uploaded to any Node server.",{"type":21,"tag":78,"props":1925,"children":1926},{},[1927],{"type":27,"value":1928},"To start the production server, run the following command:",{"type":21,"tag":1641,"props":1930,"children":1932},{"className":1643,"code":1931,"language":1645,"meta":8,"style":8},"node .output/server/index.mjs\n",[1933],{"type":21,"tag":1648,"props":1934,"children":1935},{"__ignoreMap":8},[1936],{"type":21,"tag":1652,"props":1937,"children":1938},{"class":1654,"line":1655},[1939,1944],{"type":21,"tag":1652,"props":1940,"children":1941},{"style":1659},[1942],{"type":27,"value":1943},"node",{"type":21,"tag":1652,"props":1945,"children":1946},{"style":1665},[1947],{"type":27,"value":1948}," .output/server/index.mjs\n",{"type":21,"tag":102,"props":1950,"children":1951},{},[1952],{"type":27,"value":1953},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":8,"searchDepth":1128,"depth":1128,"links":1955},[1956,1957,1958,1959],{"id":1631,"depth":1128,"text":1634},{"id":1687,"depth":1128,"text":1690},{"id":1726,"depth":1128,"text":1729},{"id":1774,"depth":1128,"text":1777,"children":1960},[1961,1962,1963],{"id":1780,"depth":1131,"text":1783},{"id":1827,"depth":1131,"text":1830},{"id":1880,"depth":1131,"text":1883},"content:articles:1.get-started.md","articles/1.get-started.md","articles/1.get-started",{"_path":1968,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":1969,"description":1970,"cover":1971,"author":1972,"date":1615,"layout":1616,"body":1976,"_type":1134,"_id":2888,"_source":1136,"_file":2889,"_stem":2890,"_extension":1139},"/articles/configure","Configure Alpine","Learn how to configure Alpine with the app.config.ts file.","/articles/configure-alpine.webp",{"name":1973,"avatarUrl":1974,"link":1975},"Clément Ollivier","https://pbs.twimg.com/profile_images/1370286658432724996/ZMSDzzIi_400x400.jpg","https://twitter.com/clemcodes",{"type":18,"children":1977,"toc":2883},[1978,1983,2004,2073,2086,2099,2105,2110,2306,2312,2325,2566,2572,2584,2879],{"type":21,"tag":22,"props":1979,"children":1981},{"id":1980},"configure-alpine",[1982],{"type":27,"value":1969},{"type":21,"tag":78,"props":1984,"children":1985},{},[1986,1988,1994,1996,2002],{"type":27,"value":1987},"To configure meta tags, social links or even the Alpine theme display, update the ",{"type":21,"tag":1648,"props":1989,"children":1991},{"className":1990},[],[1992],{"type":27,"value":1993},"alpine",{"type":27,"value":1995}," key in the ",{"type":21,"tag":1648,"props":1997,"children":1999},{"className":1998},[],[2000],{"type":27,"value":2001},"app.config.ts",{"type":27,"value":2003}," at the root of your project:",{"type":21,"tag":1641,"props":2005,"children":2009},{"className":2006,"code":2007,"filename":2001,"language":2008,"meta":8,"style":8},"language-ts shiki shiki-themes github-light github-dark","export default defineAppConfig({\n  alpine: {\n    /* Alpine configuration goes here */\n  }\n}\n","ts",[2010],{"type":21,"tag":1648,"props":2011,"children":2012},{"__ignoreMap":8},[2013,2038,2046,2055,2064],{"type":21,"tag":1652,"props":2014,"children":2015},{"class":1654,"line":1655},[2016,2022,2027,2032],{"type":21,"tag":1652,"props":2017,"children":2019},{"style":2018},"--shiki-default:#D73A49;--shiki-dark:#F97583",[2020],{"type":27,"value":2021},"export",{"type":21,"tag":1652,"props":2023,"children":2024},{"style":2018},[2025],{"type":27,"value":2026}," default",{"type":21,"tag":1652,"props":2028,"children":2029},{"style":1659},[2030],{"type":27,"value":2031}," defineAppConfig",{"type":21,"tag":1652,"props":2033,"children":2035},{"style":2034},"--shiki-default:#24292E;--shiki-dark:#E1E4E8",[2036],{"type":27,"value":2037},"({\n",{"type":21,"tag":1652,"props":2039,"children":2040},{"class":1654,"line":1128},[2041],{"type":21,"tag":1652,"props":2042,"children":2043},{"style":2034},[2044],{"type":27,"value":2045},"  alpine: {\n",{"type":21,"tag":1652,"props":2047,"children":2048},{"class":1654,"line":1131},[2049],{"type":21,"tag":1652,"props":2050,"children":2052},{"style":2051},"--shiki-default:#6A737D;--shiki-dark:#6A737D",[2053],{"type":27,"value":2054},"    /* Alpine configuration goes here */\n",{"type":21,"tag":1652,"props":2056,"children":2058},{"class":1654,"line":2057},4,[2059],{"type":21,"tag":1652,"props":2060,"children":2061},{"style":2034},[2062],{"type":27,"value":2063},"  }\n",{"type":21,"tag":1652,"props":2065,"children":2067},{"class":1654,"line":2066},5,[2068],{"type":21,"tag":1652,"props":2069,"children":2070},{"style":2034},[2071],{"type":27,"value":2072},"}\n",{"type":21,"tag":78,"props":2074,"children":2075},{},[2076,2078,2085],{"type":27,"value":2077},"You can look at the ",{"type":21,"tag":85,"props":2079,"children":2082},{"href":2080,"rel":2081},"https://github.com/nuxt-themes/alpine/tree/main/app.config.ts",[1593],[2083],{"type":27,"value":2084},"default config",{"type":27,"value":1286},{"type":21,"tag":78,"props":2087,"children":2088},{},[2089,2091,2097],{"type":27,"value":2090},"The ",{"type":21,"tag":85,"props":2092,"children":2094},{"href":2080,"rel":2093},[1593],[2095],{"type":27,"value":2096},"config schema",{"type":27,"value":2098}," also gives comments on all the configuration parameters.",{"type":21,"tag":1629,"props":2100,"children":2102},{"id":2101},"meta-tags",[2103],{"type":27,"value":2104},"Meta tags",{"type":21,"tag":78,"props":2106,"children":2107},{},[2108],{"type":27,"value":2109},"Configure the title, description and social image of your website:",{"type":21,"tag":1641,"props":2111,"children":2113},{"className":2006,"code":2112,"filename":2001,"language":2008,"meta":8,"style":8},"export default defineAppConfig({\n  alpine: {\n    title: 'Alpine',\n    description: 'The minimalist blog theme',\n    image: '/social-card-preview.png',\n    // image can also be an object:\n    image: {\n      src: '/social-card-preview.png',\n      alt: 'An image showcasing my project.',\n      width: 400,\n      height: 300\n    }\n  }\n})\n",[2114],{"type":21,"tag":1648,"props":2115,"children":2116},{"__ignoreMap":8},[2117,2136,2143,2161,2178,2195,2204,2213,2230,2248,2266,2280,2289,2297],{"type":21,"tag":1652,"props":2118,"children":2119},{"class":1654,"line":1655},[2120,2124,2128,2132],{"type":21,"tag":1652,"props":2121,"children":2122},{"style":2018},[2123],{"type":27,"value":2021},{"type":21,"tag":1652,"props":2125,"children":2126},{"style":2018},[2127],{"type":27,"value":2026},{"type":21,"tag":1652,"props":2129,"children":2130},{"style":1659},[2131],{"type":27,"value":2031},{"type":21,"tag":1652,"props":2133,"children":2134},{"style":2034},[2135],{"type":27,"value":2037},{"type":21,"tag":1652,"props":2137,"children":2138},{"class":1654,"line":1128},[2139],{"type":21,"tag":1652,"props":2140,"children":2141},{"style":2034},[2142],{"type":27,"value":2045},{"type":21,"tag":1652,"props":2144,"children":2145},{"class":1654,"line":1131},[2146,2151,2156],{"type":21,"tag":1652,"props":2147,"children":2148},{"style":2034},[2149],{"type":27,"value":2150},"    title: ",{"type":21,"tag":1652,"props":2152,"children":2153},{"style":1665},[2154],{"type":27,"value":2155},"'Alpine'",{"type":21,"tag":1652,"props":2157,"children":2158},{"style":2034},[2159],{"type":27,"value":2160},",\n",{"type":21,"tag":1652,"props":2162,"children":2163},{"class":1654,"line":2057},[2164,2169,2174],{"type":21,"tag":1652,"props":2165,"children":2166},{"style":2034},[2167],{"type":27,"value":2168},"    description: ",{"type":21,"tag":1652,"props":2170,"children":2171},{"style":1665},[2172],{"type":27,"value":2173},"'The minimalist blog theme'",{"type":21,"tag":1652,"props":2175,"children":2176},{"style":2034},[2177],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2179,"children":2180},{"class":1654,"line":2066},[2181,2186,2191],{"type":21,"tag":1652,"props":2182,"children":2183},{"style":2034},[2184],{"type":27,"value":2185},"    image: ",{"type":21,"tag":1652,"props":2187,"children":2188},{"style":1665},[2189],{"type":27,"value":2190},"'/social-card-preview.png'",{"type":21,"tag":1652,"props":2192,"children":2193},{"style":2034},[2194],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2196,"children":2198},{"class":1654,"line":2197},6,[2199],{"type":21,"tag":1652,"props":2200,"children":2201},{"style":2051},[2202],{"type":27,"value":2203},"    // image can also be an object:\n",{"type":21,"tag":1652,"props":2205,"children":2207},{"class":1654,"line":2206},7,[2208],{"type":21,"tag":1652,"props":2209,"children":2210},{"style":2034},[2211],{"type":27,"value":2212},"    image: {\n",{"type":21,"tag":1652,"props":2214,"children":2216},{"class":1654,"line":2215},8,[2217,2222,2226],{"type":21,"tag":1652,"props":2218,"children":2219},{"style":2034},[2220],{"type":27,"value":2221},"      src: ",{"type":21,"tag":1652,"props":2223,"children":2224},{"style":1665},[2225],{"type":27,"value":2190},{"type":21,"tag":1652,"props":2227,"children":2228},{"style":2034},[2229],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2231,"children":2233},{"class":1654,"line":2232},9,[2234,2239,2244],{"type":21,"tag":1652,"props":2235,"children":2236},{"style":2034},[2237],{"type":27,"value":2238},"      alt: ",{"type":21,"tag":1652,"props":2240,"children":2241},{"style":1665},[2242],{"type":27,"value":2243},"'An image showcasing my project.'",{"type":21,"tag":1652,"props":2245,"children":2246},{"style":2034},[2247],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2249,"children":2251},{"class":1654,"line":2250},10,[2252,2257,2262],{"type":21,"tag":1652,"props":2253,"children":2254},{"style":2034},[2255],{"type":27,"value":2256},"      width: ",{"type":21,"tag":1652,"props":2258,"children":2259},{"style":1676},[2260],{"type":27,"value":2261},"400",{"type":21,"tag":1652,"props":2263,"children":2264},{"style":2034},[2265],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2267,"children":2269},{"class":1654,"line":2268},11,[2270,2275],{"type":21,"tag":1652,"props":2271,"children":2272},{"style":2034},[2273],{"type":27,"value":2274},"      height: ",{"type":21,"tag":1652,"props":2276,"children":2277},{"style":1676},[2278],{"type":27,"value":2279},"300\n",{"type":21,"tag":1652,"props":2281,"children":2283},{"class":1654,"line":2282},12,[2284],{"type":21,"tag":1652,"props":2285,"children":2286},{"style":2034},[2287],{"type":27,"value":2288},"    }\n",{"type":21,"tag":1652,"props":2290,"children":2292},{"class":1654,"line":2291},13,[2293],{"type":21,"tag":1652,"props":2294,"children":2295},{"style":2034},[2296],{"type":27,"value":2063},{"type":21,"tag":1652,"props":2298,"children":2300},{"class":1654,"line":2299},14,[2301],{"type":21,"tag":1652,"props":2302,"children":2303},{"style":2034},[2304],{"type":27,"value":2305},"})\n",{"type":21,"tag":1629,"props":2307,"children":2309},{"id":2308},"social-links",[2310],{"type":27,"value":2311},"Social links",{"type":21,"tag":78,"props":2313,"children":2314},{},[2315,2317,2323],{"type":27,"value":2316},"To configure the social links displayed in the footer, use the ",{"type":21,"tag":1648,"props":2318,"children":2320},{"className":2319},[],[2321],{"type":27,"value":2322},"socials",{"type":27,"value":2324}," property:",{"type":21,"tag":1641,"props":2326,"children":2328},{"className":2006,"code":2327,"filename":2001,"language":2008,"meta":8,"style":8},"export default defineAppConfig({\n  alpine: {\n    socials: {\n      twitter: 'nuxtlabs',\n      instagram: 'wearenuxt',\n      linkedin: {\n        icon: 'uil:linkedin',\n        label: 'LinkedIn',\n        href: 'https://www.linkedin.com/company/nuxtlabs'\n      },\n      mastodon: {\n        icon: 'simple-icons:mastodon',\n        label: 'Mastodon',\n        href: 'https://m.webtoo.ls/@nuxt',\n        rel: 'me'\n      }\n    }\n  }\n})\n",[2329],{"type":21,"tag":1648,"props":2330,"children":2331},{"__ignoreMap":8},[2332,2351,2358,2366,2383,2400,2408,2425,2442,2455,2463,2471,2487,2503,2519,2533,2542,2550,2558],{"type":21,"tag":1652,"props":2333,"children":2334},{"class":1654,"line":1655},[2335,2339,2343,2347],{"type":21,"tag":1652,"props":2336,"children":2337},{"style":2018},[2338],{"type":27,"value":2021},{"type":21,"tag":1652,"props":2340,"children":2341},{"style":2018},[2342],{"type":27,"value":2026},{"type":21,"tag":1652,"props":2344,"children":2345},{"style":1659},[2346],{"type":27,"value":2031},{"type":21,"tag":1652,"props":2348,"children":2349},{"style":2034},[2350],{"type":27,"value":2037},{"type":21,"tag":1652,"props":2352,"children":2353},{"class":1654,"line":1128},[2354],{"type":21,"tag":1652,"props":2355,"children":2356},{"style":2034},[2357],{"type":27,"value":2045},{"type":21,"tag":1652,"props":2359,"children":2360},{"class":1654,"line":1131},[2361],{"type":21,"tag":1652,"props":2362,"children":2363},{"style":2034},[2364],{"type":27,"value":2365},"    socials: {\n",{"type":21,"tag":1652,"props":2367,"children":2368},{"class":1654,"line":2057},[2369,2374,2379],{"type":21,"tag":1652,"props":2370,"children":2371},{"style":2034},[2372],{"type":27,"value":2373},"      twitter: ",{"type":21,"tag":1652,"props":2375,"children":2376},{"style":1665},[2377],{"type":27,"value":2378},"'nuxtlabs'",{"type":21,"tag":1652,"props":2380,"children":2381},{"style":2034},[2382],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2384,"children":2385},{"class":1654,"line":2066},[2386,2391,2396],{"type":21,"tag":1652,"props":2387,"children":2388},{"style":2034},[2389],{"type":27,"value":2390},"      instagram: ",{"type":21,"tag":1652,"props":2392,"children":2393},{"style":1665},[2394],{"type":27,"value":2395},"'wearenuxt'",{"type":21,"tag":1652,"props":2397,"children":2398},{"style":2034},[2399],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2401,"children":2402},{"class":1654,"line":2197},[2403],{"type":21,"tag":1652,"props":2404,"children":2405},{"style":2034},[2406],{"type":27,"value":2407},"      linkedin: {\n",{"type":21,"tag":1652,"props":2409,"children":2410},{"class":1654,"line":2206},[2411,2416,2421],{"type":21,"tag":1652,"props":2412,"children":2413},{"style":2034},[2414],{"type":27,"value":2415},"        icon: ",{"type":21,"tag":1652,"props":2417,"children":2418},{"style":1665},[2419],{"type":27,"value":2420},"'uil:linkedin'",{"type":21,"tag":1652,"props":2422,"children":2423},{"style":2034},[2424],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2426,"children":2427},{"class":1654,"line":2215},[2428,2433,2438],{"type":21,"tag":1652,"props":2429,"children":2430},{"style":2034},[2431],{"type":27,"value":2432},"        label: ",{"type":21,"tag":1652,"props":2434,"children":2435},{"style":1665},[2436],{"type":27,"value":2437},"'LinkedIn'",{"type":21,"tag":1652,"props":2439,"children":2440},{"style":2034},[2441],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2443,"children":2444},{"class":1654,"line":2232},[2445,2450],{"type":21,"tag":1652,"props":2446,"children":2447},{"style":2034},[2448],{"type":27,"value":2449},"        href: ",{"type":21,"tag":1652,"props":2451,"children":2452},{"style":1665},[2453],{"type":27,"value":2454},"'https://www.linkedin.com/company/nuxtlabs'\n",{"type":21,"tag":1652,"props":2456,"children":2457},{"class":1654,"line":2250},[2458],{"type":21,"tag":1652,"props":2459,"children":2460},{"style":2034},[2461],{"type":27,"value":2462},"      },\n",{"type":21,"tag":1652,"props":2464,"children":2465},{"class":1654,"line":2268},[2466],{"type":21,"tag":1652,"props":2467,"children":2468},{"style":2034},[2469],{"type":27,"value":2470},"      mastodon: {\n",{"type":21,"tag":1652,"props":2472,"children":2473},{"class":1654,"line":2282},[2474,2478,2483],{"type":21,"tag":1652,"props":2475,"children":2476},{"style":2034},[2477],{"type":27,"value":2415},{"type":21,"tag":1652,"props":2479,"children":2480},{"style":1665},[2481],{"type":27,"value":2482},"'simple-icons:mastodon'",{"type":21,"tag":1652,"props":2484,"children":2485},{"style":2034},[2486],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2488,"children":2489},{"class":1654,"line":2291},[2490,2494,2499],{"type":21,"tag":1652,"props":2491,"children":2492},{"style":2034},[2493],{"type":27,"value":2432},{"type":21,"tag":1652,"props":2495,"children":2496},{"style":1665},[2497],{"type":27,"value":2498},"'Mastodon'",{"type":21,"tag":1652,"props":2500,"children":2501},{"style":2034},[2502],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2504,"children":2505},{"class":1654,"line":2299},[2506,2510,2515],{"type":21,"tag":1652,"props":2507,"children":2508},{"style":2034},[2509],{"type":27,"value":2449},{"type":21,"tag":1652,"props":2511,"children":2512},{"style":1665},[2513],{"type":27,"value":2514},"'https://m.webtoo.ls/@nuxt'",{"type":21,"tag":1652,"props":2516,"children":2517},{"style":2034},[2518],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2520,"children":2522},{"class":1654,"line":2521},15,[2523,2528],{"type":21,"tag":1652,"props":2524,"children":2525},{"style":2034},[2526],{"type":27,"value":2527},"        rel: ",{"type":21,"tag":1652,"props":2529,"children":2530},{"style":1665},[2531],{"type":27,"value":2532},"'me'\n",{"type":21,"tag":1652,"props":2534,"children":2536},{"class":1654,"line":2535},16,[2537],{"type":21,"tag":1652,"props":2538,"children":2539},{"style":2034},[2540],{"type":27,"value":2541},"      }\n",{"type":21,"tag":1652,"props":2543,"children":2545},{"class":1654,"line":2544},17,[2546],{"type":21,"tag":1652,"props":2547,"children":2548},{"style":2034},[2549],{"type":27,"value":2288},{"type":21,"tag":1652,"props":2551,"children":2553},{"class":1654,"line":2552},18,[2554],{"type":21,"tag":1652,"props":2555,"children":2556},{"style":2034},[2557],{"type":27,"value":2063},{"type":21,"tag":1652,"props":2559,"children":2561},{"class":1654,"line":2560},19,[2562],{"type":21,"tag":1652,"props":2563,"children":2564},{"style":2034},[2565],{"type":27,"value":2305},{"type":21,"tag":1629,"props":2567,"children":2569},{"id":2568},"theme-display",[2570],{"type":27,"value":2571},"Theme display",{"type":21,"tag":78,"props":2573,"children":2574},{},[2575,2577,2582],{"type":27,"value":2576},"Alpine Header and Footer can also be customized via the ",{"type":21,"tag":1648,"props":2578,"children":2580},{"className":2579},[],[2581],{"type":27,"value":2001},{"type":27,"value":2583}," file:",{"type":21,"tag":1641,"props":2585,"children":2587},{"className":2006,"code":2586,"filename":2001,"language":2008,"meta":8,"style":8},"defineAppConfig({\n  alpine: {\n    // Remove header with header: false\n    header: {\n      position: 'inline', // possible value are : 'none' | 'left' | 'center' | 'right' | 'inline'\n      logo: false\n    },\n    // Remove header with footer: false\n    footer: {\n      credits: {\n        enabled: true, // possible value are : true | false\n        repository: 'https://www.github.com/nuxt-themes/alpine' // our github repository\n      },\n      navigation: false, // possible value are : true | false\n      position: 'center', // possible value are : 'none' | 'left' | 'center' | 'right'\n      message: 'Follow me on' // string that will be displayed on the footer (leave empty or delete to disable)\n    }\n    // Disable back to top button: false\n    backToTop: {\n      text: 'Back to top',\n      icon: 'material-symbols:arrow-upward'\n    }\n  }\n})\n",[2588],{"type":21,"tag":1648,"props":2589,"children":2590},{"__ignoreMap":8},[2591,2603,2610,2618,2626,2648,2661,2669,2677,2685,2693,2715,2733,2740,2761,2782,2800,2807,2815,2823,2841,2855,2863,2871],{"type":21,"tag":1652,"props":2592,"children":2593},{"class":1654,"line":1655},[2594,2599],{"type":21,"tag":1652,"props":2595,"children":2596},{"style":1659},[2597],{"type":27,"value":2598},"defineAppConfig",{"type":21,"tag":1652,"props":2600,"children":2601},{"style":2034},[2602],{"type":27,"value":2037},{"type":21,"tag":1652,"props":2604,"children":2605},{"class":1654,"line":1128},[2606],{"type":21,"tag":1652,"props":2607,"children":2608},{"style":2034},[2609],{"type":27,"value":2045},{"type":21,"tag":1652,"props":2611,"children":2612},{"class":1654,"line":1131},[2613],{"type":21,"tag":1652,"props":2614,"children":2615},{"style":2051},[2616],{"type":27,"value":2617},"    // Remove header with header: false\n",{"type":21,"tag":1652,"props":2619,"children":2620},{"class":1654,"line":2057},[2621],{"type":21,"tag":1652,"props":2622,"children":2623},{"style":2034},[2624],{"type":27,"value":2625},"    header: {\n",{"type":21,"tag":1652,"props":2627,"children":2628},{"class":1654,"line":2066},[2629,2634,2639,2643],{"type":21,"tag":1652,"props":2630,"children":2631},{"style":2034},[2632],{"type":27,"value":2633},"      position: ",{"type":21,"tag":1652,"props":2635,"children":2636},{"style":1665},[2637],{"type":27,"value":2638},"'inline'",{"type":21,"tag":1652,"props":2640,"children":2641},{"style":2034},[2642],{"type":27,"value":1200},{"type":21,"tag":1652,"props":2644,"children":2645},{"style":2051},[2646],{"type":27,"value":2647},"// possible value are : 'none' | 'left' | 'center' | 'right' | 'inline'\n",{"type":21,"tag":1652,"props":2649,"children":2650},{"class":1654,"line":2197},[2651,2656],{"type":21,"tag":1652,"props":2652,"children":2653},{"style":2034},[2654],{"type":27,"value":2655},"      logo: ",{"type":21,"tag":1652,"props":2657,"children":2658},{"style":1676},[2659],{"type":27,"value":2660},"false\n",{"type":21,"tag":1652,"props":2662,"children":2663},{"class":1654,"line":2206},[2664],{"type":21,"tag":1652,"props":2665,"children":2666},{"style":2034},[2667],{"type":27,"value":2668},"    },\n",{"type":21,"tag":1652,"props":2670,"children":2671},{"class":1654,"line":2215},[2672],{"type":21,"tag":1652,"props":2673,"children":2674},{"style":2051},[2675],{"type":27,"value":2676},"    // Remove header with footer: false\n",{"type":21,"tag":1652,"props":2678,"children":2679},{"class":1654,"line":2232},[2680],{"type":21,"tag":1652,"props":2681,"children":2682},{"style":2034},[2683],{"type":27,"value":2684},"    footer: {\n",{"type":21,"tag":1652,"props":2686,"children":2687},{"class":1654,"line":2250},[2688],{"type":21,"tag":1652,"props":2689,"children":2690},{"style":2034},[2691],{"type":27,"value":2692},"      credits: {\n",{"type":21,"tag":1652,"props":2694,"children":2695},{"class":1654,"line":2268},[2696,2701,2706,2710],{"type":21,"tag":1652,"props":2697,"children":2698},{"style":2034},[2699],{"type":27,"value":2700},"        enabled: ",{"type":21,"tag":1652,"props":2702,"children":2703},{"style":1676},[2704],{"type":27,"value":2705},"true",{"type":21,"tag":1652,"props":2707,"children":2708},{"style":2034},[2709],{"type":27,"value":1200},{"type":21,"tag":1652,"props":2711,"children":2712},{"style":2051},[2713],{"type":27,"value":2714},"// possible value are : true | false\n",{"type":21,"tag":1652,"props":2716,"children":2717},{"class":1654,"line":2282},[2718,2723,2728],{"type":21,"tag":1652,"props":2719,"children":2720},{"style":2034},[2721],{"type":27,"value":2722},"        repository: ",{"type":21,"tag":1652,"props":2724,"children":2725},{"style":1665},[2726],{"type":27,"value":2727},"'https://www.github.com/nuxt-themes/alpine'",{"type":21,"tag":1652,"props":2729,"children":2730},{"style":2051},[2731],{"type":27,"value":2732}," // our github repository\n",{"type":21,"tag":1652,"props":2734,"children":2735},{"class":1654,"line":2291},[2736],{"type":21,"tag":1652,"props":2737,"children":2738},{"style":2034},[2739],{"type":27,"value":2462},{"type":21,"tag":1652,"props":2741,"children":2742},{"class":1654,"line":2299},[2743,2748,2753,2757],{"type":21,"tag":1652,"props":2744,"children":2745},{"style":2034},[2746],{"type":27,"value":2747},"      navigation: ",{"type":21,"tag":1652,"props":2749,"children":2750},{"style":1676},[2751],{"type":27,"value":2752},"false",{"type":21,"tag":1652,"props":2754,"children":2755},{"style":2034},[2756],{"type":27,"value":1200},{"type":21,"tag":1652,"props":2758,"children":2759},{"style":2051},[2760],{"type":27,"value":2714},{"type":21,"tag":1652,"props":2762,"children":2763},{"class":1654,"line":2521},[2764,2768,2773,2777],{"type":21,"tag":1652,"props":2765,"children":2766},{"style":2034},[2767],{"type":27,"value":2633},{"type":21,"tag":1652,"props":2769,"children":2770},{"style":1665},[2771],{"type":27,"value":2772},"'center'",{"type":21,"tag":1652,"props":2774,"children":2775},{"style":2034},[2776],{"type":27,"value":1200},{"type":21,"tag":1652,"props":2778,"children":2779},{"style":2051},[2780],{"type":27,"value":2781},"// possible value are : 'none' | 'left' | 'center' | 'right'\n",{"type":21,"tag":1652,"props":2783,"children":2784},{"class":1654,"line":2535},[2785,2790,2795],{"type":21,"tag":1652,"props":2786,"children":2787},{"style":2034},[2788],{"type":27,"value":2789},"      message: ",{"type":21,"tag":1652,"props":2791,"children":2792},{"style":1665},[2793],{"type":27,"value":2794},"'Follow me on'",{"type":21,"tag":1652,"props":2796,"children":2797},{"style":2051},[2798],{"type":27,"value":2799}," // string that will be displayed on the footer (leave empty or delete to disable)\n",{"type":21,"tag":1652,"props":2801,"children":2802},{"class":1654,"line":2544},[2803],{"type":21,"tag":1652,"props":2804,"children":2805},{"style":2034},[2806],{"type":27,"value":2288},{"type":21,"tag":1652,"props":2808,"children":2809},{"class":1654,"line":2552},[2810],{"type":21,"tag":1652,"props":2811,"children":2812},{"style":2051},[2813],{"type":27,"value":2814},"    // Disable back to top button: false\n",{"type":21,"tag":1652,"props":2816,"children":2817},{"class":1654,"line":2560},[2818],{"type":21,"tag":1652,"props":2819,"children":2820},{"style":2034},[2821],{"type":27,"value":2822},"    backToTop: {\n",{"type":21,"tag":1652,"props":2824,"children":2826},{"class":1654,"line":2825},20,[2827,2832,2837],{"type":21,"tag":1652,"props":2828,"children":2829},{"style":2034},[2830],{"type":27,"value":2831},"      text: ",{"type":21,"tag":1652,"props":2833,"children":2834},{"style":1665},[2835],{"type":27,"value":2836},"'Back to top'",{"type":21,"tag":1652,"props":2838,"children":2839},{"style":2034},[2840],{"type":27,"value":2160},{"type":21,"tag":1652,"props":2842,"children":2844},{"class":1654,"line":2843},21,[2845,2850],{"type":21,"tag":1652,"props":2846,"children":2847},{"style":2034},[2848],{"type":27,"value":2849},"      icon: ",{"type":21,"tag":1652,"props":2851,"children":2852},{"style":1665},[2853],{"type":27,"value":2854},"'material-symbols:arrow-upward'\n",{"type":21,"tag":1652,"props":2856,"children":2858},{"class":1654,"line":2857},22,[2859],{"type":21,"tag":1652,"props":2860,"children":2861},{"style":2034},[2862],{"type":27,"value":2288},{"type":21,"tag":1652,"props":2864,"children":2866},{"class":1654,"line":2865},23,[2867],{"type":21,"tag":1652,"props":2868,"children":2869},{"style":2034},[2870],{"type":27,"value":2063},{"type":21,"tag":1652,"props":2872,"children":2874},{"class":1654,"line":2873},24,[2875],{"type":21,"tag":1652,"props":2876,"children":2877},{"style":2034},[2878],{"type":27,"value":2305},{"type":21,"tag":102,"props":2880,"children":2881},{},[2882],{"type":27,"value":1953},{"title":8,"searchDepth":1128,"depth":1128,"links":2884},[2885,2886,2887],{"id":2101,"depth":1128,"text":2104},{"id":2308,"depth":1128,"text":2311},{"id":2568,"depth":1128,"text":2571},"content:articles:2.configure.md","articles/2.configure.md","articles/2.configure",{"_path":2892,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":2893,"description":2894,"cover":2895,"date":1615,"layout":1616,"body":2896,"_type":1134,"_id":3621,"_source":1136,"_file":3622,"_stem":3623,"_extension":1139},"/articles/write-articles","Write Articles","Writing Markdown articles in Alpine is straightforward.","/articles/write-articles.webp",{"type":18,"children":2897,"toc":3613},[2898,2903,2908,2914,2926,2946,2951,2964,3062,3074,3080,3091,3123,3152,3208,3227,3232,3238,3250,3317,3322,3328,3347,3430,3435,3441,3446,3577,3583,3596,3609],{"type":21,"tag":22,"props":2899,"children":2901},{"id":2900},"write-articles",[2902],{"type":27,"value":2893},{"type":21,"tag":78,"props":2904,"children":2905},{},[2906],{"type":27,"value":2907},"Write Markdown articles in Alpine is straightforward.",{"type":21,"tag":1629,"props":2909,"children":2911},{"id":2910},"create-an-articles-list",[2912],{"type":27,"value":2913},"Create an articles list",{"type":21,"tag":78,"props":2915,"children":2916},{},[2917,2919,2924],{"type":27,"value":2918},"Create a new file in the ",{"type":21,"tag":1648,"props":2920,"children":2922},{"className":2921},[],[2923],{"type":27,"value":1769},{"type":27,"value":2925}," directory:",{"type":21,"tag":1641,"props":2927,"children":2929},{"className":1643,"code":2928,"language":1645,"meta":8,"style":8},"touch content/2.articles.md\n",[2930],{"type":21,"tag":1648,"props":2931,"children":2932},{"__ignoreMap":8},[2933],{"type":21,"tag":1652,"props":2934,"children":2935},{"class":1654,"line":1655},[2936,2941],{"type":21,"tag":1652,"props":2937,"children":2938},{"style":1659},[2939],{"type":27,"value":2940},"touch",{"type":21,"tag":1652,"props":2942,"children":2943},{"style":1665},[2944],{"type":27,"value":2945}," content/2.articles.md\n",{"type":21,"tag":78,"props":2947,"children":2948},{},[2949],{"type":27,"value":2950},"The numbered prefix determines the order of the menu items.",{"type":21,"tag":78,"props":2952,"children":2953},{},[2954,2956,2962],{"type":27,"value":2955},"In this file, use the ",{"type":21,"tag":1648,"props":2957,"children":2959},{"className":2958},[],[2960],{"type":27,"value":2961},"articles-list",{"type":27,"value":2963}," component to display the list of articles:",{"type":21,"tag":1641,"props":2965,"children":2969},{"className":2966,"code":2967,"filename":2968,"language":1139,"meta":8,"style":8},"language-md shiki shiki-themes github-light github-dark","---\ntitle: 'Articles'\nlayout: 'page'\n---\n::articles-list\n---\npath: articles\n---\n::\n","2.articles.md",[2970],{"type":21,"tag":1648,"props":2971,"children":2972},{"__ignoreMap":8},[2973,2981,2999,3016,3023,3031,3039,3047,3054],{"type":21,"tag":1652,"props":2974,"children":2975},{"class":1654,"line":1655},[2976],{"type":21,"tag":1652,"props":2977,"children":2978},{"style":2034},[2979],{"type":27,"value":2980},"---\n",{"type":21,"tag":1652,"props":2982,"children":2983},{"class":1654,"line":1128},[2984,2989,2994],{"type":21,"tag":1652,"props":2985,"children":2987},{"style":2986},"--shiki-default:#22863A;--shiki-dark:#85E89D",[2988],{"type":27,"value":96},{"type":21,"tag":1652,"props":2990,"children":2991},{"style":2034},[2992],{"type":27,"value":2993},": ",{"type":21,"tag":1652,"props":2995,"children":2996},{"style":1665},[2997],{"type":27,"value":2998},"'Articles'\n",{"type":21,"tag":1652,"props":3000,"children":3001},{"class":1654,"line":1131},[3002,3007,3011],{"type":21,"tag":1652,"props":3003,"children":3004},{"style":2986},[3005],{"type":27,"value":3006},"layout",{"type":21,"tag":1652,"props":3008,"children":3009},{"style":2034},[3010],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3012,"children":3013},{"style":1665},[3014],{"type":27,"value":3015},"'page'\n",{"type":21,"tag":1652,"props":3017,"children":3018},{"class":1654,"line":2057},[3019],{"type":21,"tag":1652,"props":3020,"children":3021},{"style":2034},[3022],{"type":27,"value":2980},{"type":21,"tag":1652,"props":3024,"children":3025},{"class":1654,"line":2066},[3026],{"type":21,"tag":1652,"props":3027,"children":3028},{"style":2034},[3029],{"type":27,"value":3030},"::articles-list\n",{"type":21,"tag":1652,"props":3032,"children":3033},{"class":1654,"line":2197},[3034],{"type":21,"tag":1652,"props":3035,"children":3037},{"style":3036},"--shiki-default:#005CC5;--shiki-default-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold",[3038],{"type":27,"value":2980},{"type":21,"tag":1652,"props":3040,"children":3041},{"class":1654,"line":2206},[3042],{"type":21,"tag":1652,"props":3043,"children":3044},{"style":2034},[3045],{"type":27,"value":3046},"path: articles\n",{"type":21,"tag":1652,"props":3048,"children":3049},{"class":1654,"line":2215},[3050],{"type":21,"tag":1652,"props":3051,"children":3052},{"style":3036},[3053],{"type":27,"value":2980},{"type":21,"tag":1652,"props":3055,"children":3056},{"class":1654,"line":2232},[3057],{"type":21,"tag":1652,"props":3058,"children":3059},{"style":2034},[3060],{"type":27,"value":3061},"::\n",{"type":21,"tag":78,"props":3063,"children":3064},{},[3065,3066,3072],{"type":27,"value":2090},{"type":21,"tag":1648,"props":3067,"children":3069},{"className":3068},[],[3070],{"type":27,"value":3071},"path",{"type":27,"value":3073}," prop corresponds to the directory where the articles are stored.",{"type":21,"tag":1629,"props":3075,"children":3077},{"id":3076},"display-an-article-in-the-list",[3078],{"type":27,"value":3079},"Display an article in the list",{"type":21,"tag":78,"props":3081,"children":3082},{},[3083,3084,3090],{"type":27,"value":2918},{"type":21,"tag":1648,"props":3085,"children":3087},{"className":3086},[],[3088],{"type":27,"value":3089},"/content/articles",{"type":27,"value":2925},{"type":21,"tag":1641,"props":3092,"children":3094},{"className":1643,"code":3093,"language":1645,"meta":8,"style":8},"mkdir content/articles\ntouch content/articles/1.my-new-article.md\n",[3095],{"type":21,"tag":1648,"props":3096,"children":3097},{"__ignoreMap":8},[3098,3111],{"type":21,"tag":1652,"props":3099,"children":3100},{"class":1654,"line":1655},[3101,3106],{"type":21,"tag":1652,"props":3102,"children":3103},{"style":1659},[3104],{"type":27,"value":3105},"mkdir",{"type":21,"tag":1652,"props":3107,"children":3108},{"style":1665},[3109],{"type":27,"value":3110}," content/articles\n",{"type":21,"tag":1652,"props":3112,"children":3113},{"class":1654,"line":1128},[3114,3118],{"type":21,"tag":1652,"props":3115,"children":3116},{"style":1659},[3117],{"type":27,"value":2940},{"type":21,"tag":1652,"props":3119,"children":3120},{"style":1665},[3121],{"type":27,"value":3122}," content/articles/1.my-new-article.md\n",{"type":21,"tag":78,"props":3124,"children":3125},{},[3126,3128,3134,3136,3142,3144,3150],{"type":27,"value":3127},"For your article to be correctly displayed in the ",{"type":21,"tag":85,"props":3129,"children":3131},{"href":3130},"/articles",[3132],{"type":27,"value":3133},"articles list",{"type":27,"value":3135},", define a ",{"type":21,"tag":1648,"props":3137,"children":3139},{"className":3138},[],[3140],{"type":27,"value":3141},"cover",{"type":27,"value":3143}," and ",{"type":21,"tag":1648,"props":3145,"children":3147},{"className":3146},[],[3148],{"type":27,"value":3149},"date",{"type":27,"value":3151}," property in the frontmatter:",{"type":21,"tag":1641,"props":3153,"children":3158},{"className":3154,"code":3155,"filename":3156,"language":3157,"meta":8,"style":8},"language-yaml shiki shiki-themes github-light github-dark","---\ncover: path/to/cover\ndate: 2022-08-23\n---\n","content/articles/1.my-new-article.md","yaml",[3159],{"type":21,"tag":1648,"props":3160,"children":3161},{"__ignoreMap":8},[3162,3169,3185,3201],{"type":21,"tag":1652,"props":3163,"children":3164},{"class":1654,"line":1655},[3165],{"type":21,"tag":1652,"props":3166,"children":3167},{"style":1659},[3168],{"type":27,"value":2980},{"type":21,"tag":1652,"props":3170,"children":3171},{"class":1654,"line":1128},[3172,3176,3180],{"type":21,"tag":1652,"props":3173,"children":3174},{"style":2986},[3175],{"type":27,"value":3141},{"type":21,"tag":1652,"props":3177,"children":3178},{"style":2034},[3179],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3181,"children":3182},{"style":1665},[3183],{"type":27,"value":3184},"path/to/cover\n",{"type":21,"tag":1652,"props":3186,"children":3187},{"class":1654,"line":1131},[3188,3192,3196],{"type":21,"tag":1652,"props":3189,"children":3190},{"style":2986},[3191],{"type":27,"value":3149},{"type":21,"tag":1652,"props":3193,"children":3194},{"style":2034},[3195],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3197,"children":3198},{"style":1676},[3199],{"type":27,"value":3200},"2022-08-23\n",{"type":21,"tag":1652,"props":3202,"children":3203},{"class":1654,"line":2057},[3204],{"type":21,"tag":1652,"props":3205,"children":3206},{"style":1659},[3207],{"type":27,"value":2980},{"type":21,"tag":78,"props":3209,"children":3210},{},[3211,3212,3217,3219,3225],{"type":27,"value":2090},{"type":21,"tag":1648,"props":3213,"children":3215},{"className":3214},[],[3216],{"type":27,"value":3141},{"type":27,"value":3218}," property can be a local path relative to the ",{"type":21,"tag":1648,"props":3220,"children":3222},{"className":3221},[],[3223],{"type":27,"value":3224},"/public",{"type":27,"value":3226}," directory or an external URL.",{"type":21,"tag":78,"props":3228,"children":3229},{},[3230],{"type":27,"value":3231},"Your article will now be displayed in the list with its filename as a default title.",{"type":21,"tag":1629,"props":3233,"children":3235},{"id":3234},"edit-your-article",[3236],{"type":27,"value":3237},"Edit your article",{"type":21,"tag":78,"props":3239,"children":3240},{},[3241,3243,3248],{"type":27,"value":3242},"Under the frontmatter block, enter a Markdown ",{"type":21,"tag":1648,"props":3244,"children":3246},{"className":3245},[],[3247],{"type":27,"value":22},{"type":27,"value":3249}," tag and a line of text:",{"type":21,"tag":1641,"props":3251,"children":3253},{"className":2966,"code":3252,"filename":3156,"language":1139,"meta":8,"style":8},"---\ncover: path/to/cover\ndate: 2022-08-23\n---\n# An awesome article\nThis article is little by size but big by heart.\n",[3254],{"type":21,"tag":1648,"props":3255,"children":3256},{"__ignoreMap":8},[3257,3264,3279,3294,3301,3309],{"type":21,"tag":1652,"props":3258,"children":3259},{"class":1654,"line":1655},[3260],{"type":21,"tag":1652,"props":3261,"children":3262},{"style":2034},[3263],{"type":27,"value":2980},{"type":21,"tag":1652,"props":3265,"children":3266},{"class":1654,"line":1128},[3267,3271,3275],{"type":21,"tag":1652,"props":3268,"children":3269},{"style":2986},[3270],{"type":27,"value":3141},{"type":21,"tag":1652,"props":3272,"children":3273},{"style":2034},[3274],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3276,"children":3277},{"style":1665},[3278],{"type":27,"value":3184},{"type":21,"tag":1652,"props":3280,"children":3281},{"class":1654,"line":1131},[3282,3286,3290],{"type":21,"tag":1652,"props":3283,"children":3284},{"style":2986},[3285],{"type":27,"value":3149},{"type":21,"tag":1652,"props":3287,"children":3288},{"style":2034},[3289],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3291,"children":3292},{"style":1676},[3293],{"type":27,"value":3200},{"type":21,"tag":1652,"props":3295,"children":3296},{"class":1654,"line":2057},[3297],{"type":21,"tag":1652,"props":3298,"children":3299},{"style":2034},[3300],{"type":27,"value":2980},{"type":21,"tag":1652,"props":3302,"children":3303},{"class":1654,"line":2066},[3304],{"type":21,"tag":1652,"props":3305,"children":3306},{"style":3036},[3307],{"type":27,"value":3308},"# An awesome article\n",{"type":21,"tag":1652,"props":3310,"children":3311},{"class":1654,"line":2197},[3312],{"type":21,"tag":1652,"props":3313,"children":3314},{"style":2034},[3315],{"type":27,"value":3316},"This article is little by size but big by heart.\n",{"type":21,"tag":78,"props":3318,"children":3319},{},[3320],{"type":27,"value":3321},"Your article will now be displayed in the list with the title and description you wrote in Markdown.",{"type":21,"tag":1629,"props":3323,"children":3325},{"id":3324},"override-title-and-description",[3326],{"type":27,"value":3327},"Override title and description",{"type":21,"tag":78,"props":3329,"children":3330},{},[3331,3333,3338,3339,3345],{"type":27,"value":3332},"If you want to change the title and description displayed on the list and in the meta tags of the article, add the ",{"type":21,"tag":1648,"props":3334,"children":3336},{"className":3335},[],[3337],{"type":27,"value":96},{"type":27,"value":3143},{"type":21,"tag":1648,"props":3340,"children":3342},{"className":3341},[],[3343],{"type":27,"value":3344},"description",{"type":27,"value":3346}," property to your frontmatter:",{"type":21,"tag":1641,"props":3348,"children":3350},{"className":2966,"code":3349,"filename":3156,"language":1139,"meta":8,"style":8},"---\ncover: path/to/cover\ndate: 2022-08-23\ntitle: Another title\ndescription: Another description\n---\n",[3351],{"type":21,"tag":1648,"props":3352,"children":3353},{"__ignoreMap":8},[3354,3361,3376,3391,3407,3423],{"type":21,"tag":1652,"props":3355,"children":3356},{"class":1654,"line":1655},[3357],{"type":21,"tag":1652,"props":3358,"children":3359},{"style":2034},[3360],{"type":27,"value":2980},{"type":21,"tag":1652,"props":3362,"children":3363},{"class":1654,"line":1128},[3364,3368,3372],{"type":21,"tag":1652,"props":3365,"children":3366},{"style":2986},[3367],{"type":27,"value":3141},{"type":21,"tag":1652,"props":3369,"children":3370},{"style":2034},[3371],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3373,"children":3374},{"style":1665},[3375],{"type":27,"value":3184},{"type":21,"tag":1652,"props":3377,"children":3378},{"class":1654,"line":1131},[3379,3383,3387],{"type":21,"tag":1652,"props":3380,"children":3381},{"style":2986},[3382],{"type":27,"value":3149},{"type":21,"tag":1652,"props":3384,"children":3385},{"style":2034},[3386],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3388,"children":3389},{"style":1676},[3390],{"type":27,"value":3200},{"type":21,"tag":1652,"props":3392,"children":3393},{"class":1654,"line":2057},[3394,3398,3402],{"type":21,"tag":1652,"props":3395,"children":3396},{"style":2986},[3397],{"type":27,"value":96},{"type":21,"tag":1652,"props":3399,"children":3400},{"style":2034},[3401],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3403,"children":3404},{"style":1665},[3405],{"type":27,"value":3406},"Another title\n",{"type":21,"tag":1652,"props":3408,"children":3409},{"class":1654,"line":2066},[3410,3414,3418],{"type":21,"tag":1652,"props":3411,"children":3412},{"style":2986},[3413],{"type":27,"value":3344},{"type":21,"tag":1652,"props":3415,"children":3416},{"style":2034},[3417],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3419,"children":3420},{"style":1665},[3421],{"type":27,"value":3422},"Another description\n",{"type":21,"tag":1652,"props":3424,"children":3425},{"class":1654,"line":2197},[3426],{"type":21,"tag":1652,"props":3427,"children":3428},{"style":2034},[3429],{"type":27,"value":2980},{"type":21,"tag":78,"props":3431,"children":3432},{},[3433],{"type":27,"value":3434},"You are now ready to edit your article and create new ones!",{"type":21,"tag":1629,"props":3436,"children":3438},{"id":3437},"optional-arguments",[3439],{"type":27,"value":3440},"Optional Arguments",{"type":21,"tag":78,"props":3442,"children":3443},{},[3444],{"type":27,"value":3445},"In the frontmatter block, you can pass additional options for displaying your article, such as displaying badges on the image:",{"type":21,"tag":1641,"props":3447,"children":3449},{"className":2966,"code":3448,"language":1139,"meta":8,"style":8},"---\ncover: path/to/cover\ndate: 2022-08-23\nbadges: [{\n  color: 'white',\n  bg: 'rgba(0, 0, 0, 0.3)',\n  content: 'Technology'\n}]\n---\n",[3450],{"type":21,"tag":1648,"props":3451,"children":3452},{"__ignoreMap":8},[3453,3460,3475,3490,3503,3524,3545,3562,3570],{"type":21,"tag":1652,"props":3454,"children":3455},{"class":1654,"line":1655},[3456],{"type":21,"tag":1652,"props":3457,"children":3458},{"style":2034},[3459],{"type":27,"value":2980},{"type":21,"tag":1652,"props":3461,"children":3462},{"class":1654,"line":1128},[3463,3467,3471],{"type":21,"tag":1652,"props":3464,"children":3465},{"style":2986},[3466],{"type":27,"value":3141},{"type":21,"tag":1652,"props":3468,"children":3469},{"style":2034},[3470],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3472,"children":3473},{"style":1665},[3474],{"type":27,"value":3184},{"type":21,"tag":1652,"props":3476,"children":3477},{"class":1654,"line":1131},[3478,3482,3486],{"type":21,"tag":1652,"props":3479,"children":3480},{"style":2986},[3481],{"type":27,"value":3149},{"type":21,"tag":1652,"props":3483,"children":3484},{"style":2034},[3485],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3487,"children":3488},{"style":1676},[3489],{"type":27,"value":3200},{"type":21,"tag":1652,"props":3491,"children":3492},{"class":1654,"line":2057},[3493,3498],{"type":21,"tag":1652,"props":3494,"children":3495},{"style":2986},[3496],{"type":27,"value":3497},"badges",{"type":21,"tag":1652,"props":3499,"children":3500},{"style":2034},[3501],{"type":27,"value":3502},": [{\n",{"type":21,"tag":1652,"props":3504,"children":3505},{"class":1654,"line":2066},[3506,3511,3515,3520],{"type":21,"tag":1652,"props":3507,"children":3508},{"style":2986},[3509],{"type":27,"value":3510},"  color",{"type":21,"tag":1652,"props":3512,"children":3513},{"style":2034},[3514],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3516,"children":3517},{"style":1665},[3518],{"type":27,"value":3519},"'white'",{"type":21,"tag":1652,"props":3521,"children":3522},{"style":2034},[3523],{"type":27,"value":2160},{"type":21,"tag":1652,"props":3525,"children":3526},{"class":1654,"line":2197},[3527,3532,3536,3541],{"type":21,"tag":1652,"props":3528,"children":3529},{"style":2986},[3530],{"type":27,"value":3531},"  bg",{"type":21,"tag":1652,"props":3533,"children":3534},{"style":2034},[3535],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3537,"children":3538},{"style":1665},[3539],{"type":27,"value":3540},"'rgba(0, 0, 0, 0.3)'",{"type":21,"tag":1652,"props":3542,"children":3543},{"style":2034},[3544],{"type":27,"value":2160},{"type":21,"tag":1652,"props":3546,"children":3547},{"class":1654,"line":2206},[3548,3553,3557],{"type":21,"tag":1652,"props":3549,"children":3550},{"style":2986},[3551],{"type":27,"value":3552},"  content",{"type":21,"tag":1652,"props":3554,"children":3555},{"style":2034},[3556],{"type":27,"value":2993},{"type":21,"tag":1652,"props":3558,"children":3559},{"style":1665},[3560],{"type":27,"value":3561},"'Technology'\n",{"type":21,"tag":1652,"props":3563,"children":3564},{"class":1654,"line":2215},[3565],{"type":21,"tag":1652,"props":3566,"children":3567},{"style":2034},[3568],{"type":27,"value":3569},"}]\n",{"type":21,"tag":1652,"props":3571,"children":3572},{"class":1654,"line":2232},[3573],{"type":21,"tag":1652,"props":3574,"children":3575},{"style":2034},[3576],{"type":27,"value":2980},{"type":21,"tag":1629,"props":3578,"children":3580},{"id":3579},"read-more",[3581],{"type":27,"value":3582},"Read more",{"type":21,"tag":78,"props":3584,"children":3585},{},[3586,3588,3594],{"type":27,"value":3587},"Alpine is a Nuxt theme using the Content module in ",{"type":21,"tag":1648,"props":3589,"children":3591},{"className":3590},[],[3592],{"type":27,"value":3593},"documentDriven",{"type":27,"value":3595}," mode.",{"type":21,"tag":78,"props":3597,"children":3598},{},[3599,3601,3608],{"type":27,"value":3600},"👉 Learn more in the ",{"type":21,"tag":85,"props":3602,"children":3605},{"href":3603,"rel":3604},"https://content.nuxtjs.org/",[1593],[3606],{"type":27,"value":3607},"Nuxt Content documentation",{"type":27,"value":1286},{"type":21,"tag":102,"props":3610,"children":3611},{},[3612],{"type":27,"value":1953},{"title":8,"searchDepth":1128,"depth":1128,"links":3614},[3615,3616,3617,3618,3619,3620],{"id":2910,"depth":1128,"text":2913},{"id":3076,"depth":1128,"text":3079},{"id":3234,"depth":1128,"text":3237},{"id":3324,"depth":1128,"text":3327},{"id":3437,"depth":1128,"text":3440},{"id":3579,"depth":1128,"text":3582},"content:articles:3.write-articles.md","articles/3.write-articles.md","articles/3.write-articles",{"_path":3625,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":3626,"description":3627,"cover":3628,"date":1615,"layout":1616,"body":3629,"_type":1134,"_id":3884,"_source":1136,"_file":3885,"_stem":3886,"_extension":1139},"/articles/design-tokens","Customize Alpine","Leverage the tokens.config.ts to give your identity to Alpine.","/articles/design-tokens.webp",{"type":18,"children":3630,"toc":3882},[3631,3636,3649,3663,3685,3697,3844,3866,3878],{"type":21,"tag":22,"props":3632,"children":3634},{"id":3633},"customize-alpine",[3635],{"type":27,"value":3626},{"type":21,"tag":78,"props":3637,"children":3638},{},[3639,3641,3647],{"type":27,"value":3640},"Leverage the ",{"type":21,"tag":1648,"props":3642,"children":3644},{"className":3643},[],[3645],{"type":27,"value":3646},"tokens.config.ts",{"type":27,"value":3648}," to give your identity to Alpine.",{"type":21,"tag":78,"props":3650,"children":3651},{},[3652,3654,3661],{"type":27,"value":3653},"Look at the ",{"type":21,"tag":85,"props":3655,"children":3658},{"href":3656,"rel":3657},"https://github.com/nuxt-themes/alpine/blob/main/tokens.config.ts",[1593],[3659],{"type":27,"value":3660},"default tokens config",{"type":27,"value":3662}," to check all the Alpine related Design Tokens.",{"type":21,"tag":78,"props":3664,"children":3665},{},[3666,3668,3675,3677,3684],{"type":27,"value":3667},"Alpine is also powered by ",{"type":21,"tag":85,"props":3669,"children":3672},{"href":3670,"rel":3671},"https://www.npmjs.com/package/@nuxt-themes/tokens",[1593],[3673],{"type":27,"value":3674},"@nuxt-themes/tokens",{"type":27,"value":3676},", see the ",{"type":21,"tag":85,"props":3678,"children":3681},{"href":3679,"rel":3680},"https://unpkg.com/@nuxt-themes/tokens@latest/dist/tokens.config.ts",[1593],[3682],{"type":27,"value":3683},"package tokens.config.ts",{"type":27,"value":1286},{"type":21,"tag":78,"props":3686,"children":3687},{},[3688,3690,3695],{"type":27,"value":3689},"You can configure all the theme tokens to change the apperance of Alpine by creating a ",{"type":21,"tag":1648,"props":3691,"children":3693},{"className":3692},[],[3694],{"type":27,"value":3646},{"type":27,"value":3696}," in your project:",{"type":21,"tag":1641,"props":3698,"children":3700},{"className":2006,"code":3699,"language":2008,"meta":8,"style":8},"import { defineTheme } from 'pinceau'\n\nexport default defineTheme({\n  alpine: {\n    body: {\n      // Update the background color in light & dark mode\n      backgroundColor: {\n        initial: '#0f172a',\n        dark: '#f8fafc'\n      }\n    }\n  }\n})\n",[3701],{"type":21,"tag":1648,"props":3702,"children":3703},{"__ignoreMap":8},[3704,3727,3735,3755,3762,3770,3778,3786,3803,3816,3823,3830,3837],{"type":21,"tag":1652,"props":3705,"children":3706},{"class":1654,"line":1655},[3707,3712,3717,3722],{"type":21,"tag":1652,"props":3708,"children":3709},{"style":2018},[3710],{"type":27,"value":3711},"import",{"type":21,"tag":1652,"props":3713,"children":3714},{"style":2034},[3715],{"type":27,"value":3716}," { defineTheme } ",{"type":21,"tag":1652,"props":3718,"children":3719},{"style":2018},[3720],{"type":27,"value":3721},"from",{"type":21,"tag":1652,"props":3723,"children":3724},{"style":1665},[3725],{"type":27,"value":3726}," 'pinceau'\n",{"type":21,"tag":1652,"props":3728,"children":3729},{"class":1654,"line":1128},[3730],{"type":21,"tag":1652,"props":3731,"children":3732},{"emptyLinePlaceholder":73},[3733],{"type":27,"value":3734},"\n",{"type":21,"tag":1652,"props":3736,"children":3737},{"class":1654,"line":1131},[3738,3742,3746,3751],{"type":21,"tag":1652,"props":3739,"children":3740},{"style":2018},[3741],{"type":27,"value":2021},{"type":21,"tag":1652,"props":3743,"children":3744},{"style":2018},[3745],{"type":27,"value":2026},{"type":21,"tag":1652,"props":3747,"children":3748},{"style":1659},[3749],{"type":27,"value":3750}," defineTheme",{"type":21,"tag":1652,"props":3752,"children":3753},{"style":2034},[3754],{"type":27,"value":2037},{"type":21,"tag":1652,"props":3756,"children":3757},{"class":1654,"line":2057},[3758],{"type":21,"tag":1652,"props":3759,"children":3760},{"style":2034},[3761],{"type":27,"value":2045},{"type":21,"tag":1652,"props":3763,"children":3764},{"class":1654,"line":2066},[3765],{"type":21,"tag":1652,"props":3766,"children":3767},{"style":2034},[3768],{"type":27,"value":3769},"    body: {\n",{"type":21,"tag":1652,"props":3771,"children":3772},{"class":1654,"line":2197},[3773],{"type":21,"tag":1652,"props":3774,"children":3775},{"style":2051},[3776],{"type":27,"value":3777},"      // Update the background color in light & dark mode\n",{"type":21,"tag":1652,"props":3779,"children":3780},{"class":1654,"line":2206},[3781],{"type":21,"tag":1652,"props":3782,"children":3783},{"style":2034},[3784],{"type":27,"value":3785},"      backgroundColor: {\n",{"type":21,"tag":1652,"props":3787,"children":3788},{"class":1654,"line":2215},[3789,3794,3799],{"type":21,"tag":1652,"props":3790,"children":3791},{"style":2034},[3792],{"type":27,"value":3793},"        initial: ",{"type":21,"tag":1652,"props":3795,"children":3796},{"style":1665},[3797],{"type":27,"value":3798},"'#0f172a'",{"type":21,"tag":1652,"props":3800,"children":3801},{"style":2034},[3802],{"type":27,"value":2160},{"type":21,"tag":1652,"props":3804,"children":3805},{"class":1654,"line":2232},[3806,3811],{"type":21,"tag":1652,"props":3807,"children":3808},{"style":2034},[3809],{"type":27,"value":3810},"        dark: ",{"type":21,"tag":1652,"props":3812,"children":3813},{"style":1665},[3814],{"type":27,"value":3815},"'#f8fafc'\n",{"type":21,"tag":1652,"props":3817,"children":3818},{"class":1654,"line":2250},[3819],{"type":21,"tag":1652,"props":3820,"children":3821},{"style":2034},[3822],{"type":27,"value":2541},{"type":21,"tag":1652,"props":3824,"children":3825},{"class":1654,"line":2268},[3826],{"type":21,"tag":1652,"props":3827,"children":3828},{"style":2034},[3829],{"type":27,"value":2288},{"type":21,"tag":1652,"props":3831,"children":3832},{"class":1654,"line":2282},[3833],{"type":21,"tag":1652,"props":3834,"children":3835},{"style":2034},[3836],{"type":27,"value":2063},{"type":21,"tag":1652,"props":3838,"children":3839},{"class":1654,"line":2291},[3840],{"type":21,"tag":1652,"props":3841,"children":3842},{"style":2034},[3843],{"type":27,"value":2305},{"type":21,"tag":78,"props":3845,"children":3846},{},[3847,3849,3856,3858,3864],{"type":27,"value":3848},"If you are using ",{"type":21,"tag":85,"props":3850,"children":3853},{"href":3851,"rel":3852},"https://nuxt.studio",[1593],[3854],{"type":27,"value":3855},"Nuxt Studio",{"type":27,"value":3857},", you can use an UI to update the ",{"type":21,"tag":1648,"props":3859,"children":3861},{"className":3860},[],[3862],{"type":27,"value":3863},"token.config.ts",{"type":27,"value":3865}," of your Alpine project:",{"type":21,"tag":78,"props":3867,"children":3868},{},[3869],{"type":21,"tag":85,"props":3870,"children":3872},{"href":3851,"rel":3871},[1593],[3873],{"type":21,"tag":1209,"props":3874,"children":3877},{"alt":3875,"src":3876},"design-tokens-studio.png","/design-tokens-studio.png",[],{"type":21,"tag":102,"props":3879,"children":3880},{},[3881],{"type":27,"value":1953},{"title":8,"searchDepth":1128,"depth":1128,"links":3883},[],"content:articles:4.design-tokens.md","articles/4.design-tokens.md","articles/4.design-tokens",{"_path":3888,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":3889,"description":3890,"cover":3891,"author":3892,"date":1615,"layout":16,"body":3893,"_type":1134,"_id":4957,"_source":1136,"_file":4958,"_stem":4959,"_extension":1139},"/articles/messparkour-sv2","Messparkour SV2","Praxisaufgabe SS2025","https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/schaltungen/oszi.jpg?raw=true",{"name":13,"avatarUrl":14},{"type":18,"children":3894,"toc":4945},[3895,3900,3915,3930,3939,4007,4021,4040,4043,4067,4180,4183,4194,4202,4293,4303,4317,4326,4341,4361,4370,4407,4410,4420,4427,4539,4547,4568,4576,4597,4606,4614,4655,4658,4668,4745,4754,4769,4777,4802,4810,4831,4839,4869,4872,4880,4892,4927],{"type":21,"tag":22,"props":3896,"children":3898},{"id":3897},"messparkour-sv2",[3899],{"type":27,"value":3889},{"type":21,"tag":78,"props":3901,"children":3902},{},[3903,3908,3910],{"type":21,"tag":766,"props":3904,"children":3905},{},[3906],{"type":27,"value":3907},"Verantwortlicher: Marc Nauendorf",{"type":27,"value":3909}," | ",{"type":21,"tag":766,"props":3911,"children":3912},{},[3913],{"type":27,"value":3914},"Bewertung: 50 Punkte (Praxisteil) + 50 Punkte (Theorie) bei Herr Klemm",{"type":21,"tag":1299,"props":3916,"children":3917},{},[3918,3920],{"type":27,"value":3919},"\n  ",{"type":21,"tag":78,"props":3921,"children":3922},{},[3923,3928],{"type":21,"tag":766,"props":3924,"children":3925},{},[3926],{"type":27,"value":3927},"Beide Teile müssen bestanden",{"type":27,"value":3929}," werden um SV2 zu bestehen.",{"type":21,"tag":1629,"props":3931,"children":3933},{"id":3932},"vorwort",[3934],{"type":21,"tag":766,"props":3935,"children":3936},{},[3937],{"type":27,"value":3938},"Vorwort",{"type":21,"tag":39,"props":3940,"children":3942},{"style":3941},"display: flex; align-items: center; gap: 20px;",[3943,3999],{"type":21,"tag":39,"props":3944,"children":3945},{},[3946,3965,3975,3994],{"type":21,"tag":78,"props":3947,"children":3948},{},[3949,3951,3956,3958,3963],{"type":27,"value":3950},"In diesem ",{"type":21,"tag":766,"props":3952,"children":3953},{},[3954],{"type":27,"value":3955},"Praxisteil von Signalverarbeitung 2",{"type":27,"value":3957}," erwartet euch ein spannender Messparkour, der in ",{"type":21,"tag":766,"props":3959,"children":3960},{},[3961],{"type":27,"value":3962},"drei primären Präsenzterminen",{"type":27,"value":3964}," organisiert ist.",{"type":21,"tag":78,"props":3966,"children":3967},{},[3968,3970],{"type":27,"value":3969},"In diesen Terminen könnt ihr eigenständig eure Arbeiten durchführen, wie in den ",{"type":21,"tag":766,"props":3971,"children":3972},{},[3973],{"type":27,"value":3974},"nachfolgenden Abschnitten beschrieben.",{"type":21,"tag":78,"props":3976,"children":3977},{},[3978,3980,3985,3987,3992],{"type":27,"value":3979},"Die Labortermine sind in ",{"type":21,"tag":766,"props":3981,"children":3982},{},[3983],{"type":27,"value":3984},"erster Linie",{"type":27,"value":3986}," dazu gedacht, offene Fragen zu klären, euch während des praktischen Vorgehens zu ",{"type":21,"tag":766,"props":3988,"children":3989},{},[3990],{"type":27,"value":3991},"unterstützen",{"type":27,"value":3993}," und den Übergang von der theoretischen Vorbereitung zur praktischen Anwendung zu erleichtern.",{"type":21,"tag":78,"props":3995,"children":3996},{},[3997],{"type":27,"value":3998},"Ich freue mich auf eure engagierte Mitarbeit und wünsche euch viel Erfolg bei der Durchführung des Messparkours.",{"type":21,"tag":39,"props":4000,"children":4001},{},[4002],{"type":21,"tag":1209,"props":4003,"children":4006},{"src":4004,"alt":4005},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/gif/oszi.gif?raw=true","Oszi GIF",[],{"type":21,"tag":1299,"props":4008,"children":4009},{},[4010,4011],{"type":27,"value":3919},{"type":21,"tag":78,"props":4012,"children":4013},{},[4014,4016],{"type":27,"value":4015},"Bemerkung: Die jenigen die mit ihrem Microcontroller schon anfangen möchte, kann das gerne tun. Man kann die Arbeiten auch mit AtmelChips o.ä. bearbeiten. Wichtig: ",{"type":21,"tag":766,"props":4017,"children":4018},{},[4019],{"type":27,"value":4020},"Das Arduino Framework ist das einzige was ihr nicht nutzen dürft, sonst ist alles erlaubt.",{"type":21,"tag":78,"props":4022,"children":4023},{},[4024,4029,4031],{"type":21,"tag":766,"props":4025,"children":4026},{},[4027],{"type":27,"value":4028},"PS:",{"type":27,"value":4030}," Zugang für Labor bei ",{"type":21,"tag":766,"props":4032,"children":4033},{},[4034],{"type":21,"tag":85,"props":4035,"children":4037},{"href":4036},"https://www.hs-heilbronn.de/de/martin.ballein",[4038],{"type":27,"value":4039},"Herr Ballein",{"type":21,"tag":35,"props":4041,"children":4042},{},[],{"type":21,"tag":78,"props":4044,"children":4045},{},[4046,4051,4052,4056,4065],{"type":21,"tag":766,"props":4047,"children":4048},{},[4049],{"type":27,"value":4050},"Termine:",{"type":27,"value":1271},{"type":21,"tag":4053,"props":4054,"children":4055},"br",{},[],{"type":21,"tag":766,"props":4057,"children":4058},{},[4059],{"type":21,"tag":85,"props":4060,"children":4062},{"href":4061},"https://splan.hs-heilbronn.de/",[4063],{"type":27,"value":4064},"Splan",{"type":27,"value":4066}," | Die Tage die angegeben sind, sind bei euch (SEB3) ohne Kurse.",{"type":21,"tag":4068,"props":4069,"children":4070},"table",{},[4071,4095],{"type":21,"tag":4072,"props":4073,"children":4074},"thead",{},[4075],{"type":21,"tag":4076,"props":4077,"children":4078},"tr",{},[4079,4085,4090],{"type":21,"tag":4080,"props":4081,"children":4082},"th",{},[4083],{"type":27,"value":4084},"Datum",{"type":21,"tag":4080,"props":4086,"children":4087},{},[4088],{"type":27,"value":4089},"Uhrzeit",{"type":21,"tag":4080,"props":4091,"children":4092},{},[4093],{"type":27,"value":4094},"Thema",{"type":21,"tag":4096,"props":4097,"children":4098},"tbody",{},[4099,4118,4135,4152],{"type":21,"tag":4076,"props":4100,"children":4101},{},[4102,4108,4113],{"type":21,"tag":4103,"props":4104,"children":4105},"td",{},[4106],{"type":27,"value":4107},"16.04.25",{"type":21,"tag":4103,"props":4109,"children":4110},{},[4111],{"type":27,"value":4112},"09:45 - 13:00 Uhr",{"type":21,"tag":4103,"props":4114,"children":4115},{},[4116],{"type":27,"value":4117},"Spannungsteiler & Low/High pass filter",{"type":21,"tag":4076,"props":4119,"children":4120},{},[4121,4126,4130],{"type":21,"tag":4103,"props":4122,"children":4123},{},[4124],{"type":27,"value":4125},"30.04.25",{"type":21,"tag":4103,"props":4127,"children":4128},{},[4129],{"type":27,"value":4112},{"type":21,"tag":4103,"props":4131,"children":4132},{},[4133],{"type":27,"value":4134},"I²C",{"type":21,"tag":4076,"props":4136,"children":4137},{},[4138,4143,4147],{"type":21,"tag":4103,"props":4139,"children":4140},{},[4141],{"type":27,"value":4142},"21.05.25",{"type":21,"tag":4103,"props":4144,"children":4145},{},[4146],{"type":27,"value":4112},{"type":21,"tag":4103,"props":4148,"children":4149},{},[4150],{"type":27,"value":4151},"PWM & Servo",{"type":21,"tag":4076,"props":4153,"children":4154},{},[4155,4163,4168],{"type":21,"tag":4103,"props":4156,"children":4157},{},[4158],{"type":21,"tag":766,"props":4159,"children":4160},{},[4161],{"type":27,"value":4162},"Abgabezeitpunkt",{"type":21,"tag":4103,"props":4164,"children":4165},{},[4166],{"type":27,"value":4167},"bis 01.07.2025",{"type":21,"tag":4103,"props":4169,"children":4170},{},[4171],{"type":21,"tag":766,"props":4172,"children":4173},{},[4174],{"type":21,"tag":85,"props":4175,"children":4177},{"href":4176},"https://ilias.hs-heilbronn.de/ilias.php?baseClass=ilrepositorygui&cmdNode=yc:ni&cmdClass=ilObjFolderGUI&ref_id=918744",[4178],{"type":27,"value":4179},"Hochzuladen im Ilias Kurs",{"type":21,"tag":35,"props":4181,"children":4182},{},[],{"type":21,"tag":1629,"props":4184,"children":4186},{"id":4185},"termin-1-spannungsteiler-highlowpass-filter",[4187,4189],{"type":27,"value":4188},"📅 ",{"type":21,"tag":766,"props":4190,"children":4191},{},[4192],{"type":27,"value":4193},"Termin 1: Spannungsteiler & High&LowPass Filter",{"type":21,"tag":78,"props":4195,"children":4196},{},[4197],{"type":21,"tag":766,"props":4198,"children":4199},{},[4200],{"type":27,"value":4201},"Themen:",{"type":21,"tag":4203,"props":4204,"children":4205},"ol",{},[4206,4207,4235,4236],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4208,"children":4209},{},[4210,4211,4216,4217,4234],{"type":27,"value":46},{"type":21,"tag":766,"props":4212,"children":4213},{},[4214],{"type":27,"value":4215},"Spannungsteiler",{"type":27,"value":46},{"type":21,"tag":1844,"props":4218,"children":4219},{},[4220,4222,4227,4228,4233],{"type":27,"value":4221},"\n      ",{"type":21,"tag":1848,"props":4223,"children":4224},{},[4225],{"type":27,"value":4226},"Berechne verschiedene Spannungsteiler-Konfigurationen unter Verwendung von Widerständen.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4229,"children":4230},{},[4231],{"type":27,"value":4232},"Vergleiche die theoretisch berechneten Werte mit praktischen Messungen.",{"type":27,"value":46},{"type":27,"value":3919},{"type":27,"value":3919},{"type":21,"tag":1848,"props":4237,"children":4238},{},[4239,4240,4245,4246,4292],{"type":27,"value":46},{"type":21,"tag":766,"props":4241,"children":4242},{},[4243],{"type":27,"value":4244},"Hoch- und Tiefpassfilter",{"type":27,"value":46},{"type":21,"tag":1844,"props":4247,"children":4248},{},[4249,4250,4255,4256,4261,4262,4291],{"type":27,"value":4221},{"type":21,"tag":1848,"props":4251,"children":4252},{},[4253],{"type":27,"value":4254},"Untersuche den Aufbau und die Funktionsweise von passiven Hoch- und Tiefpassfiltern.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4257,"children":4258},{},[4259],{"type":27,"value":4260},"Berechne die Grenzfrequenz und vergleiche die Ergebnisse.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4263,"children":4264},{},[4265,4271,4272,4281,4282],{"type":21,"tag":4266,"props":4267,"children":4268},"em",{},[4269],{"type":27,"value":4270},"Material & Referenz:",{"type":27,"value":1271},{"type":21,"tag":766,"props":4273,"children":4274},{},[4275],{"type":21,"tag":85,"props":4276,"children":4278},{"href":4277},"https://www.electronics-tutorials.ws/de/filtern/passiver-hochpassfilter.html",[4279],{"type":27,"value":4280},"Passiver Hochpassfilter",{"type":27,"value":1200},{"type":21,"tag":766,"props":4283,"children":4284},{},[4285],{"type":21,"tag":85,"props":4286,"children":4288},{"href":4287},"https://www.youtube.com/watch?v=lagfhNjMuQM",[4289],{"type":27,"value":4290},"Video Tutorial",{"type":27,"value":46},{"type":27,"value":3919},{"type":21,"tag":4294,"props":4295,"children":4297},"h4",{"id":4296},"vorbereitung",[4298],{"type":21,"tag":766,"props":4299,"children":4300},{},[4301],{"type":27,"value":4302},"Vorbereitung",{"type":21,"tag":1844,"props":4304,"children":4305},{},[4306,4307],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4308,"children":4309},{},[4310,4315],{"type":21,"tag":766,"props":4311,"children":4312},{},[4313],{"type":27,"value":4314},"Selbstständiges aneignen der Themen",{"type":27,"value":4316}," High&Low Pass Filter + Spannungsteiler",{"type":21,"tag":4294,"props":4318,"children":4320},{"id":4319},"labortermin",[4321],{"type":21,"tag":766,"props":4322,"children":4323},{},[4324],{"type":27,"value":4325},"LaborTermin",{"type":21,"tag":1844,"props":4327,"children":4328},{},[4329,4330,4335,4336],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4331,"children":4332},{},[4333],{"type":27,"value":4334},"Aufbauen eurer errechneten Schaltungen mit Freqenzgenerator & Netzteil",{"type":27,"value":3919},{"type":21,"tag":1848,"props":4337,"children":4338},{},[4339],{"type":27,"value":4340},"Bearbeiten der Themenfelder mit Osziloskop & Multimeter",{"type":21,"tag":1299,"props":4342,"children":4343},{},[4344,4345],{"type":27,"value":3919},{"type":21,"tag":78,"props":4346,"children":4347},{},[4348,4350,4359],{"type":27,"value":4349},"Am Ende die Ausgabe eines ",{"type":21,"tag":85,"props":4351,"children":4353},{"href":4352},"https://www.raspberrypi.com/documentation/microcontrollers/pico-series.html#pico-1-technical-specification",[4354],{"type":21,"tag":766,"props":4355,"children":4356},{},[4357],{"type":27,"value":4358},"Pi Pico´s",{"type":27,"value":4360}," mit einem I²C Bauteil",{"type":21,"tag":4294,"props":4362,"children":4364},{"id":4363},"nachbereitung",[4365],{"type":21,"tag":766,"props":4366,"children":4367},{},[4368],{"type":27,"value":4369},"Nachbereitung",{"type":21,"tag":1844,"props":4371,"children":4372},{},[4373,4374],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4375,"children":4376},{},[4377,4378,4383,4384,4406],{"type":27,"value":46},{"type":21,"tag":766,"props":4379,"children":4380},{},[4381],{"type":27,"value":4382},"Dokumentation",{"type":27,"value":46},{"type":21,"tag":1844,"props":4385,"children":4386},{},[4387,4388,4393,4394,4399,4400,4405],{"type":27,"value":4221},{"type":21,"tag":1848,"props":4389,"children":4390},{},[4391],{"type":27,"value":4392},"Vergleiche gemessene Spannungswerte mit den Berechnungen.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4395,"children":4396},{},[4397],{"type":27,"value":4398},"Analysiere, wie sich Widerstandsänderungen auf die Kondensator-Entladekurve auswirken.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4401,"children":4402},{},[4403],{"type":27,"value":4404},"PDF o.ä. mit Berechnungen, Messdaten & Fehleranalyse.",{"type":27,"value":46},{"type":27,"value":3919},{"type":21,"tag":35,"props":4408,"children":4409},{},[],{"type":21,"tag":1629,"props":4411,"children":4413},{"id":4412},"termin-2-ic-protokoll-datenpakete",[4414,4415],{"type":27,"value":4188},{"type":21,"tag":766,"props":4416,"children":4417},{},[4418],{"type":27,"value":4419},"Termin 2: I²C Protokoll & DatenPakete",{"type":21,"tag":78,"props":4421,"children":4422},{},[4423],{"type":21,"tag":766,"props":4424,"children":4425},{},[4426],{"type":27,"value":4201},{"type":21,"tag":4203,"props":4428,"children":4429},{},[4430,4431,4480,4481],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4432,"children":4433},{},[4434,4435,4440,4441,4479],{"type":27,"value":46},{"type":21,"tag":766,"props":4436,"children":4437},{},[4438],{"type":27,"value":4439},"I²C Protocoll",{"type":27,"value":46},{"type":21,"tag":1844,"props":4442,"children":4443},{},[4444,4445,4450,4451,4478],{"type":27,"value":4221},{"type":21,"tag":1848,"props":4446,"children":4447},{},[4448],{"type":27,"value":4449},"Adressierung, Clock Speed sowie Read and Write Funktionalitäten.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4452,"children":4453},{},[4454,4458,4459,4468,4469],{"type":21,"tag":4266,"props":4455,"children":4456},{},[4457],{"type":27,"value":4270},{"type":27,"value":1271},{"type":21,"tag":766,"props":4460,"children":4461},{},[4462],{"type":21,"tag":85,"props":4463,"children":4465},{"href":4464},"https://de.wikibooks.org/wiki/C-Programmierung_mit_AVR-GCC/_I2C",[4466],{"type":27,"value":4467},"I²C-Wikibooks",{"type":27,"value":1200},{"type":21,"tag":766,"props":4470,"children":4471},{},[4472],{"type":21,"tag":85,"props":4473,"children":4475},{"href":4474},"https://www.elektronik-kompendium.de/sites/raspberry-pi/2612271.htm",[4476],{"type":27,"value":4477},"Elektronik-Kompendium",{"type":27,"value":46},{"type":27,"value":3919},{"type":27,"value":3919},{"type":21,"tag":1848,"props":4482,"children":4483},{},[4484,4485,4490,4491,4538],{"type":27,"value":46},{"type":21,"tag":766,"props":4486,"children":4487},{},[4488],{"type":27,"value":4489},"Programmieren des Mikrocontrollers",{"type":27,"value":46},{"type":21,"tag":1844,"props":4492,"children":4493},{},[4494,4495,4500,4501,4537],{"type":27,"value":4221},{"type":21,"tag":1848,"props":4496,"children":4497},{},[4498],{"type":27,"value":4499},"Das Programmieren des Mikrocontrollers : Raspberry Pi Pico zur Handhabung des I²C Protokolls.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4502,"children":4503},{},[4504,4508,4509,4518,4519,4527,4528],{"type":21,"tag":4266,"props":4505,"children":4506},{},[4507],{"type":27,"value":4270},{"type":27,"value":1271},{"type":21,"tag":766,"props":4510,"children":4511},{},[4512],{"type":21,"tag":85,"props":4513,"children":4515},{"href":4514},"https://docs.micropython.org/en/latest/rp2/quickref.html#pwm",[4516],{"type":27,"value":4517},"MicroPython-PWM-Tutorials",{"type":27,"value":1200},{"type":21,"tag":766,"props":4520,"children":4521},{},[4522],{"type":21,"tag":85,"props":4523,"children":4524},{"href":4474},[4525],{"type":27,"value":4526},"I²C Micropython",{"type":27,"value":1200},{"type":21,"tag":766,"props":4529,"children":4530},{},[4531],{"type":21,"tag":85,"props":4532,"children":4534},{"href":4533},"https://www.youtube.com/watch?v=092xFEmAS98",[4535],{"type":27,"value":4536},"code_tutorial",{"type":27,"value":46},{"type":27,"value":3919},{"type":21,"tag":4294,"props":4540,"children":4542},{"id":4541},"vorbereitung-1",[4543],{"type":21,"tag":766,"props":4544,"children":4545},{},[4546],{"type":27,"value":4302},{"type":21,"tag":1844,"props":4548,"children":4549},{},[4550,4551,4556,4558],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4552,"children":4553},{},[4554],{"type":27,"value":4555},"Selbstständiges Aneignen der theoretischen Grundlagen zu MicroPython",{"type":27,"value":4557}," \n  ",{"type":21,"tag":1848,"props":4559,"children":4560},{},[4561,4563],{"type":27,"value":4562},"I²C funktionalität herstellen ",{"type":21,"tag":766,"props":4564,"children":4565},{},[4566],{"type":27,"value":4567},"bis zum 2.ten Termin",{"type":21,"tag":4294,"props":4569,"children":4571},{"id":4570},"labortermin-1",[4572],{"type":21,"tag":766,"props":4573,"children":4574},{},[4575],{"type":27,"value":4325},{"type":21,"tag":1844,"props":4577,"children":4578},{},[4579,4580,4591,4592],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4581,"children":4582},{},[4583,4585,4590],{"type":27,"value":4584},"Messtechnische Darstellung, Auslesung und Analyse der I²C Pakete ",{"type":21,"tag":766,"props":4586,"children":4587},{},[4588],{"type":27,"value":4589},"über das Oszilloskop",{"type":27,"value":1286},{"type":27,"value":3919},{"type":21,"tag":1848,"props":4593,"children":4594},{},[4595],{"type":27,"value":4596},"Identifiziere mögliche Fehlerquellen und erstelle Messbilder, die von positiven bis negativen Werten reichen.",{"type":21,"tag":1299,"props":4598,"children":4599},{},[4600,4601],{"type":27,"value":3919},{"type":21,"tag":78,"props":4602,"children":4603},{},[4604],{"type":27,"value":4605},"Am Ende die Ausgabe von einem Servo-Motor für Termin 3",{"type":21,"tag":4294,"props":4607,"children":4609},{"id":4608},"nachbereitung-1",[4610],{"type":21,"tag":766,"props":4611,"children":4612},{},[4613],{"type":27,"value":4369},{"type":21,"tag":1844,"props":4615,"children":4616},{},[4617,4618],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4619,"children":4620},{},[4621,4622,4626,4627,4654],{"type":27,"value":46},{"type":21,"tag":766,"props":4623,"children":4624},{},[4625],{"type":27,"value":4382},{"type":27,"value":46},{"type":21,"tag":1844,"props":4628,"children":4629},{},[4630,4631,4636,4637,4642,4643,4653],{"type":27,"value":4221},{"type":21,"tag":1848,"props":4632,"children":4633},{},[4634],{"type":27,"value":4635},"Festhalten der Oszilloskop- und Multimetermessungen in einem Messprotokoll.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4638,"children":4639},{},[4640],{"type":27,"value":4641},"Analyse von Oszilloskop-Screenshots der SCL- und SDA-Signale.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4644,"children":4645},{},[4646,4648],{"type":27,"value":4647},"Zeigen und Bewerten von ",{"type":21,"tag":766,"props":4649,"children":4650},{},[4651],{"type":27,"value":4652},"Good & Bad Cases",{"type":27,"value":46},{"type":27,"value":3919},{"type":21,"tag":35,"props":4656,"children":4657},{},[],{"type":21,"tag":1629,"props":4659,"children":4661},{"id":4660},"termin-3-servomotorsteuerung-mit-pwm-abschluss",[4662,4663],{"type":27,"value":4188},{"type":21,"tag":766,"props":4664,"children":4665},{},[4666],{"type":27,"value":4667},"Termin 3: Servomotorsteuerung mit PWM (Abschluss)",{"type":21,"tag":39,"props":4669,"children":4670},{"style":3941},[4671,4737],{"type":21,"tag":39,"props":4672,"children":4673},{},[4674],{"type":21,"tag":4203,"props":4675,"children":4676},{},[4677,4678],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4679,"children":4680},{},[4681,4682,4687,4688,4736],{"type":27,"value":46},{"type":21,"tag":766,"props":4683,"children":4684},{},[4685],{"type":27,"value":4686},"Schaltungsdesign und Steuerung",{"type":27,"value":46},{"type":21,"tag":1844,"props":4689,"children":4690},{},[4691,4692,4711,4712,4724,4725,4735],{"type":27,"value":4221},{"type":21,"tag":1848,"props":4693,"children":4694},{},[4695,4697,4702,4704,4709],{"type":27,"value":4696},"Ansteuerung eines ",{"type":21,"tag":766,"props":4698,"children":4699},{},[4700],{"type":27,"value":4701},"Servomotors",{"type":27,"value":4703}," mithilfe von ",{"type":21,"tag":766,"props":4705,"children":4706},{},[4707],{"type":27,"value":4708},"PWM",{"type":27,"value":4710}," auf dem Raspberry Pi Pico.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4713,"children":4714},{},[4715,4717,4722],{"type":27,"value":4716},"Steuerung ",{"type":21,"tag":766,"props":4718,"children":4719},{},[4720],{"type":27,"value":4721},"mit Potentiometer",{"type":27,"value":4723},", um ein einstellbares Eingangssignal zu erzeugen.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4726,"children":4727},{},[4728,4733],{"type":21,"tag":766,"props":4729,"children":4730},{},[4731],{"type":27,"value":4732},"Zusammenhang",{"type":27,"value":4734}," zwischen der Potentiometerstellung (Input) und der resultierenden Servomotorausrichtung (Output) herstellen.",{"type":27,"value":46},{"type":27,"value":3919},{"type":21,"tag":39,"props":4738,"children":4739},{},[4740],{"type":21,"tag":1209,"props":4741,"children":4744},{"src":4742,"alt":4743},"https://github.com/Nr44suessauer/nr44suessauer.github.io/blob/main/nuxt-app/assets/pictures/gif/servo.gif?raw=true","Servo GIF",[],{"type":21,"tag":108,"props":4746,"children":4748},{"id":4747},"praktische-umsetzung",[4749],{"type":21,"tag":766,"props":4750,"children":4751},{},[4752],{"type":27,"value":4753},"Praktische Umsetzung",{"type":21,"tag":1844,"props":4755,"children":4756},{},[4757,4758,4763,4764],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4759,"children":4760},{},[4761],{"type":27,"value":4762},"Implementiere den PWM-Ausgang, um das Steuersignal für den Servomotor zu erzeugen.",{"type":27,"value":3919},{"type":21,"tag":1848,"props":4765,"children":4766},{},[4767],{"type":27,"value":4768},"Setze den Steueralgorithmus in Verbindung mit dem Eingangssignal um, sodass der Servomotor entsprechend ausgerichtet wird.",{"type":21,"tag":4294,"props":4770,"children":4772},{"id":4771},"vorbereitung-2",[4773],{"type":21,"tag":766,"props":4774,"children":4775},{},[4776],{"type":27,"value":4302},{"type":21,"tag":1844,"props":4778,"children":4779},{},[4780,4781,4786,4787],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4782,"children":4783},{},[4784],{"type":27,"value":4785},"Eigenständiges Erarbeiten des Schaltungsdesigns.",{"type":27,"value":3919},{"type":21,"tag":1848,"props":4788,"children":4789},{},[4790,4792,4800],{"type":27,"value":4791},"Aneignung der Funktionen und Steuerungslogik eines ",{"type":21,"tag":766,"props":4793,"children":4794},{},[4795],{"type":21,"tag":85,"props":4796,"children":4798},{"href":4797},"https://www.upesy.com/blogs/tutorials/esp32-servo-motor-sg90-on-micropython",[4799],{"type":27,"value":4701},{"type":27,"value":4801}," (z. B. Winkelbereich, PWM-Spezifikationen).",{"type":21,"tag":4294,"props":4803,"children":4805},{"id":4804},"labortermin-2",[4806],{"type":21,"tag":766,"props":4807,"children":4808},{},[4809],{"type":27,"value":4325},{"type":21,"tag":1844,"props":4811,"children":4812},{},[4813,4814,4819,4820,4825,4826],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4815,"children":4816},{},[4817],{"type":27,"value":4818},"Aufbau der geplanten Schaltung und Integration des Spannungsteilers zur Signalerzeugung. (mit Potentiometer)",{"type":27,"value":3919},{"type":21,"tag":1848,"props":4821,"children":4822},{},[4823],{"type":27,"value":4824},"Erfassung der PWM-Signale und Überprüfung des Versuchsaufbaus.",{"type":27,"value":3919},{"type":21,"tag":1848,"props":4827,"children":4828},{},[4829],{"type":27,"value":4830},"Mapping von Potentiometer auf Grad (Servo)",{"type":21,"tag":4294,"props":4832,"children":4834},{"id":4833},"nachbereitung-2",[4835],{"type":21,"tag":766,"props":4836,"children":4837},{},[4838],{"type":27,"value":4369},{"type":21,"tag":1844,"props":4840,"children":4841},{},[4842,4843],{"type":27,"value":3919},{"type":21,"tag":1848,"props":4844,"children":4845},{},[4846,4847,4851,4852,4868],{"type":27,"value":46},{"type":21,"tag":766,"props":4848,"children":4849},{},[4850],{"type":27,"value":4382},{"type":27,"value":46},{"type":21,"tag":1844,"props":4853,"children":4854},{},[4855,4856,4861,4862,4867],{"type":27,"value":4221},{"type":21,"tag":1848,"props":4857,"children":4858},{},[4859],{"type":27,"value":4860},"Detaillierte Darstellung des Schaltplans, eingesetzten Codes und gesammelten Messdaten.",{"type":27,"value":4221},{"type":21,"tag":1848,"props":4863,"children":4864},{},[4865],{"type":27,"value":4866},"Mathematische Analyse des Zusammenhangs zwischen Eingangssignal und Servomotorposition.",{"type":27,"value":46},{"type":27,"value":3919},{"type":21,"tag":35,"props":4870,"children":4871},{},[],{"type":21,"tag":1629,"props":4873,"children":4875},{"id":4874},"dokumentation",[4876],{"type":21,"tag":766,"props":4877,"children":4878},{},[4879],{"type":27,"value":4382},{"type":21,"tag":78,"props":4881,"children":4882},{},[4883,4885,4890],{"type":27,"value":4884},"Die Dokumentation soll in ",{"type":21,"tag":766,"props":4886,"children":4887},{},[4888],{"type":27,"value":4889},"maximal 10 DIN A4 Seiten",{"type":27,"value":4891}," gehalten werden und umfasst insbesondere folgende Elemente:",{"type":21,"tag":78,"props":4893,"children":4894},{},[4895,4897,4902,4904,4907,4909,4914,4916,4919,4920,4925],{"type":27,"value":4896},"• ",{"type":21,"tag":766,"props":4898,"children":4899},{},[4900],{"type":27,"value":4901},"Messprotokolle",{"type":27,"value":4903},", in denen alle relevanten Messdaten, Beobachtungen und Praxisergebnisse festgehalten werden.",{"type":21,"tag":4053,"props":4905,"children":4906},{},[],{"type":27,"value":4908},"\n• ",{"type":21,"tag":766,"props":4910,"children":4911},{},[4912],{"type":27,"value":4913},"Detaillierte Beschreibungen",{"type":27,"value":4915}," der Versuchsaufbauten, einschließlich der verwendeten Materialien, Schaltungen und angewandten Methoden.",{"type":21,"tag":4053,"props":4917,"children":4918},{},[],{"type":27,"value":4908},{"type":21,"tag":766,"props":4921,"children":4922},{},[4923],{"type":27,"value":4924},"Erkenntnisse und Analysen",{"type":27,"value":4926},", welche die Zusammenhänge zwischen den theoretischen Grundlagen und den praktischen Ergebnissen verdeutlichen.",{"type":21,"tag":78,"props":4928,"children":4929},{},[4930,4935,4937],{"type":21,"tag":766,"props":4931,"children":4932},{},[4933],{"type":27,"value":4934},"Der Abgabezeitpunkt",{"type":27,"value":4936}," | bis 01.07.2025 | ",{"type":21,"tag":766,"props":4938,"children":4939},{},[4940],{"type":21,"tag":85,"props":4941,"children":4942},{"href":4176},[4943],{"type":27,"value":4944},"Hochzuladen hier im Ilias Kurs",{"title":8,"searchDepth":1128,"depth":1128,"links":4946},[4947,4948,4950,4952,4956],{"id":3932,"depth":1128,"text":3938},{"id":4185,"depth":1128,"text":4949},"📅 Termin 1: Spannungsteiler & High&LowPass Filter",{"id":4412,"depth":1128,"text":4951},"📅 Termin 2: I²C Protokoll & DatenPakete",{"id":4660,"depth":1128,"text":4953,"children":4954},"📅 Termin 3: Servomotorsteuerung mit PWM (Abschluss)",[4955],{"id":4747,"depth":1131,"text":4753},{"id":4874,"depth":1128,"text":4382},"content:articles:messparkour-Sv2.md","articles/messparkour-Sv2.md","articles/messparkour-Sv2",1745137629346]